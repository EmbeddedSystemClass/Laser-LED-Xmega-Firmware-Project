
ATxmegaLaserDiode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000076ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000003a0  00802000  000076ba  0000774e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000035d  008023a0  008023a0  00007aee  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00007aee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00007b20  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000cf0  00000000  00000000  00007b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001900a  00000000  00000000  00008850  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000667a  00000000  00000000  0002185a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000064a6  00000000  00000000  00027ed4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00003c1c  00000000  00000000  0002e37c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00009693  00000000  00000000  00031f98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000ba6c  00000000  00000000  0003b62b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000bf8  00000000  00000000  00047097  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8d 02 	jmp	0x51a	; 0x51a <__dtors_end>
       4:	0c 94 06 17 	jmp	0x2e0c	; 0x2e0c <__vector_1>
       8:	0c 94 37 17 	jmp	0x2e6e	; 0x2e6e <__vector_2>
       c:	0c 94 68 17 	jmp	0x2ed0	; 0x2ed0 <__vector_3>
      10:	0c 94 99 17 	jmp	0x2f32	; 0x2f32 <__vector_4>
      14:	0c 94 ca 17 	jmp	0x2f94	; 0x2f94 <__vector_5>
      18:	0c 94 fb 17 	jmp	0x2ff6	; 0x2ff6 <__vector_6>
      1c:	0c 94 2c 18 	jmp	0x3058	; 0x3058 <__vector_7>
      20:	0c 94 5d 18 	jmp	0x30ba	; 0x30ba <__vector_8>
      24:	0c 94 8e 18 	jmp	0x311c	; 0x311c <__vector_9>
      28:	0c 94 bf 18 	jmp	0x317e	; 0x317e <__vector_10>
      2c:	0c 94 f0 18 	jmp	0x31e0	; 0x31e0 <__vector_11>
      30:	0c 94 21 19 	jmp	0x3242	; 0x3242 <__vector_12>
      34:	0c 94 52 19 	jmp	0x32a4	; 0x32a4 <__vector_13>
      38:	0c 94 83 19 	jmp	0x3306	; 0x3306 <__vector_14>
      3c:	0c 94 b4 19 	jmp	0x3368	; 0x3368 <__vector_15>
      40:	0c 94 e5 19 	jmp	0x33ca	; 0x33ca <__vector_16>
      44:	0c 94 16 1a 	jmp	0x342c	; 0x342c <__vector_17>
      48:	0c 94 47 1a 	jmp	0x348e	; 0x348e <__vector_18>
      4c:	0c 94 78 1a 	jmp	0x34f0	; 0x34f0 <__vector_19>
      50:	0c 94 a9 1a 	jmp	0x3552	; 0x3552 <__vector_20>
      54:	0c 94 da 1a 	jmp	0x35b4	; 0x35b4 <__vector_21>
      58:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__vector_22>
      5c:	0c 94 3c 1b 	jmp	0x3678	; 0x3678 <__vector_23>
      60:	0c 94 6d 1b 	jmp	0x36da	; 0x36da <__vector_24>
      64:	0c 94 9e 1b 	jmp	0x373c	; 0x373c <__vector_25>
      68:	0c 94 cf 1b 	jmp	0x379e	; 0x379e <__vector_26>
      6c:	0c 94 00 1c 	jmp	0x3800	; 0x3800 <__vector_27>
      70:	0c 94 31 1c 	jmp	0x3862	; 0x3862 <__vector_28>
      74:	0c 94 62 1c 	jmp	0x38c4	; 0x38c4 <__vector_29>
      78:	0c 94 93 1c 	jmp	0x3926	; 0x3926 <__vector_30>
      7c:	0c 94 c4 1c 	jmp	0x3988	; 0x3988 <__vector_31>
      80:	0c 94 f5 1c 	jmp	0x39ea	; 0x39ea <__vector_32>
      84:	0c 94 26 1d 	jmp	0x3a4c	; 0x3a4c <__vector_33>
      88:	0c 94 57 1d 	jmp	0x3aae	; 0x3aae <__vector_34>
      8c:	0c 94 88 1d 	jmp	0x3b10	; 0x3b10 <__vector_35>
      90:	0c 94 b9 1d 	jmp	0x3b72	; 0x3b72 <__vector_36>
      94:	0c 94 ea 1d 	jmp	0x3bd4	; 0x3bd4 <__vector_37>
      98:	0c 94 1b 1e 	jmp	0x3c36	; 0x3c36 <__vector_38>
      9c:	0c 94 4c 1e 	jmp	0x3c98	; 0x3c98 <__vector_39>
      a0:	0c 94 7d 1e 	jmp	0x3cfa	; 0x3cfa <__vector_40>
      a4:	0c 94 ae 1e 	jmp	0x3d5c	; 0x3d5c <__vector_41>
      a8:	0c 94 df 1e 	jmp	0x3dbe	; 0x3dbe <__vector_42>
      ac:	0c 94 10 1f 	jmp	0x3e20	; 0x3e20 <__vector_43>
      b0:	0c 94 41 1f 	jmp	0x3e82	; 0x3e82 <__vector_44>
      b4:	0c 94 72 1f 	jmp	0x3ee4	; 0x3ee4 <__vector_45>
      b8:	0c 94 a3 1f 	jmp	0x3f46	; 0x3f46 <__vector_46>
      bc:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <__vector_47>
      c0:	0c 94 05 20 	jmp	0x400a	; 0x400a <__vector_48>
      c4:	0c 94 36 20 	jmp	0x406c	; 0x406c <__vector_49>
      c8:	0c 94 67 20 	jmp	0x40ce	; 0x40ce <__vector_50>
      cc:	0c 94 98 20 	jmp	0x4130	; 0x4130 <__vector_51>
      d0:	0c 94 c9 20 	jmp	0x4192	; 0x4192 <__vector_52>
      d4:	0c 94 fa 20 	jmp	0x41f4	; 0x41f4 <__vector_53>
      d8:	0c 94 2b 21 	jmp	0x4256	; 0x4256 <__vector_54>
      dc:	0c 94 5c 21 	jmp	0x42b8	; 0x42b8 <__vector_55>
      e0:	0c 94 8d 21 	jmp	0x431a	; 0x431a <__vector_56>
      e4:	0c 94 be 21 	jmp	0x437c	; 0x437c <__vector_57>
      e8:	0c 94 ef 21 	jmp	0x43de	; 0x43de <__vector_58>
      ec:	0c 94 20 22 	jmp	0x4440	; 0x4440 <__vector_59>
      f0:	0c 94 51 22 	jmp	0x44a2	; 0x44a2 <__vector_60>
      f4:	0c 94 82 22 	jmp	0x4504	; 0x4504 <__vector_61>
      f8:	0c 94 b3 22 	jmp	0x4566	; 0x4566 <__vector_62>
      fc:	0c 94 e4 22 	jmp	0x45c8	; 0x45c8 <__vector_63>
     100:	0c 94 15 23 	jmp	0x462a	; 0x462a <__vector_64>
     104:	0c 94 46 23 	jmp	0x468c	; 0x468c <__vector_65>
     108:	0c 94 77 23 	jmp	0x46ee	; 0x46ee <__vector_66>
     10c:	0c 94 a8 23 	jmp	0x4750	; 0x4750 <__vector_67>
     110:	0c 94 d9 23 	jmp	0x47b2	; 0x47b2 <__vector_68>
     114:	0c 94 0a 24 	jmp	0x4814	; 0x4814 <__vector_69>
     118:	0c 94 3b 24 	jmp	0x4876	; 0x4876 <__vector_70>
     11c:	0c 94 6c 24 	jmp	0x48d8	; 0x48d8 <__vector_71>
     120:	0c 94 9d 24 	jmp	0x493a	; 0x493a <__vector_72>
     124:	0c 94 ce 24 	jmp	0x499c	; 0x499c <__vector_73>
     128:	0c 94 ff 24 	jmp	0x49fe	; 0x49fe <__vector_74>
     12c:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     130:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     134:	0c 94 30 25 	jmp	0x4a60	; 0x4a60 <__vector_77>
     138:	0c 94 61 25 	jmp	0x4ac2	; 0x4ac2 <__vector_78>
     13c:	0c 94 92 25 	jmp	0x4b24	; 0x4b24 <__vector_79>
     140:	0c 94 c3 25 	jmp	0x4b86	; 0x4b86 <__vector_80>
     144:	0c 94 f4 25 	jmp	0x4be8	; 0x4be8 <__vector_81>
     148:	0c 94 25 26 	jmp	0x4c4a	; 0x4c4a <__vector_82>
     14c:	0c 94 56 26 	jmp	0x4cac	; 0x4cac <__vector_83>
     150:	0c 94 87 26 	jmp	0x4d0e	; 0x4d0e <__vector_84>
     154:	0c 94 b8 26 	jmp	0x4d70	; 0x4d70 <__vector_85>
     158:	0c 94 e9 26 	jmp	0x4dd2	; 0x4dd2 <__vector_86>
     15c:	0c 94 1a 27 	jmp	0x4e34	; 0x4e34 <__vector_87>
     160:	0c 94 4b 27 	jmp	0x4e96	; 0x4e96 <__vector_88>
     164:	0c 94 7c 27 	jmp	0x4ef8	; 0x4ef8 <__vector_89>
     168:	0c 94 ad 27 	jmp	0x4f5a	; 0x4f5a <__vector_90>
     16c:	0c 94 de 27 	jmp	0x4fbc	; 0x4fbc <__vector_91>
     170:	0c 94 0f 28 	jmp	0x501e	; 0x501e <__vector_92>
     174:	0c 94 40 28 	jmp	0x5080	; 0x5080 <__vector_93>
     178:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     17c:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     180:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     184:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     188:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     18c:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     190:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     194:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     198:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     19c:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1a0:	0c 94 71 28 	jmp	0x50e2	; 0x50e2 <__vector_104>
     1a4:	0c 94 a2 28 	jmp	0x5144	; 0x5144 <__vector_105>
     1a8:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1ac:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1b0:	0c 94 d3 28 	jmp	0x51a6	; 0x51a6 <__vector_108>
     1b4:	0c 94 04 29 	jmp	0x5208	; 0x5208 <__vector_109>
     1b8:	0c 94 35 29 	jmp	0x526a	; 0x526a <__vector_110>
     1bc:	0c 94 66 29 	jmp	0x52cc	; 0x52cc <__vector_111>
     1c0:	0c 94 97 29 	jmp	0x532e	; 0x532e <__vector_112>
     1c4:	0c 94 c8 29 	jmp	0x5390	; 0x5390 <__vector_113>
     1c8:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1cc:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1d0:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1d4:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1d8:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1dc:	0c 94 f9 29 	jmp	0x53f2	; 0x53f2 <__vector_119>
     1e0:	0c 94 2a 2a 	jmp	0x5454	; 0x5454 <__vector_120>
     1e4:	0c 94 5b 2a 	jmp	0x54b6	; 0x54b6 <__vector_121>
     1e8:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1ec:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1f0:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1f4:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1f8:	0c 94 be 02 	jmp	0x57c	; 0x57c <__bad_interrupt>
     1fc:	d5 03       	fmuls	r21, r21
     1fe:	57 04       	cpc	r5, r7
     200:	57 04       	cpc	r5, r7
     202:	57 04       	cpc	r5, r7
     204:	57 04       	cpc	r5, r7
     206:	57 04       	cpc	r5, r7
     208:	57 04       	cpc	r5, r7
     20a:	da 03       	fmulsu	r21, r18
     20c:	35 04       	cpc	r3, r5
     20e:	57 04       	cpc	r5, r7
     210:	e1 03       	fmuls	r22, r17
     212:	57 04       	cpc	r5, r7
     214:	e8 03       	fmulsu	r22, r16
     216:	57 04       	cpc	r5, r7
     218:	ef 03       	fmulsu	r22, r23
     21a:	57 04       	cpc	r5, r7
     21c:	f6 03       	fmuls	r23, r22
     21e:	57 04       	cpc	r5, r7
     220:	57 04       	cpc	r5, r7
     222:	57 04       	cpc	r5, r7
     224:	57 04       	cpc	r5, r7
     226:	57 04       	cpc	r5, r7
     228:	fd 03       	fmulsu	r23, r21
     22a:	04 04       	cpc	r0, r4
     22c:	0b 04       	cpc	r0, r11
     22e:	12 04       	cpc	r1, r2
     230:	27 04       	cpc	r2, r7
     232:	57 04       	cpc	r5, r7
     234:	19 04       	cpc	r1, r9
     236:	57 04       	cpc	r5, r7
     238:	2e 04       	cpc	r2, r14
     23a:	57 04       	cpc	r5, r7
     23c:	57 04       	cpc	r5, r7
     23e:	57 04       	cpc	r5, r7
     240:	57 04       	cpc	r5, r7
     242:	57 04       	cpc	r5, r7
     244:	57 04       	cpc	r5, r7
     246:	20 04       	cpc	r2, r0
     248:	57 04       	cpc	r5, r7
     24a:	4a 04       	cpc	r4, r10
     24c:	3c 04       	cpc	r3, r12
     24e:	43 04       	cpc	r4, r3
     250:	57 04       	cpc	r5, r7
     252:	57 04       	cpc	r5, r7
     254:	57 04       	cpc	r5, r7
     256:	57 04       	cpc	r5, r7
     258:	57 04       	cpc	r5, r7
     25a:	51 04       	cpc	r5, r1
     25c:	7b 04       	cpc	r7, r11
     25e:	81 04       	cpc	r8, r1
     260:	87 04       	cpc	r8, r7
     262:	8d 04       	cpc	r8, r13
     264:	93 04       	cpc	r9, r3
     266:	99 04       	cpc	r9, r9
     268:	9f 04       	cpc	r9, r15
     26a:	a5 04       	cpc	r10, r5
     26c:	15 05       	cpc	r17, r5
     26e:	b4 04       	cpc	r11, r4
     270:	ba 04       	cpc	r11, r10
     272:	c0 04       	cpc	r12, r0
     274:	c6 04       	cpc	r12, r6
     276:	cc 04       	cpc	r12, r12
     278:	d2 04       	cpc	r13, r2
     27a:	d8 04       	cpc	r13, r8
     27c:	dd 04       	cpc	r13, r13
     27e:	e3 04       	cpc	r14, r3
     280:	09 2f       	mov	r16, r25
     282:	09 2f       	mov	r16, r25
     284:	13 2f       	mov	r17, r19
     286:	1d 2f       	mov	r17, r29
     288:	2d 2f       	mov	r18, r29
     28a:	7d 2f       	mov	r23, r29
     28c:	87 2f       	mov	r24, r23
     28e:	bc 2f       	mov	r27, r28
     290:	bc 2f       	mov	r27, r28
     292:	ba 2f       	mov	r27, r26
     294:	ba 2f       	mov	r27, r26

00000296 <__trampolines_start>:
     296:	0c 94 19 04 	jmp	0x832	; 0x832 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0xc4>
     29a:	0c 94 35 04 	jmp	0x86a	; 0x86a <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0xfc>
     29e:	0c 94 65 34 	jmp	0x68ca	; 0x68ca <_ZN7CTimerC13EnableChannelE19TIMER_CHANNELS_ENUM>
     2a2:	0c 94 7f 37 	jmp	0x6efe	; 0x6efe <_ZN7CTimerF9SetPeriodEj>
     2a6:	0c 94 7d 35 	jmp	0x6afa	; 0x6afa <_ZN8CTimerC116SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>
     2aa:	0c 94 4f 35 	jmp	0x6a9e	; 0x6a9e <_ZN8CTimerC18SetCOMPAEj>
     2ae:	0c 94 02 36 	jmp	0x6c04	; 0x6c04 <_ZN7CTimerD8SetCOMPCEj>
     2b2:	0c 94 63 31 	jmp	0x62c6	; 0x62c6 <_ZN10CDGUSUSART25SetTxInterruptionCallbackEPvPFvS0_E>
     2b6:	0c 94 87 04 	jmp	0x90e	; 0x90e <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x5e>
     2ba:	0c 94 ff 2c 	jmp	0x59fe	; 0x59fe <_ZN16CMBEventsHandler15AllocateBuffersEjj>
     2be:	0c 94 0c 36 	jmp	0x6c18	; 0x6c18 <_ZN7CTimerD14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>
     2c2:	0c 94 b4 04 	jmp	0x968	; 0x968 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0xb8>
     2c6:	0c 94 c2 06 	jmp	0xd84	; 0xd84 <_ZN16CLaserControlApp19OnPWMTimerBLUStaticEPv>
     2ca:	0c 94 02 31 	jmp	0x6204	; 0x6204 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb>
     2ce:	0c 94 8d 04 	jmp	0x91a	; 0x91a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x6a>
     2d2:	0c 94 59 35 	jmp	0x6ab2	; 0x6ab2 <_ZN8CTimerC114SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>
     2d6:	0c 94 aa 36 	jmp	0x6d54	; 0x6d54 <_ZN8CTimerD14StopEv>
     2da:	0c 94 20 04 	jmp	0x840	; 0x840 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0xd2>
     2de:	0c 94 9d 36 	jmp	0x6d3a	; 0x6d3a <_ZN8CTimerD15StartEj>
     2e2:	0c 94 4c 37 	jmp	0x6e98	; 0x6e98 <_ZN7CTimerF5StartEj>
     2e6:	0c 94 4a 04 	jmp	0x894	; 0x894 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x126>
     2ea:	0c 94 98 37 	jmp	0x6f30	; 0x6f30 <_ZN7CTimerF14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>
     2ee:	0c 94 9d 34 	jmp	0x693a	; 0x693a <_ZN7CTimerC14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>
     2f2:	0c 94 07 36 	jmp	0x6c0e	; 0x6c0e <_ZN7CTimerD8SetCOMPDEj>
     2f6:	0c 94 d0 35 	jmp	0x6ba0	; 0x6ba0 <_ZN7CTimerD5StartEj>
     2fa:	0c 94 ae 34 	jmp	0x695c	; 0x695c <_ZN7CTimerC16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>
     2fe:	0c 94 15 05 	jmp	0xa2a	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     302:	0c 94 67 37 	jmp	0x6ece	; 0x6ece <_ZN7CTimerF14DisableChannelE19TIMER_CHANNELS_ENUM>
     306:	0c 94 93 04 	jmp	0x926	; 0x926 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x76>
     30a:	0c 94 fb 36 	jmp	0x6df6	; 0x6df6 <_ZN8CTimerD116SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>
     30e:	0c 94 3c 35 	jmp	0x6a78	; 0x6a78 <_ZN8CTimerC113EnableChannelE19TIMER_CHANNELS_ENUM>
     312:	0c 94 7d 2f 	jmp	0x5efa	; 0x5efa <_ZN9CMBSender13OnReceiveByteEh+0x10e>
     316:	0c 94 e6 2f 	jmp	0x5fcc	; 0x5fcc <_ZN9CMBSender18OnTimeoutInterruptEPv>
     31a:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x100>
     31e:	0c 94 8f 35 	jmp	0x6b1e	; 0x6b1e <_ZN8CTimerC116SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>
     322:	0c 94 a5 06 	jmp	0xd4a	; 0xd4a <_ZN16CLaserControlApp22OnLaserTimerStopStaticEPv>
     326:	0c 94 bc 36 	jmp	0x6d78	; 0x6d78 <_ZN8CTimerD113EnableChannelE19TIMER_CHANNELS_ENUM>
     32a:	0c 94 c6 04 	jmp	0x98c	; 0x98c <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0xdc>
     32e:	0c 94 1d 2f 	jmp	0x5e3a	; 0x5e3a <_ZN9CMBSender13OnReceiveByteEh+0x4e>
     332:	0c 94 a5 04 	jmp	0x94a	; 0x94a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x9a>
     336:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <_ZN8CTimerC18SetCOMPBEj>
     33a:	0c 94 6c 31 	jmp	0x62d8	; 0x62d8 <_ZN10CDGUSUSART12SetDMARxTrigEP13DMA_CH_struct>
     33e:	0c 94 81 04 	jmp	0x902	; 0x902 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x52>
     342:	0c 94 84 37 	jmp	0x6f08	; 0x6f08 <_ZN7CTimerF8SetCOMPAEj>
     346:	0c 94 3d 31 	jmp	0x627a	; 0x627a <_ZN10CDGUSUSART15GetReceivedByteEv>
     34a:	0c 94 5a 31 	jmp	0x62b4	; 0x62b4 <_ZN10CDGUSUSART25SetRxInterruptionCallbackEPvPFvS0_E>
     34e:	0c 94 58 04 	jmp	0x8b0	; 0x8b0 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj>
     352:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x46>
     356:	0c 94 cc 04 	jmp	0x998	; 0x998 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0xe8>
     35a:	0c 94 a9 37 	jmp	0x6f52	; 0x6f52 <_ZN7CTimerF14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>
     35e:	0c 94 50 36 	jmp	0x6ca0	; 0x6ca0 <_ZN7CTimerD16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum>
     362:	0c 94 0b 04 	jmp	0x816	; 0x816 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0xa8>
     366:	0c 94 ba 04 	jmp	0x974	; 0x974 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0xc4>
     36a:	0c 94 40 31 	jmp	0x6280	; 0x6280 <_ZN10CDGUSUSART19SetTransmittingByteEh>
     36e:	0c 94 b5 35 	jmp	0x6b6a	; 0x6b6a <_ZN7CTimerD10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
     372:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <_ZN16CLaserControlApp19OnPWMTimerOVFStaticEPv>
     376:	0c 94 7d 34 	jmp	0x68fa	; 0x68fa <_ZN7CTimerC8SetCOMPBEj>
     37a:	0c 94 43 04 	jmp	0x886	; 0x886 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x118>
     37e:	0c 94 b2 36 	jmp	0x6d64	; 0x6d64 <_ZN8CTimerD15ResetEv>
     382:	0c 94 78 34 	jmp	0x68f0	; 0x68f0 <_ZN7CTimerC8SetCOMPAEj>
     386:	0c 94 76 37 	jmp	0x6eec	; 0x6eec <_ZN7CTimerF12ChannelResetE19TIMER_CHANNELS_ENUM>
     38a:	0c 94 1d 36 	jmp	0x6c3a	; 0x6c3a <_ZN7CTimerD14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>
     38e:	0c 94 35 34 	jmp	0x686a	; 0x686a <_ZN7CTimerC10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
     392:	0c 94 ed 37 	jmp	0x6fda	; 0x6fda <_ZN7CTimerF16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum>
     396:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x3c>
     39a:	0c 94 87 2f 	jmp	0x5f0e	; 0x5f0e <_ZN9CMBSender13OnReceiveByteEh+0x122>
     39e:	0c 94 73 34 	jmp	0x68e6	; 0x68e6 <_ZN7CTimerC9SetPeriodEj>
     3a2:	0c 94 6c 34 	jmp	0x68d8	; 0x68d8 <_ZN7CTimerC14DisableChannelE19TIMER_CHANNELS_ENUM>
     3a6:	0c 94 fd 35 	jmp	0x6bfa	; 0x6bfa <_ZN7CTimerD8SetCOMPBEj>
     3aa:	0c 94 6b 35 	jmp	0x6ad6	; 0x6ad6 <_ZN8CTimerC114SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>
     3ae:	0c 94 c4 2a 	jmp	0x5588	; 0x5588 <_GLOBAL__sub_D_dacSPI>
     3b2:	0c 94 e5 35 	jmp	0x6bca	; 0x6bca <_ZN7CTimerD13EnableChannelE19TIMER_CHANNELS_ENUM>
     3b6:	0c 94 2d 2f 	jmp	0x5e5a	; 0x5e5a <_ZN9CMBSender13OnReceiveByteEh+0x6e>
     3ba:	0c 94 82 34 	jmp	0x6904	; 0x6904 <_ZN7CTimerC8SetCOMPCEj>
     3be:	0c 94 d9 36 	jmp	0x6db2	; 0x6db2 <_ZN8CTimerD114SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>
     3c2:	0c 94 2a 35 	jmp	0x6a54	; 0x6a54 <_ZN8CTimerC14StopEv>
     3c6:	0c 94 59 37 	jmp	0x6eb2	; 0x6eb2 <_ZN7CTimerF4StopEv>
     3ca:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x10a>
     3ce:	0c 94 3c 04 	jmp	0x878	; 0x878 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x10a>
     3d2:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x46>
     3d6:	0c 94 2e 04 	jmp	0x85c	; 0x85c <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0xee>
     3da:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x116>
     3de:	0c 94 89 37 	jmp	0x6f12	; 0x6f12 <_ZN7CTimerF8SetCOMPBEj>
     3e2:	0c 94 dd 35 	jmp	0x6bba	; 0x6bba <_ZN7CTimerD4StopEv>
     3e6:	0c 94 ec 35 	jmp	0x6bd8	; 0x6bd8 <_ZN7CTimerD14DisableChannelE19TIMER_CHANNELS_ENUM>
     3ea:	0c 94 99 04 	jmp	0x932	; 0x932 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x82>
     3ee:	0c 94 27 04 	jmp	0x84e	; 0x84e <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0xe0>
     3f2:	0c 94 59 2e 	jmp	0x5cb2	; 0x5cb2 <_ZN9CMBSender18OnVariableReceivedEjPjj>
     3f6:	0c 94 ba 37 	jmp	0x6f74	; 0x6f74 <_ZN7CTimerF16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>
     3fa:	0c 94 ed 2d 	jmp	0x5bda	; 0x5bda <_ZN16CMBEventsHandler13FillRegDataTxEhPhh>
     3fe:	0c 94 c0 06 	jmp	0xd80	; 0xd80 <_ZN16CLaserControlApp19OnPWMTimerREDStaticEPv>
     402:	0c 94 ee 16 	jmp	0x2ddc	; 0x2ddc <_ZN4CSPI16StaticOnTransmitEPv>
     406:	0c 94 d4 36 	jmp	0x6da8	; 0x6da8 <_ZN8CTimerD18SetCOMPBEj>
     40a:	0c 94 1d 35 	jmp	0x6a3a	; 0x6a3a <_ZN8CTimerC15StartEj>
     40e:	0c 94 c3 36 	jmp	0x6d86	; 0x6d86 <_ZN8CTimerD114DisableChannelE19TIMER_CHANNELS_ENUM>
     412:	0c 94 43 35 	jmp	0x6a86	; 0x6a86 <_ZN8CTimerC114DisableChannelE19TIMER_CHANNELS_ENUM>
     416:	0c 94 65 2c 	jmp	0x58ca	; 0x58ca <_ZN16CMBEventsHandler13FillVarDataTxEjPjj>
     41a:	0c 94 0c 37 	jmp	0x6e18	; 0x6e18 <_ZN8CTimerD116SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>
     41e:	0c 94 5d 34 	jmp	0x68ba	; 0x68ba <_ZN7CTimerC4StopEv>
     422:	0c 94 f3 35 	jmp	0x6be6	; 0x6be6 <_ZN7CTimerD9SetPeriodEj>
     426:	0c 94 ba 2f 	jmp	0x5f74	; 0x5f74 <_ZN9CMBSender13OnReceiveByteEh+0x188>
     42a:	0c 94 bc 2f 	jmp	0x5f78	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
     42e:	0c 94 c0 04 	jmp	0x980	; 0x980 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0xd0>
     432:	0c 94 2e 36 	jmp	0x6c5c	; 0x6c5c <_ZN7CTimerD16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>
     436:	0c 94 50 34 	jmp	0x68a0	; 0x68a0 <_ZN7CTimerC5StartEj>
     43a:	0c 94 b7 03 	jmp	0x76e	; 0x76e <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh>
     43e:	0c 94 75 31 	jmp	0x62ea	; 0x62ea <_ZN10CDGUSUSART12SetDMATxTrigEP13DMA_CH_struct>
     442:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0xf4>
     446:	0c 94 04 04 	jmp	0x808	; 0x808 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x9a>
     44a:	0c 94 88 2d 	jmp	0x5b10	; 0x5b10 <_ZN16CMBEventsHandler13FillVarDataRqEjj>
     44e:	0c 94 ca 36 	jmp	0x6d94	; 0x6d94 <_ZN8CTimerD19SetPeriodEj>
     452:	0c 94 86 36 	jmp	0x6d0c	; 0x6d0c <_ZN8CTimerD110InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
     456:	0c 94 bf 34 	jmp	0x697e	; 0x697e <_ZN7CTimerC16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>
     45a:	0c 94 3f 36 	jmp	0x6c7e	; 0x6c7e <_ZN7CTimerD16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>
     45e:	0c 94 1a 2d 	jmp	0x5a34	; 0x5a34 <_ZN16CMBEventsHandler11FreeBuffersEv>
     462:	0c 94 31 37 	jmp	0x6e62	; 0x6e62 <_ZN7CTimerF10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
     466:	0c 94 93 37 	jmp	0x6f26	; 0x6f26 <_ZN7CTimerF8SetCOMPDEj>
     46a:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x140>
     46e:	0c 94 9f 04 	jmp	0x93e	; 0x93e <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x8e>
     472:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x134>
     476:	0c 94 4b 30 	jmp	0x6096	; 0x6096 <_ZN9CMBSender18OnUSARTTxInterruptEPv>
     47a:	0c 94 28 2d 	jmp	0x5a50	; 0x5a50 <_ZN16CMBEventsHandler13FillRegDataRqEhh>
     47e:	0c 94 43 31 	jmp	0x6286	; 0x6286 <_ZN10CDGUSUSART14IsTransmittingEv>
     482:	0c 94 4b 31 	jmp	0x6296	; 0x6296 <_ZN10CDGUSUSART11IsReceivingEv>
     486:	0c 94 bf 2f 	jmp	0x5f7e	; 0x5f7e <_ZN9CMBSender18OnUSARTRxInterruptEPv>
     48a:	0c 94 09 2f 	jmp	0x5e12	; 0x5e12 <_ZN9CMBSender13OnReceiveByteEh+0x26>
     48e:	0c 94 32 16 	jmp	0x2c64	; 0x2c64 <_ZN16CLaserControlApp12OnINT0StaticEPv>
     492:	0c 94 bd 06 	jmp	0xd7a	; 0xd7a <_ZN16CLaserControlApp19OnPWMTimerCMPStaticEPv>
     496:	0c 94 52 31 	jmp	0x62a4	; 0x62a4 <_ZN10CDGUSUSART11IsDataEmptyEv>
     49a:	0c 94 fd 03 	jmp	0x7fa	; 0x7fa <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x8c>
     49e:	0c 94 61 36 	jmp	0x6cc2	; 0x6cc2 <_ZN7CTimerD16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum>
     4a2:	0c 94 8c 2a 	jmp	0x5518	; 0x5518 <__cxa_pure_virtual>
     4a6:	0c 94 8f 2a 	jmp	0x551e	; 0x551e <_GLOBAL__sub_I_dacSPI>
     4aa:	0c 94 6e 37 	jmp	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
     4ae:	0c 94 ea 36 	jmp	0x6dd4	; 0x6dd4 <_ZN8CTimerD114SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>
     4b2:	0c 94 32 35 	jmp	0x6a64	; 0x6a64 <_ZN8CTimerC15ResetEv>
     4b6:	0c 94 d0 34 	jmp	0x69a0	; 0x69a0 <_ZN7CTimerC16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum>
     4ba:	0c 94 cb 37 	jmp	0x6f96	; 0x6f96 <_ZN7CTimerF16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>
     4be:	0c 94 8c 34 	jmp	0x6918	; 0x6918 <_ZN7CTimerC14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>
     4c2:	0c 94 61 37 	jmp	0x6ec2	; 0x6ec2 <_ZN7CTimerF13EnableChannelE19TIMER_CHANNELS_ENUM>
     4c6:	0c 94 13 2f 	jmp	0x5e26	; 0x5e26 <_ZN9CMBSender13OnReceiveByteEh+0x3a>
     4ca:	0c 94 e1 34 	jmp	0x69c2	; 0x69c2 <_ZN7CTimerC16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum>
     4ce:	0c 94 4a 35 	jmp	0x6a94	; 0x6a94 <_ZN8CTimerC19SetPeriodEj>
     4d2:	0c 94 b6 03 	jmp	0x76c	; 0x76c <_ZN16CLaserControlApp21OnTransactionCallbackEPhj>
     4d6:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <_ZN16CLaserControlApp19OnPWMTimerGRNStaticEPv>
     4da:	0c 94 ec 0e 	jmp	0x1dd8	; 0x1dd8 <_ZN16CLaserControlApp18OnLaserTimerStaticEPv>
     4de:	0c 94 87 34 	jmp	0x690e	; 0x690e <_ZN7CTimerC8SetCOMPDEj>
     4e2:	0c 94 8e 37 	jmp	0x6f1c	; 0x6f1c <_ZN7CTimerF8SetCOMPCEj>
     4e6:	0c 94 ef 03 	jmp	0x7de	; 0x7de <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x70>
     4ea:	0c 94 ff 30 	jmp	0x61fe	; 0x61fe <_ZN9CMBSender21OnTransactionCallbackEPhj>
     4ee:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x54>
     4f2:	0c 94 dc 37 	jmp	0x6fb8	; 0x6fb8 <_ZN7CTimerF16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum>
     4f6:	0c 94 cf 36 	jmp	0x6d9e	; 0x6d9e <_ZN8CTimerD18SetCOMPAEj>
     4fa:	0c 94 06 35 	jmp	0x6a0c	; 0x6a0c <_ZN8CTimerC110InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
     4fe:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x7e>
     502:	0c 94 f8 35 	jmp	0x6bf0	; 0x6bf0 <_ZN7CTimerD8SetCOMPAEj>
     506:	0c 94 12 04 	jmp	0x824	; 0x824 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0xb6>
     50a:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x62>
     50e:	0c 94 7d 15 	jmp	0x2afa	; 0x2afa <_ZN16CLaserControlApp13OnTimerStaticEPv>
     512:	0c 94 68 2e 	jmp	0x5cd0	; 0x5cd0 <_ZN9CMBSender18OnRegisterReceivedEhPhh>

00000516 <__ctors_start>:
     516:	8f 2a       	or	r8, r31

00000518 <__ctors_end>:
     518:	c4 2a       	or	r12, r20

0000051a <__dtors_end>:
     51a:	11 24       	eor	r1, r1
     51c:	1f be       	out	0x3f, r1	; 63
     51e:	cf ef       	ldi	r28, 0xFF	; 255
     520:	cd bf       	out	0x3d, r28	; 61
     522:	df e3       	ldi	r29, 0x3F	; 63
     524:	de bf       	out	0x3e, r29	; 62
     526:	00 e0       	ldi	r16, 0x00	; 0
     528:	0c bf       	out	0x3c, r16	; 60

0000052a <__do_copy_data>:
     52a:	13 e2       	ldi	r17, 0x23	; 35
     52c:	a0 e0       	ldi	r26, 0x00	; 0
     52e:	b0 e2       	ldi	r27, 0x20	; 32
     530:	ea eb       	ldi	r30, 0xBA	; 186
     532:	f6 e7       	ldi	r31, 0x76	; 118
     534:	00 e0       	ldi	r16, 0x00	; 0
     536:	0b bf       	out	0x3b, r16	; 59
     538:	02 c0       	rjmp	.+4      	; 0x53e <__do_copy_data+0x14>
     53a:	07 90       	elpm	r0, Z+
     53c:	0d 92       	st	X+, r0
     53e:	a0 3a       	cpi	r26, 0xA0	; 160
     540:	b1 07       	cpc	r27, r17
     542:	d9 f7       	brne	.-10     	; 0x53a <__do_copy_data+0x10>

00000544 <__do_clear_bss>:
     544:	26 e2       	ldi	r18, 0x26	; 38
     546:	a0 ea       	ldi	r26, 0xA0	; 160
     548:	b3 e2       	ldi	r27, 0x23	; 35
     54a:	01 c0       	rjmp	.+2      	; 0x54e <.do_clear_bss_start>

0000054c <.do_clear_bss_loop>:
     54c:	1d 92       	st	X+, r1

0000054e <.do_clear_bss_start>:
     54e:	ad 3f       	cpi	r26, 0xFD	; 253
     550:	b2 07       	cpc	r27, r18
     552:	e1 f7       	brne	.-8      	; 0x54c <.do_clear_bss_loop>

00000554 <__do_global_ctors>:
     554:	12 e0       	ldi	r17, 0x02	; 2
     556:	cc e8       	ldi	r28, 0x8C	; 140
     558:	d2 e0       	ldi	r29, 0x02	; 2
     55a:	00 e0       	ldi	r16, 0x00	; 0
     55c:	06 c0       	rjmp	.+12     	; 0x56a <__do_global_ctors+0x16>
     55e:	21 97       	sbiw	r28, 0x01	; 1
     560:	01 09       	sbc	r16, r1
     562:	80 2f       	mov	r24, r16
     564:	fe 01       	movw	r30, r28
     566:	0e 94 ac 39 	call	0x7358	; 0x7358 <__tablejump2__>
     56a:	cb 38       	cpi	r28, 0x8B	; 139
     56c:	d1 07       	cpc	r29, r17
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	08 07       	cpc	r16, r24
     572:	a9 f7       	brne	.-22     	; 0x55e <__do_global_ctors+0xa>
     574:	0e 94 f2 2b 	call	0x57e4	; 0x57e4 <main>
     578:	0c 94 4b 3b 	jmp	0x7696	; 0x7696 <__do_global_dtors>

0000057c <__bad_interrupt>:
     57c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000580 <_ZN13CDGUSDatabaseC1Ev>:
	// Read from SRAM
	m_cpSender->StartMODBUSVariableTransaction(vp_addres, length);
	m_cpSender->WaitMODBUSTransmitter();
	m_cpSender->WaitMODBUSListener();
	data_transaction = (uint16_t*)data;
}
     580:	08 95       	ret

00000582 <_ZN13CDGUSDatabaseD1Ev>:
     582:	08 95       	ret

00000584 <_ZN13CDGUSDatabase10InitializeEP9CMBSenderj>:
     584:	fc 01       	movw	r30, r24
     586:	62 83       	std	Z+2, r22	; 0x02
     588:	73 83       	std	Z+3, r23	; 0x03
     58a:	94 2f       	mov	r25, r20
     58c:	85 2f       	mov	r24, r21
     58e:	84 83       	std	Z+4, r24	; 0x04
     590:	95 83       	std	Z+5, r25	; 0x05
     592:	46 83       	std	Z+6, r20	; 0x06
     594:	57 83       	std	Z+7, r21	; 0x07
     596:	10 82       	st	Z, r1
     598:	11 82       	std	Z+1, r1	; 0x01
     59a:	08 95       	ret

0000059c <_ZN13CDGUSDatabase18MapDatabaseToWriteEjmj>:

void CDGUSDatabase::MapDatabaseToWrite(uint16_t vp, uint32_t addr, uint16_t length)
{
     59c:	8f 92       	push	r8
     59e:	9f 92       	push	r9
     5a0:	af 92       	push	r10
     5a2:	bf 92       	push	r11
     5a4:	ef 92       	push	r14
     5a6:	ff 92       	push	r15
     5a8:	0f 93       	push	r16
     5aa:	1f 93       	push	r17
     5ac:	cf 93       	push	r28
     5ae:	df 93       	push	r29
     5b0:	cd b7       	in	r28, 0x3d	; 61
     5b2:	de b7       	in	r29, 0x3e	; 62
     5b4:	2a 97       	sbiw	r28, 0x0a	; 10
     5b6:	cd bf       	out	0x3d, r28	; 61
     5b8:	de bf       	out	0x3e, r29	; 62
     5ba:	7c 01       	movw	r14, r24
	DGUS_WRITETOFLASH FLASH;
	
	FLASH.en = 0x5A;
     5bc:	8a e5       	ldi	r24, 0x5A	; 90
     5be:	89 83       	std	Y+1, r24	; 0x01
	FLASH.op = 0x50;
     5c0:	80 e5       	ldi	r24, 0x50	; 80
     5c2:	8a 83       	std	Y+2, r24	; 0x02
	//FLASH.addr = swap32(addr);
	FLASH.addr = ((addr & 0xff) << 24) | ((addr & 0xff00) << 8) | ((addr & 0xff0000) >> 8) | ((addr & 0xff000000) >> 24);
     5c4:	85 2e       	mov	r8, r21
     5c6:	99 24       	eor	r9, r9
     5c8:	aa 24       	eor	r10, r10
     5ca:	bb 24       	eor	r11, r11
     5cc:	b2 2f       	mov	r27, r18
     5ce:	aa 27       	eor	r26, r26
     5d0:	99 27       	eor	r25, r25
     5d2:	88 27       	eor	r24, r24
     5d4:	88 29       	or	r24, r8
     5d6:	99 29       	or	r25, r9
     5d8:	aa 29       	or	r26, r10
     5da:	bb 29       	or	r27, r11
     5dc:	49 01       	movw	r8, r18
     5de:	5a 01       	movw	r10, r20
     5e0:	88 24       	eor	r8, r8
     5e2:	aa 24       	eor	r10, r10
     5e4:	bb 24       	eor	r11, r11
     5e6:	ba 2c       	mov	r11, r10
     5e8:	a9 2c       	mov	r10, r9
     5ea:	98 2c       	mov	r9, r8
     5ec:	88 24       	eor	r8, r8
     5ee:	88 29       	or	r24, r8
     5f0:	99 29       	or	r25, r9
     5f2:	aa 29       	or	r26, r10
     5f4:	bb 29       	or	r27, r11
     5f6:	49 01       	movw	r8, r18
     5f8:	5a 01       	movw	r10, r20
     5fa:	88 24       	eor	r8, r8
     5fc:	99 24       	eor	r9, r9
     5fe:	bb 24       	eor	r11, r11
     600:	89 2c       	mov	r8, r9
     602:	9a 2c       	mov	r9, r10
     604:	ab 2c       	mov	r10, r11
     606:	bb 24       	eor	r11, r11
     608:	88 29       	or	r24, r8
     60a:	99 29       	or	r25, r9
     60c:	aa 29       	or	r26, r10
     60e:	bb 29       	or	r27, r11
     610:	8b 83       	std	Y+3, r24	; 0x03
     612:	9c 83       	std	Y+4, r25	; 0x04
     614:	ad 83       	std	Y+5, r26	; 0x05
     616:	be 83       	std	Y+6, r27	; 0x06
	//FLASH.addr = ((addr & 0xff) << 8) | ((addr & 0xff00) >> 8) | ((addr & 0xff0000) << 8) | ((addr & 0xff000000) >> 8);
	//FLASH.addr = addr;
	FLASH.vp = (vp >> 8) | (vp << 8);
     618:	76 27       	eor	r23, r22
     61a:	67 27       	eor	r22, r23
     61c:	76 27       	eor	r23, r22
     61e:	6f 83       	std	Y+7, r22	; 0x07
     620:	78 87       	std	Y+8, r23	; 0x08
	FLASH.len = (length >> 8) | (length << 8);
     622:	10 27       	eor	r17, r16
     624:	01 27       	eor	r16, r17
     626:	10 27       	eor	r17, r16
     628:	09 87       	std	Y+9, r16	; 0x09
     62a:	1a 87       	std	Y+10, r17	; 0x0a
	
	// Database enable for reading
	m_cpSender->WriteDataToRegisterAsync(STRUCT_ADDR_WRITETOFLASH, (uint8_t*)&FLASH, sizeof(FLASH));
     62c:	2a e0       	ldi	r18, 0x0A	; 10
     62e:	ae 01       	movw	r20, r28
     630:	4f 5f       	subi	r20, 0xFF	; 255
     632:	5f 4f       	sbci	r21, 0xFF	; 255
     634:	66 e5       	ldi	r22, 0x56	; 86
     636:	f7 01       	movw	r30, r14
     638:	82 81       	ldd	r24, Z+2	; 0x02
     63a:	93 81       	ldd	r25, Z+3	; 0x03
     63c:	0e 94 74 30 	call	0x60e8	; 0x60e8 <_ZN9CMBSender24WriteDataToRegisterAsyncEhPhh>
	m_cpSender->WaitMODBUSTransmitter();
     640:	f7 01       	movw	r30, r14
     642:	82 81       	ldd	r24, Z+2	; 0x02
     644:	93 81       	ldd	r25, Z+3	; 0x03
     646:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
}
     64a:	2a 96       	adiw	r28, 0x0a	; 10
     64c:	cd bf       	out	0x3d, r28	; 61
     64e:	de bf       	out	0x3e, r29	; 62
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	0f 91       	pop	r16
     658:	ff 90       	pop	r15
     65a:	ef 90       	pop	r14
     65c:	bf 90       	pop	r11
     65e:	af 90       	pop	r10
     660:	9f 90       	pop	r9
     662:	8f 90       	pop	r8
     664:	08 95       	ret

00000666 <_ZN13CDGUSDatabase17MapDatabaseToReadEjmj>:

void CDGUSDatabase::MapDatabaseToRead(uint16_t vp, uint32_t addr, uint16_t length)
{
     666:	8f 92       	push	r8
     668:	9f 92       	push	r9
     66a:	af 92       	push	r10
     66c:	bf 92       	push	r11
     66e:	ef 92       	push	r14
     670:	ff 92       	push	r15
     672:	0f 93       	push	r16
     674:	1f 93       	push	r17
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	cd b7       	in	r28, 0x3d	; 61
     67c:	de b7       	in	r29, 0x3e	; 62
     67e:	2a 97       	sbiw	r28, 0x0a	; 10
     680:	cd bf       	out	0x3d, r28	; 61
     682:	de bf       	out	0x3e, r29	; 62
     684:	7c 01       	movw	r14, r24
	DGUS_WRITETOFLASH FLASH;
	
	FLASH.en = 0x5A;
     686:	8a e5       	ldi	r24, 0x5A	; 90
     688:	89 83       	std	Y+1, r24	; 0x01
	FLASH.op = 0xA0;
     68a:	80 ea       	ldi	r24, 0xA0	; 160
     68c:	8a 83       	std	Y+2, r24	; 0x02
	//FLASH.addr = swap32(addr);
	FLASH.addr = ((addr & 0xff) << 24) | ((addr & 0xff00) << 8) | ((addr & 0xff0000) >> 8) | ((addr & 0xff000000) >> 24);
     68e:	85 2e       	mov	r8, r21
     690:	99 24       	eor	r9, r9
     692:	aa 24       	eor	r10, r10
     694:	bb 24       	eor	r11, r11
     696:	b2 2f       	mov	r27, r18
     698:	aa 27       	eor	r26, r26
     69a:	99 27       	eor	r25, r25
     69c:	88 27       	eor	r24, r24
     69e:	88 29       	or	r24, r8
     6a0:	99 29       	or	r25, r9
     6a2:	aa 29       	or	r26, r10
     6a4:	bb 29       	or	r27, r11
     6a6:	49 01       	movw	r8, r18
     6a8:	5a 01       	movw	r10, r20
     6aa:	88 24       	eor	r8, r8
     6ac:	aa 24       	eor	r10, r10
     6ae:	bb 24       	eor	r11, r11
     6b0:	ba 2c       	mov	r11, r10
     6b2:	a9 2c       	mov	r10, r9
     6b4:	98 2c       	mov	r9, r8
     6b6:	88 24       	eor	r8, r8
     6b8:	88 29       	or	r24, r8
     6ba:	99 29       	or	r25, r9
     6bc:	aa 29       	or	r26, r10
     6be:	bb 29       	or	r27, r11
     6c0:	49 01       	movw	r8, r18
     6c2:	5a 01       	movw	r10, r20
     6c4:	88 24       	eor	r8, r8
     6c6:	99 24       	eor	r9, r9
     6c8:	bb 24       	eor	r11, r11
     6ca:	89 2c       	mov	r8, r9
     6cc:	9a 2c       	mov	r9, r10
     6ce:	ab 2c       	mov	r10, r11
     6d0:	bb 24       	eor	r11, r11
     6d2:	88 29       	or	r24, r8
     6d4:	99 29       	or	r25, r9
     6d6:	aa 29       	or	r26, r10
     6d8:	bb 29       	or	r27, r11
     6da:	8b 83       	std	Y+3, r24	; 0x03
     6dc:	9c 83       	std	Y+4, r25	; 0x04
     6de:	ad 83       	std	Y+5, r26	; 0x05
     6e0:	be 83       	std	Y+6, r27	; 0x06
	//FLASH.addr = ((addr & 0xff) << 8) | ((addr & 0xff00) >> 8) | ((addr & 0xff0000) << 8) | ((addr & 0xff000000) >> 8);
	//FLASH.addr = addr;
	FLASH.vp = (vp >> 8) | (vp << 8);
     6e2:	76 27       	eor	r23, r22
     6e4:	67 27       	eor	r22, r23
     6e6:	76 27       	eor	r23, r22
     6e8:	6f 83       	std	Y+7, r22	; 0x07
     6ea:	78 87       	std	Y+8, r23	; 0x08
	FLASH.len = (length >> 8) | (length << 8);
     6ec:	10 27       	eor	r17, r16
     6ee:	01 27       	eor	r16, r17
     6f0:	10 27       	eor	r17, r16
     6f2:	09 87       	std	Y+9, r16	; 0x09
     6f4:	1a 87       	std	Y+10, r17	; 0x0a
	
	// Database enable for reading
	m_cpSender->WriteDataToRegisterAsync(STRUCT_ADDR_WRITETOFLASH, (uint8_t*)&FLASH, sizeof(FLASH));
     6f6:	2a e0       	ldi	r18, 0x0A	; 10
     6f8:	ae 01       	movw	r20, r28
     6fa:	4f 5f       	subi	r20, 0xFF	; 255
     6fc:	5f 4f       	sbci	r21, 0xFF	; 255
     6fe:	66 e5       	ldi	r22, 0x56	; 86
     700:	f7 01       	movw	r30, r14
     702:	82 81       	ldd	r24, Z+2	; 0x02
     704:	93 81       	ldd	r25, Z+3	; 0x03
     706:	0e 94 74 30 	call	0x60e8	; 0x60e8 <_ZN9CMBSender24WriteDataToRegisterAsyncEhPhh>
	m_cpSender->WaitMODBUSTransmitter();
     70a:	f7 01       	movw	r30, r14
     70c:	82 81       	ldd	r24, Z+2	; 0x02
     70e:	93 81       	ldd	r25, Z+3	; 0x03
     710:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
}
     714:	2a 96       	adiw	r28, 0x0a	; 10
     716:	cd bf       	out	0x3d, r28	; 61
     718:	de bf       	out	0x3e, r29	; 62
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	1f 91       	pop	r17
     720:	0f 91       	pop	r16
     722:	ff 90       	pop	r15
     724:	ef 90       	pop	r14
     726:	bf 90       	pop	r11
     728:	af 90       	pop	r10
     72a:	9f 90       	pop	r9
     72c:	8f 90       	pop	r8
     72e:	08 95       	ret

00000730 <_ZN13CDGUSDatabase5UnMapEv>:

void CDGUSDatabase::UnMap()
{
     730:	0f 93       	push	r16
     732:	1f 93       	push	r17
     734:	cf 93       	push	r28
     736:	df 93       	push	r29
     738:	1f 92       	push	r1
     73a:	cd b7       	in	r28, 0x3d	; 61
     73c:	de b7       	in	r29, 0x3e	; 62
     73e:	8c 01       	movw	r16, r24
	uint8_t en = 0x00;
     740:	19 82       	std	Y+1, r1	; 0x01
	m_cpSender->WriteDataToRegisterAsync(STRUCT_ADDR_WRITETOFLASH, (uint8_t*)&en, sizeof(en));
     742:	21 e0       	ldi	r18, 0x01	; 1
     744:	ae 01       	movw	r20, r28
     746:	4f 5f       	subi	r20, 0xFF	; 255
     748:	5f 4f       	sbci	r21, 0xFF	; 255
     74a:	66 e5       	ldi	r22, 0x56	; 86
     74c:	fc 01       	movw	r30, r24
     74e:	82 81       	ldd	r24, Z+2	; 0x02
     750:	93 81       	ldd	r25, Z+3	; 0x03
     752:	0e 94 74 30 	call	0x60e8	; 0x60e8 <_ZN9CMBSender24WriteDataToRegisterAsyncEhPhh>
	m_cpSender->WaitMODBUSTransmitter();
     756:	f8 01       	movw	r30, r16
     758:	82 81       	ldd	r24, Z+2	; 0x02
     75a:	93 81       	ldd	r25, Z+3	; 0x03
     75c:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
}
     760:	0f 90       	pop	r0
     762:	df 91       	pop	r29
     764:	cf 91       	pop	r28
     766:	1f 91       	pop	r17
     768:	0f 91       	pop	r16
     76a:	08 95       	ret

0000076c <_ZN16CLaserControlApp21OnTransactionCallbackEPhj>:
	uint16_t Offset = pstGUI[Profile].m_wEnergyOffset;
	NormalizeStep(Offset, MaxEnergy, step, 20, step_table);
	pstGUI[Profile].m_wEnergyOffset = Offset;
	pstGUI[Profile].m_wEnergyStep = step;
	pstGUI[Profile].m_wEnergyNumSteps = (pstGUI[Profile].m_wMaxEnergy_ - Offset)/step;
}
     76c:	08 95       	ret

0000076e <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh>:
     76e:	dc 01       	movw	r26, r24
     770:	63 30       	cpi	r22, 0x03	; 3
     772:	31 f4       	brne	.+12     	; 0x780 <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x12>
     774:	fa 01       	movw	r30, r20
     776:	81 81       	ldd	r24, Z+1	; 0x01
     778:	1f 96       	adiw	r26, 0x0f	; 15
     77a:	8c 93       	st	X, r24
     77c:	1f 97       	sbiw	r26, 0x0f	; 15
     77e:	06 c0       	rjmp	.+12     	; 0x78c <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x1e>
     780:	66 35       	cpi	r22, 0x56	; 86
     782:	21 f4       	brne	.+8      	; 0x78c <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x1e>
     784:	fa 01       	movw	r30, r20
     786:	80 81       	ld	r24, Z
     788:	80 93 a1 23 	sts	0x23A1, r24	; 0x8023a1 <DatabaseStatusRegister>
     78c:	1f 96       	adiw	r26, 0x0f	; 15
     78e:	4c 91       	ld	r20, X
     790:	1f 97       	sbiw	r26, 0x0f	; 15
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	40 33       	cpi	r20, 0x30	; 48
     796:	51 05       	cpc	r21, r1
     798:	08 f0       	brcs	.+2      	; 0x79c <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x2e>
     79a:	89 c0       	rjmp	.+274    	; 0x8ae <_ZN16CLaserControlApp18OnRegisterReceivedEhPhh+0x140>
     79c:	fa 01       	movw	r30, r20
     79e:	88 27       	eor	r24, r24
     7a0:	e2 50       	subi	r30, 0x02	; 2
     7a2:	ff 4f       	sbci	r31, 0xFF	; 255
     7a4:	8f 4f       	sbci	r24, 0xFF	; 255
     7a6:	0c 94 ac 39 	jmp	0x7358	; 0x7358 <__tablejump2__>
     7aa:	1c 96       	adiw	r26, 0x0c	; 12
     7ac:	1d 92       	st	X+, r1
     7ae:	1c 92       	st	X, r1
     7b0:	1d 97       	sbiw	r26, 0x0d	; 13
     7b2:	08 95       	ret
     7b4:	82 e0       	ldi	r24, 0x02	; 2
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	1c 96       	adiw	r26, 0x0c	; 12
     7ba:	8d 93       	st	X+, r24
     7bc:	9c 93       	st	X, r25
     7be:	1d 97       	sbiw	r26, 0x0d	; 13
     7c0:	08 95       	ret
     7c2:	84 e0       	ldi	r24, 0x04	; 4
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	1c 96       	adiw	r26, 0x0c	; 12
     7c8:	8d 93       	st	X+, r24
     7ca:	9c 93       	st	X, r25
     7cc:	1d 97       	sbiw	r26, 0x0d	; 13
     7ce:	08 95       	ret
     7d0:	88 e0       	ldi	r24, 0x08	; 8
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	1c 96       	adiw	r26, 0x0c	; 12
     7d6:	8d 93       	st	X+, r24
     7d8:	9c 93       	st	X, r25
     7da:	1d 97       	sbiw	r26, 0x0d	; 13
     7dc:	08 95       	ret
     7de:	80 e1       	ldi	r24, 0x10	; 16
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	1c 96       	adiw	r26, 0x0c	; 12
     7e4:	8d 93       	st	X+, r24
     7e6:	9c 93       	st	X, r25
     7e8:	1d 97       	sbiw	r26, 0x0d	; 13
     7ea:	08 95       	ret
     7ec:	80 e2       	ldi	r24, 0x20	; 32
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	1c 96       	adiw	r26, 0x0c	; 12
     7f2:	8d 93       	st	X+, r24
     7f4:	9c 93       	st	X, r25
     7f6:	1d 97       	sbiw	r26, 0x0d	; 13
     7f8:	08 95       	ret
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	93 e0       	ldi	r25, 0x03	; 3
     7fe:	1c 96       	adiw	r26, 0x0c	; 12
     800:	8d 93       	st	X+, r24
     802:	9c 93       	st	X, r25
     804:	1d 97       	sbiw	r26, 0x0d	; 13
     806:	08 95       	ret
     808:	80 e0       	ldi	r24, 0x00	; 0
     80a:	93 e0       	ldi	r25, 0x03	; 3
     80c:	1c 96       	adiw	r26, 0x0c	; 12
     80e:	8d 93       	st	X+, r24
     810:	9c 93       	st	X, r25
     812:	1d 97       	sbiw	r26, 0x0d	; 13
     814:	08 95       	ret
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	92 e0       	ldi	r25, 0x02	; 2
     81a:	1c 96       	adiw	r26, 0x0c	; 12
     81c:	8d 93       	st	X+, r24
     81e:	9c 93       	st	X, r25
     820:	1d 97       	sbiw	r26, 0x0d	; 13
     822:	08 95       	ret
     824:	80 e0       	ldi	r24, 0x00	; 0
     826:	91 e0       	ldi	r25, 0x01	; 1
     828:	1c 96       	adiw	r26, 0x0c	; 12
     82a:	8d 93       	st	X+, r24
     82c:	9c 93       	st	X, r25
     82e:	1d 97       	sbiw	r26, 0x0d	; 13
     830:	08 95       	ret
     832:	80 e0       	ldi	r24, 0x00	; 0
     834:	90 e2       	ldi	r25, 0x20	; 32
     836:	1c 96       	adiw	r26, 0x0c	; 12
     838:	8d 93       	st	X+, r24
     83a:	9c 93       	st	X, r25
     83c:	1d 97       	sbiw	r26, 0x0d	; 13
     83e:	08 95       	ret
     840:	80 e0       	ldi	r24, 0x00	; 0
     842:	90 e3       	ldi	r25, 0x30	; 48
     844:	1c 96       	adiw	r26, 0x0c	; 12
     846:	8d 93       	st	X+, r24
     848:	9c 93       	st	X, r25
     84a:	1d 97       	sbiw	r26, 0x0d	; 13
     84c:	08 95       	ret
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	90 e1       	ldi	r25, 0x10	; 16
     852:	1c 96       	adiw	r26, 0x0c	; 12
     854:	8d 93       	st	X+, r24
     856:	9c 93       	st	X, r25
     858:	1d 97       	sbiw	r26, 0x0d	; 13
     85a:	08 95       	ret
     85c:	80 e0       	ldi	r24, 0x00	; 0
     85e:	90 e4       	ldi	r25, 0x40	; 64
     860:	1c 96       	adiw	r26, 0x0c	; 12
     862:	8d 93       	st	X+, r24
     864:	9c 93       	st	X, r25
     866:	1d 97       	sbiw	r26, 0x0d	; 13
     868:	08 95       	ret
     86a:	80 e0       	ldi	r24, 0x00	; 0
     86c:	95 e0       	ldi	r25, 0x05	; 5
     86e:	1c 96       	adiw	r26, 0x0c	; 12
     870:	8d 93       	st	X+, r24
     872:	9c 93       	st	X, r25
     874:	1d 97       	sbiw	r26, 0x0d	; 13
     876:	08 95       	ret
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	96 e0       	ldi	r25, 0x06	; 6
     87c:	1c 96       	adiw	r26, 0x0c	; 12
     87e:	8d 93       	st	X+, r24
     880:	9c 93       	st	X, r25
     882:	1d 97       	sbiw	r26, 0x0d	; 13
     884:	08 95       	ret
     886:	80 e0       	ldi	r24, 0x00	; 0
     888:	97 e0       	ldi	r25, 0x07	; 7
     88a:	1c 96       	adiw	r26, 0x0c	; 12
     88c:	8d 93       	st	X+, r24
     88e:	9c 93       	st	X, r25
     890:	1d 97       	sbiw	r26, 0x0d	; 13
     892:	08 95       	ret
     894:	80 e4       	ldi	r24, 0x40	; 64
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	1c 96       	adiw	r26, 0x0c	; 12
     89a:	8d 93       	st	X+, r24
     89c:	9c 93       	st	X, r25
     89e:	1d 97       	sbiw	r26, 0x0d	; 13
     8a0:	08 95       	ret
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	94 e0       	ldi	r25, 0x04	; 4
     8a6:	1c 96       	adiw	r26, 0x0c	; 12
     8a8:	8d 93       	st	X+, r24
     8aa:	9c 93       	st	X, r25
     8ac:	1d 97       	sbiw	r26, 0x0d	; 13
     8ae:	08 95       	ret

000008b0 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj>:
     8b0:	cf 92       	push	r12
     8b2:	df 92       	push	r13
     8b4:	ef 92       	push	r14
     8b6:	ff 92       	push	r15
     8b8:	0f 93       	push	r16
     8ba:	1f 93       	push	r17
     8bc:	cf 93       	push	r28
     8be:	df 93       	push	r29
     8c0:	8c 01       	movw	r16, r24
     8c2:	eb 01       	movw	r28, r22
     8c4:	7a 01       	movw	r14, r20
     8c6:	69 01       	movw	r12, r18
     8c8:	fa 01       	movw	r30, r20
     8ca:	80 81       	ld	r24, Z
     8cc:	91 81       	ldd	r25, Z+1	; 0x01
     8ce:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <_Z4swapj>
     8d2:	9c 01       	movw	r18, r24
     8d4:	f2 e0       	ldi	r31, 0x02	; 2
     8d6:	cf 16       	cp	r12, r31
     8d8:	d1 04       	cpc	r13, r1
     8da:	09 f0       	breq	.+2      	; 0x8de <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x2e>
     8dc:	7a c0       	rjmp	.+244    	; 0x9d2 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x122>
     8de:	fe 01       	movw	r30, r28
     8e0:	31 97       	sbiw	r30, 0x01	; 1
     8e2:	e2 31       	cpi	r30, 0x12	; 18
     8e4:	f1 05       	cpc	r31, r1
     8e6:	08 f0       	brcs	.+2      	; 0x8ea <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x3a>
     8e8:	a0 c0       	rjmp	.+320    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     8ea:	88 27       	eor	r24, r24
     8ec:	e2 5d       	subi	r30, 0xD2	; 210
     8ee:	fe 4f       	sbci	r31, 0xFE	; 254
     8f0:	8f 4f       	sbci	r24, 0xFF	; 255
     8f2:	0c 94 ac 39 	jmp	0x7358	; 0x7358 <__tablejump2__>
     8f6:	f8 01       	movw	r30, r16
     8f8:	ee 51       	subi	r30, 0x1E	; 30
     8fa:	ff 4f       	sbci	r31, 0xFF	; 255
     8fc:	20 83       	st	Z, r18
     8fe:	31 83       	std	Z+1, r19	; 0x01
     900:	94 c0       	rjmp	.+296    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     902:	f8 01       	movw	r30, r16
     904:	ec 51       	subi	r30, 0x1C	; 28
     906:	ff 4f       	sbci	r31, 0xFF	; 255
     908:	20 83       	st	Z, r18
     90a:	31 83       	std	Z+1, r19	; 0x01
     90c:	8e c0       	rjmp	.+284    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     90e:	f8 01       	movw	r30, r16
     910:	ea 51       	subi	r30, 0x1A	; 26
     912:	ff 4f       	sbci	r31, 0xFF	; 255
     914:	20 83       	st	Z, r18
     916:	31 83       	std	Z+1, r19	; 0x01
     918:	88 c0       	rjmp	.+272    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     91a:	f8 01       	movw	r30, r16
     91c:	e8 51       	subi	r30, 0x18	; 24
     91e:	ff 4f       	sbci	r31, 0xFF	; 255
     920:	20 83       	st	Z, r18
     922:	31 83       	std	Z+1, r19	; 0x01
     924:	82 c0       	rjmp	.+260    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     926:	f8 01       	movw	r30, r16
     928:	e6 51       	subi	r30, 0x16	; 22
     92a:	ff 4f       	sbci	r31, 0xFF	; 255
     92c:	20 83       	st	Z, r18
     92e:	31 83       	std	Z+1, r19	; 0x01
     930:	7c c0       	rjmp	.+248    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     932:	f8 01       	movw	r30, r16
     934:	e2 51       	subi	r30, 0x12	; 18
     936:	ff 4f       	sbci	r31, 0xFF	; 255
     938:	20 83       	st	Z, r18
     93a:	31 83       	std	Z+1, r19	; 0x01
     93c:	76 c0       	rjmp	.+236    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     93e:	f8 01       	movw	r30, r16
     940:	e4 51       	subi	r30, 0x14	; 20
     942:	ff 4f       	sbci	r31, 0xFF	; 255
     944:	20 83       	st	Z, r18
     946:	31 83       	std	Z+1, r19	; 0x01
     948:	70 c0       	rjmp	.+224    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     94a:	f7 01       	movw	r30, r14
     94c:	60 81       	ld	r22, Z
     94e:	71 81       	ldd	r23, Z+1	; 0x01
     950:	82 81       	ldd	r24, Z+2	; 0x02
     952:	93 81       	ldd	r25, Z+3	; 0x03
     954:	0e 94 6f 16 	call	0x2cde	; 0x2cde <_Z6swap32m>
     958:	f8 01       	movw	r30, r16
     95a:	e6 52       	subi	r30, 0x26	; 38
     95c:	ff 4f       	sbci	r31, 0xFF	; 255
     95e:	60 83       	st	Z, r22
     960:	71 83       	std	Z+1, r23	; 0x01
     962:	82 83       	std	Z+2, r24	; 0x02
     964:	93 83       	std	Z+3, r25	; 0x03
     966:	61 c0       	rjmp	.+194    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     968:	f8 01       	movw	r30, r16
     96a:	ec 50       	subi	r30, 0x0C	; 12
     96c:	ff 4f       	sbci	r31, 0xFF	; 255
     96e:	20 83       	st	Z, r18
     970:	31 83       	std	Z+1, r19	; 0x01
     972:	5b c0       	rjmp	.+182    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     974:	f8 01       	movw	r30, r16
     976:	ea 50       	subi	r30, 0x0A	; 10
     978:	ff 4f       	sbci	r31, 0xFF	; 255
     97a:	20 83       	st	Z, r18
     97c:	31 83       	std	Z+1, r19	; 0x01
     97e:	55 c0       	rjmp	.+170    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     980:	f8 01       	movw	r30, r16
     982:	e8 50       	subi	r30, 0x08	; 8
     984:	ff 4f       	sbci	r31, 0xFF	; 255
     986:	20 83       	st	Z, r18
     988:	31 83       	std	Z+1, r19	; 0x01
     98a:	4f c0       	rjmp	.+158    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     98c:	f8 01       	movw	r30, r16
     98e:	e6 50       	subi	r30, 0x06	; 6
     990:	ff 4f       	sbci	r31, 0xFF	; 255
     992:	20 83       	st	Z, r18
     994:	31 83       	std	Z+1, r19	; 0x01
     996:	49 c0       	rjmp	.+146    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     998:	f8 01       	movw	r30, r16
     99a:	e4 50       	subi	r30, 0x04	; 4
     99c:	ff 4f       	sbci	r31, 0xFF	; 255
     99e:	20 83       	st	Z, r18
     9a0:	31 83       	std	Z+1, r19	; 0x01
     9a2:	43 c0       	rjmp	.+134    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     9a4:	f8 01       	movw	r30, r16
     9a6:	e2 50       	subi	r30, 0x02	; 2
     9a8:	ff 4f       	sbci	r31, 0xFF	; 255
     9aa:	20 83       	st	Z, r18
     9ac:	31 83       	std	Z+1, r19	; 0x01
     9ae:	3d c0       	rjmp	.+122    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     9b0:	f8 01       	movw	r30, r16
     9b2:	f3 95       	inc	r31
     9b4:	20 83       	st	Z, r18
     9b6:	31 83       	std	Z+1, r19	; 0x01
     9b8:	38 c0       	rjmp	.+112    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     9ba:	f8 01       	movw	r30, r16
     9bc:	ee 5f       	subi	r30, 0xFE	; 254
     9be:	fe 4f       	sbci	r31, 0xFE	; 254
     9c0:	20 83       	st	Z, r18
     9c2:	31 83       	std	Z+1, r19	; 0x01
     9c4:	32 c0       	rjmp	.+100    	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     9c6:	f8 01       	movw	r30, r16
     9c8:	ec 5f       	subi	r30, 0xFC	; 252
     9ca:	fe 4f       	sbci	r31, 0xFE	; 254
     9cc:	20 83       	st	Z, r18
     9ce:	31 83       	std	Z+1, r19	; 0x01
     9d0:	2c c0       	rjmp	.+88     	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     9d2:	c1 30       	cpi	r28, 0x01	; 1
     9d4:	d1 05       	cpc	r29, r1
     9d6:	51 f4       	brne	.+20     	; 0x9ec <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x13c>
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	a6 01       	movw	r20, r12
     9de:	b7 01       	movw	r22, r14
     9e0:	c8 01       	movw	r24, r16
     9e2:	8e 51       	subi	r24, 0x1E	; 30
     9e4:	9f 4f       	sbci	r25, 0xFF	; 255
     9e6:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <_Z11ConvertDataPvS_jj>
     9ea:	1f c0       	rjmp	.+62     	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     9ec:	c5 30       	cpi	r28, 0x05	; 5
     9ee:	d1 05       	cpc	r29, r1
     9f0:	51 f4       	brne	.+20     	; 0xa06 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x156>
     9f2:	20 e0       	ldi	r18, 0x00	; 0
     9f4:	30 e0       	ldi	r19, 0x00	; 0
     9f6:	a6 01       	movw	r20, r12
     9f8:	b7 01       	movw	r22, r14
     9fa:	c8 01       	movw	r24, r16
     9fc:	8c 54       	subi	r24, 0x4C	; 76
     9fe:	9f 4f       	sbci	r25, 0xFF	; 255
     a00:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <_Z11ConvertDataPvS_jj>
     a04:	12 c0       	rjmp	.+36     	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     a06:	22 97       	sbiw	r28, 0x02	; 2
     a08:	81 f4       	brne	.+32     	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     a0a:	f8 01       	movw	r30, r16
     a0c:	86 85       	ldd	r24, Z+14	; 0x0e
     a0e:	86 30       	cpi	r24, 0x06	; 6
     a10:	50 f4       	brcc	.+20     	; 0xa26 <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x176>
     a12:	20 e0       	ldi	r18, 0x00	; 0
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	a6 01       	movw	r20, r12
     a18:	b7 01       	movw	r22, r14
     a1a:	c8 01       	movw	r24, r16
     a1c:	8c 51       	subi	r24, 0x1C	; 28
     a1e:	9f 4f       	sbci	r25, 0xFF	; 255
     a20:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <_Z11ConvertDataPvS_jj>
     a24:	02 c0       	rjmp	.+4      	; 0xa2a <_ZN16CLaserControlApp18OnVariableReceivedEjPjj+0x17a>
     a26:	0e 94 6e 33 	call	0x66dc	; 0x66dc <_ZN11CLaserBoard4BeepEv>
     a2a:	df 91       	pop	r29
     a2c:	cf 91       	pop	r28
     a2e:	1f 91       	pop	r17
     a30:	0f 91       	pop	r16
     a32:	ff 90       	pop	r15
     a34:	ef 90       	pop	r14
     a36:	df 90       	pop	r13
     a38:	cf 90       	pop	r12
     a3a:	08 95       	ret

00000a3c <_Z13NormalizeStepRjS_S_jPj>:
     a3c:	8f 92       	push	r8
     a3e:	9f 92       	push	r9
     a40:	af 92       	push	r10
     a42:	bf 92       	push	r11
     a44:	cf 92       	push	r12
     a46:	df 92       	push	r13
     a48:	ef 92       	push	r14
     a4a:	ff 92       	push	r15
     a4c:	0f 93       	push	r16
     a4e:	1f 93       	push	r17
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	6c 01       	movw	r12, r24
     a56:	fb 01       	movw	r30, r22
     a58:	7a 01       	movw	r14, r20
     a5a:	dc 01       	movw	r26, r24
     a5c:	8d 90       	ld	r8, X+
     a5e:	9c 90       	ld	r9, X
     a60:	da 01       	movw	r26, r20
     a62:	cd 91       	ld	r28, X+
     a64:	dc 91       	ld	r29, X
     a66:	c4 01       	movw	r24, r8
     a68:	be 01       	movw	r22, r28
     a6a:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
     a6e:	6c 9f       	mul	r22, r28
     a70:	50 01       	movw	r10, r0
     a72:	6d 9f       	mul	r22, r29
     a74:	b0 0c       	add	r11, r0
     a76:	7c 9f       	mul	r23, r28
     a78:	b0 0c       	add	r11, r0
     a7a:	11 24       	eor	r1, r1
     a7c:	c0 81       	ld	r28, Z
     a7e:	d1 81       	ldd	r29, Z+1	; 0x01
     a80:	c8 19       	sub	r28, r8
     a82:	d9 09       	sbc	r29, r9
     a84:	f8 01       	movw	r30, r16
     a86:	60 81       	ld	r22, Z
     a88:	71 81       	ldd	r23, Z+1	; 0x01
     a8a:	d7 01       	movw	r26, r14
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	ce 01       	movw	r24, r28
     a92:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
     a96:	26 17       	cp	r18, r22
     a98:	37 07       	cpc	r19, r23
     a9a:	60 f4       	brcc	.+24     	; 0xab4 <_Z13NormalizeStepRjS_S_jPj+0x78>
     a9c:	32 96       	adiw	r30, 0x02	; 2
     a9e:	61 91       	ld	r22, Z+
     aa0:	71 91       	ld	r23, Z+
     aa2:	d7 01       	movw	r26, r14
     aa4:	6d 93       	st	X+, r22
     aa6:	7c 93       	st	X, r23
     aa8:	ce 01       	movw	r24, r28
     aaa:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
     aae:	26 17       	cp	r18, r22
     ab0:	37 07       	cpc	r19, r23
     ab2:	a8 f3       	brcs	.-22     	; 0xa9e <_Z13NormalizeStepRjS_S_jPj+0x62>
     ab4:	f6 01       	movw	r30, r12
     ab6:	a0 82       	st	Z, r10
     ab8:	b1 82       	std	Z+1, r11	; 0x01
     aba:	df 91       	pop	r29
     abc:	cf 91       	pop	r28
     abe:	1f 91       	pop	r17
     ac0:	0f 91       	pop	r16
     ac2:	ff 90       	pop	r15
     ac4:	ef 90       	pop	r14
     ac6:	df 90       	pop	r13
     ac8:	cf 90       	pop	r12
     aca:	bf 90       	pop	r11
     acc:	af 90       	pop	r10
     ace:	9f 90       	pop	r9
     ad0:	8f 90       	pop	r8
     ad2:	08 95       	ret

00000ad4 <_ZN16CLaserControlAppC1Ev>:
     ad4:	2a e5       	ldi	r18, 0x5A	; 90
     ad6:	32 e2       	ldi	r19, 0x22	; 34
     ad8:	fc 01       	movw	r30, r24
     ada:	20 83       	st	Z, r18
     adc:	31 83       	std	Z+1, r19	; 0x01
     ade:	08 95       	ret

00000ae0 <_ZN16CLaserControlAppD1Ev>:
     ae0:	2a e5       	ldi	r18, 0x5A	; 90
     ae2:	32 e2       	ldi	r19, 0x22	; 34
     ae4:	fc 01       	movw	r30, r24
     ae6:	20 83       	st	Z, r18
     ae8:	31 83       	std	Z+1, r19	; 0x01
     aea:	0e 94 58 2e 	call	0x5cb0	; 0x5cb0 <_ZN16CMBEventsHandlerD1Ev>
     aee:	08 95       	ret

00000af0 <_ZN16CLaserControlApp18SetLaserDiodePowerEv>:
     af0:	cf 93       	push	r28
     af2:	df 93       	push	r29
     af4:	1f 92       	push	r1
     af6:	1f 92       	push	r1
     af8:	cd b7       	in	r28, 0x3d	; 61
     afa:	de b7       	in	r29, 0x3e	; 62
     afc:	fc 01       	movw	r30, r24
     afe:	e8 52       	subi	r30, 0x28	; 40
     b00:	ff 4f       	sbci	r31, 0xFF	; 255
     b02:	80 81       	ld	r24, Z
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	38 2f       	mov	r19, r24
     b0a:	33 0f       	add	r19, r19
     b0c:	33 0f       	add	r19, r19
     b0e:	36 95       	lsr	r19
     b10:	27 95       	ror	r18
     b12:	36 95       	lsr	r19
     b14:	27 95       	ror	r18
     b16:	36 95       	lsr	r19
     b18:	27 95       	ror	r18
     b1a:	ab e7       	ldi	r26, 0x7B	; 123
     b1c:	b4 e1       	ldi	r27, 0x14	; 20
     b1e:	0e 94 b4 39 	call	0x7368	; 0x7368 <__umulhisi3>
     b22:	96 95       	lsr	r25
     b24:	87 95       	ror	r24
     b26:	88 0f       	add	r24, r24
     b28:	99 1f       	adc	r25, r25
     b2a:	88 0f       	add	r24, r24
     b2c:	99 1f       	adc	r25, r25
     b2e:	89 83       	std	Y+1, r24	; 0x01
     b30:	9a 83       	std	Y+2, r25	; 0x02
     b32:	42 e0       	ldi	r20, 0x02	; 2
     b34:	50 e0       	ldi	r21, 0x00	; 0
     b36:	be 01       	movw	r22, r28
     b38:	6f 5f       	subi	r22, 0xFF	; 255
     b3a:	7f 4f       	sbci	r23, 0xFF	; 255
     b3c:	83 ef       	ldi	r24, 0xF3	; 243
     b3e:	96 e2       	ldi	r25, 0x26	; 38
     b40:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <_ZN4CSPI4SendEPhj>
     b44:	0f 90       	pop	r0
     b46:	0f 90       	pop	r0
     b48:	df 91       	pop	r29
     b4a:	cf 91       	pop	r28
     b4c:	08 95       	ret

00000b4e <_ZN16CLaserControlApp22CalculateLaserSettingsEP24DGUS_LASERPROFILE_STRUCT>:
     b4e:	4f 92       	push	r4
     b50:	5f 92       	push	r5
     b52:	6f 92       	push	r6
     b54:	7f 92       	push	r7
     b56:	af 92       	push	r10
     b58:	bf 92       	push	r11
     b5a:	cf 92       	push	r12
     b5c:	df 92       	push	r13
     b5e:	ef 92       	push	r14
     b60:	ff 92       	push	r15
     b62:	0f 93       	push	r16
     b64:	1f 93       	push	r17
     b66:	cf 93       	push	r28
     b68:	df 93       	push	r29
     b6a:	cd b7       	in	r28, 0x3d	; 61
     b6c:	de b7       	in	r29, 0x3e	; 62
     b6e:	2c 97       	sbiw	r28, 0x0c	; 12
     b70:	cd bf       	out	0x3d, r28	; 61
     b72:	de bf       	out	0x3e, r29	; 62
     b74:	6c 01       	movw	r12, r24
     b76:	fb 01       	movw	r30, r22
     b78:	00 81       	ld	r16, Z
     b7a:	11 81       	ldd	r17, Z+1	; 0x01
     b7c:	88 ee       	ldi	r24, 0xE8	; 232
     b7e:	93 e0       	ldi	r25, 0x03	; 3
     b80:	b8 01       	movw	r22, r16
     b82:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
     b86:	7b 01       	movw	r14, r22
     b88:	22 81       	ldd	r18, Z+2	; 0x02
     b8a:	33 81       	ldd	r19, Z+3	; 0x03
     b8c:	a8 ee       	ldi	r26, 0xE8	; 232
     b8e:	b3 e0       	ldi	r27, 0x03	; 3
     b90:	0e 94 b4 39 	call	0x7368	; 0x7368 <__umulhisi3>
     b94:	97 01       	movw	r18, r14
     b96:	40 e0       	ldi	r20, 0x00	; 0
     b98:	50 e0       	ldi	r21, 0x00	; 0
     b9a:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <__udivmodsi4>
     b9e:	29 01       	movw	r4, r18
     ba0:	3a 01       	movw	r6, r20
     ba2:	8a e6       	ldi	r24, 0x6A	; 106
     ba4:	98 e1       	ldi	r25, 0x18	; 24
     ba6:	b8 01       	movw	r22, r16
     ba8:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
     bac:	8b 01       	movw	r16, r22
     bae:	00 0f       	add	r16, r16
     bb0:	11 1f       	adc	r17, r17
     bb2:	ab 01       	movw	r20, r22
     bb4:	44 0f       	add	r20, r20
     bb6:	55 1f       	adc	r21, r21
     bb8:	44 0f       	add	r20, r20
     bba:	55 1f       	adc	r21, r21
     bbc:	44 0f       	add	r20, r20
     bbe:	55 1f       	adc	r21, r21
     bc0:	04 0f       	add	r16, r20
     bc2:	15 1f       	adc	r17, r21
     bc4:	f6 01       	movw	r30, r12
     bc6:	ee 52       	subi	r30, 0x2E	; 46
     bc8:	ff 4f       	sbci	r31, 0xFF	; 255
     bca:	00 83       	st	Z, r16
     bcc:	11 83       	std	Z+1, r17	; 0x01
     bce:	56 01       	movw	r10, r12
     bd0:	84 ed       	ldi	r24, 0xD4	; 212
     bd2:	a8 0e       	add	r10, r24
     bd4:	b1 1c       	adc	r11, r1
     bd6:	d8 01       	movw	r26, r16
     bd8:	a3 01       	movw	r20, r6
     bda:	92 01       	movw	r18, r4
     bdc:	0e 94 c3 39 	call	0x7386	; 0x7386 <__muluhisi3>
     be0:	28 ee       	ldi	r18, 0xE8	; 232
     be2:	33 e0       	ldi	r19, 0x03	; 3
     be4:	40 e0       	ldi	r20, 0x00	; 0
     be6:	50 e0       	ldi	r21, 0x00	; 0
     be8:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <__udivmodsi4>
     bec:	02 1b       	sub	r16, r18
     bee:	13 0b       	sbc	r17, r19
     bf0:	f5 01       	movw	r30, r10
     bf2:	00 83       	st	Z, r16
     bf4:	11 83       	std	Z+1, r17	; 0x01
     bf6:	32 96       	adiw	r30, 0x02	; 2
     bf8:	e0 82       	st	Z, r14
     bfa:	f1 82       	std	Z+1, r15	; 0x01
     bfc:	86 e0       	ldi	r24, 0x06	; 6
     bfe:	fe 01       	movw	r30, r28
     c00:	37 96       	adiw	r30, 0x07	; 7
     c02:	de 01       	movw	r26, r28
     c04:	11 96       	adiw	r26, 0x01	; 1
     c06:	01 90       	ld	r0, Z+
     c08:	0d 92       	st	X+, r0
     c0a:	8a 95       	dec	r24
     c0c:	e1 f7       	brne	.-8      	; 0xc06 <_ZN16CLaserControlApp22CalculateLaserSettingsEP24DGUS_LASERPROFILE_STRUCT+0xb8>
     c0e:	29 81       	ldd	r18, Y+1	; 0x01
     c10:	3a 81       	ldd	r19, Y+2	; 0x02
     c12:	4b 81       	ldd	r20, Y+3	; 0x03
     c14:	5c 81       	ldd	r21, Y+4	; 0x04
     c16:	6d 81       	ldd	r22, Y+5	; 0x05
     c18:	7e 81       	ldd	r23, Y+6	; 0x06
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	2c 96       	adiw	r28, 0x0c	; 12
     c20:	cd bf       	out	0x3d, r28	; 61
     c22:	de bf       	out	0x3e, r29	; 62
     c24:	df 91       	pop	r29
     c26:	cf 91       	pop	r28
     c28:	1f 91       	pop	r17
     c2a:	0f 91       	pop	r16
     c2c:	ff 90       	pop	r15
     c2e:	ef 90       	pop	r14
     c30:	df 90       	pop	r13
     c32:	cf 90       	pop	r12
     c34:	bf 90       	pop	r11
     c36:	af 90       	pop	r10
     c38:	7f 90       	pop	r7
     c3a:	6f 90       	pop	r6
     c3c:	5f 90       	pop	r5
     c3e:	4f 90       	pop	r4
     c40:	08 95       	ret

00000c42 <_ZN16CLaserControlApp11GetVariableEjj>:
     c42:	cf 93       	push	r28
     c44:	df 93       	push	r29
     c46:	ec 01       	movw	r28, r24
     c48:	c6 5e       	subi	r28, 0xE6	; 230
     c4a:	de 4f       	sbci	r29, 0xFE	; 254
     c4c:	88 81       	ld	r24, Y
     c4e:	99 81       	ldd	r25, Y+1	; 0x01
     c50:	0e 94 c8 30 	call	0x6190	; 0x6190 <_ZN9CMBSender30StartMODBUSVariableTransactionEjh>
     c54:	88 81       	ld	r24, Y
     c56:	99 81       	ldd	r25, Y+1	; 0x01
     c58:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
     c5c:	88 81       	ld	r24, Y
     c5e:	99 81       	ldd	r25, Y+1	; 0x01
     c60:	0e 94 4e 30 	call	0x609c	; 0x609c <_ZN9CMBSender18WaitMODBUSListenerEv>
     c64:	df 91       	pop	r29
     c66:	cf 91       	pop	r28
     c68:	08 95       	ret

00000c6a <_ZN16CLaserControlApp11SetVariableEjPjj>:
     c6a:	cf 93       	push	r28
     c6c:	df 93       	push	r29
     c6e:	ec 01       	movw	r28, r24
     c70:	c6 5e       	subi	r28, 0xE6	; 230
     c72:	de 4f       	sbci	r29, 0xFE	; 254
     c74:	88 81       	ld	r24, Y
     c76:	99 81       	ldd	r25, Y+1	; 0x01
     c78:	0e 94 83 30 	call	0x6106	; 0x6106 <_ZN9CMBSender20WriteDataToSRAMAsyncEjPjj>
     c7c:	88 81       	ld	r24, Y
     c7e:	99 81       	ldd	r25, Y+1	; 0x01
     c80:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
     c84:	df 91       	pop	r29
     c86:	cf 91       	pop	r28
     c88:	08 95       	ret

00000c8a <_ZN16CLaserControlApp12SetPictureIdEj>:
     c8a:	0f 93       	push	r16
     c8c:	1f 93       	push	r17
     c8e:	cf 93       	push	r28
     c90:	df 93       	push	r29
     c92:	1f 92       	push	r1
     c94:	1f 92       	push	r1
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62
     c9a:	8c 01       	movw	r16, r24
     c9c:	cb 01       	movw	r24, r22
     c9e:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <_Z4swapj>
     ca2:	89 83       	std	Y+1, r24	; 0x01
     ca4:	9a 83       	std	Y+2, r25	; 0x02
     ca6:	06 5e       	subi	r16, 0xE6	; 230
     ca8:	1e 4f       	sbci	r17, 0xFE	; 254
     caa:	22 e0       	ldi	r18, 0x02	; 2
     cac:	ae 01       	movw	r20, r28
     cae:	4f 5f       	subi	r20, 0xFF	; 255
     cb0:	5f 4f       	sbci	r21, 0xFF	; 255
     cb2:	63 e0       	ldi	r22, 0x03	; 3
     cb4:	f8 01       	movw	r30, r16
     cb6:	80 81       	ld	r24, Z
     cb8:	91 81       	ldd	r25, Z+1	; 0x01
     cba:	0e 94 74 30 	call	0x60e8	; 0x60e8 <_ZN9CMBSender24WriteDataToRegisterAsyncEhPhh>
     cbe:	f8 01       	movw	r30, r16
     cc0:	80 81       	ld	r24, Z
     cc2:	91 81       	ldd	r25, Z+1	; 0x01
     cc4:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
     cc8:	0f 90       	pop	r0
     cca:	0f 90       	pop	r0
     ccc:	df 91       	pop	r29
     cce:	cf 91       	pop	r28
     cd0:	1f 91       	pop	r17
     cd2:	0f 91       	pop	r16
     cd4:	08 95       	ret

00000cd6 <_ZN16CLaserControlApp12OnLaserTimerEv>:
     cd6:	fc 01       	movw	r30, r24
     cd8:	e6 52       	subi	r30, 0x26	; 38
     cda:	ff 4f       	sbci	r31, 0xFF	; 255
     cdc:	40 81       	ld	r20, Z
     cde:	51 81       	ldd	r21, Z+1	; 0x01
     ce0:	62 81       	ldd	r22, Z+2	; 0x02
     ce2:	73 81       	ldd	r23, Z+3	; 0x03
     ce4:	4f 5f       	subi	r20, 0xFF	; 255
     ce6:	5f 4f       	sbci	r21, 0xFF	; 255
     ce8:	6f 4f       	sbci	r22, 0xFF	; 255
     cea:	7f 4f       	sbci	r23, 0xFF	; 255
     cec:	40 83       	st	Z, r20
     cee:	51 83       	std	Z+1, r21	; 0x01
     cf0:	62 83       	std	Z+2, r22	; 0x02
     cf2:	73 83       	std	Z+3, r23	; 0x03
     cf4:	34 96       	adiw	r30, 0x04	; 4
     cf6:	40 81       	ld	r20, Z
     cf8:	51 81       	ldd	r21, Z+1	; 0x01
     cfa:	62 81       	ldd	r22, Z+2	; 0x02
     cfc:	73 81       	ldd	r23, Z+3	; 0x03
     cfe:	4f 5f       	subi	r20, 0xFF	; 255
     d00:	5f 4f       	sbci	r21, 0xFF	; 255
     d02:	6f 4f       	sbci	r22, 0xFF	; 255
     d04:	7f 4f       	sbci	r23, 0xFF	; 255
     d06:	40 83       	st	Z, r20
     d08:	51 83       	std	Z+1, r21	; 0x01
     d0a:	62 83       	std	Z+2, r22	; 0x02
     d0c:	73 83       	std	Z+3, r23	; 0x03
     d0e:	38 97       	sbiw	r30, 0x08	; 8
     d10:	40 81       	ld	r20, Z
     d12:	51 81       	ldd	r21, Z+1	; 0x01
     d14:	45 36       	cpi	r20, 0x65	; 101
     d16:	51 05       	cpc	r21, r1
     d18:	50 f0       	brcs	.+20     	; 0xd2e <_ZN16CLaserControlApp12OnLaserTimerEv+0x58>
     d1a:	20 e0       	ldi	r18, 0x00	; 0
     d1c:	42 e3       	ldi	r20, 0x32	; 50
     d1e:	50 e0       	ldi	r21, 0x00	; 0
     d20:	64 ef       	ldi	r22, 0xF4	; 244
     d22:	71 e0       	ldi	r23, 0x01	; 1
     d24:	82 eb       	ldi	r24, 0xB2	; 178
     d26:	96 e2       	ldi	r25, 0x26	; 38
     d28:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
     d2c:	09 c0       	rjmp	.+18     	; 0xd40 <_ZN16CLaserControlApp12OnLaserTimerEv+0x6a>
     d2e:	56 95       	lsr	r21
     d30:	47 95       	ror	r20
     d32:	20 e0       	ldi	r18, 0x00	; 0
     d34:	64 ef       	ldi	r22, 0xF4	; 244
     d36:	71 e0       	ldi	r23, 0x01	; 1
     d38:	82 eb       	ldi	r24, 0xB2	; 178
     d3a:	96 e2       	ldi	r25, 0x26	; 38
     d3c:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
     d40:	82 eb       	ldi	r24, 0xB2	; 178
     d42:	96 e2       	ldi	r25, 0x26	; 38
     d44:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
     d48:	08 95       	ret

00000d4a <_ZN16CLaserControlApp22OnLaserTimerStopStaticEPv>:
     d4a:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <_ZN16CLaserControlApp12OnLaserTimerEv>
     d4e:	08 95       	ret

00000d50 <_ZN16CLaserControlApp13OnPWMTimerOVFEv>:
     d50:	fc 01       	movw	r30, r24
     d52:	83 89       	ldd	r24, Z+19	; 0x13
     d54:	88 23       	and	r24, r24
     d56:	21 f0       	breq	.+8      	; 0xd60 <_ZN16CLaserControlApp13OnPWMTimerOVFEv+0x10>
     d58:	83 eb       	ldi	r24, 0xB3	; 179
     d5a:	96 e2       	ldi	r25, 0x26	; 38
     d5c:	0e 94 4a 33 	call	0x6694	; 0x6694 <_ZN11CLaserBoard6PWMOffEv>
     d60:	08 95       	ret

00000d62 <_ZN16CLaserControlApp13OnPWMTimerCMPEv>:
     d62:	fc 01       	movw	r30, r24
     d64:	83 89       	ldd	r24, Z+19	; 0x13
     d66:	88 23       	and	r24, r24
     d68:	21 f0       	breq	.+8      	; 0xd72 <_ZN16CLaserControlApp13OnPWMTimerCMPEv+0x10>
     d6a:	83 eb       	ldi	r24, 0xB3	; 179
     d6c:	96 e2       	ldi	r25, 0x26	; 38
     d6e:	0e 94 46 33 	call	0x668c	; 0x668c <_ZN11CLaserBoard5PWMOnEv>
     d72:	08 95       	ret

00000d74 <_ZN16CLaserControlApp19OnPWMTimerOVFStaticEPv>:
     d74:	0e 94 a8 06 	call	0xd50	; 0xd50 <_ZN16CLaserControlApp13OnPWMTimerOVFEv>
     d78:	08 95       	ret

00000d7a <_ZN16CLaserControlApp19OnPWMTimerCMPStaticEPv>:
     d7a:	0e 94 b1 06 	call	0xd62	; 0xd62 <_ZN16CLaserControlApp13OnPWMTimerCMPEv>
     d7e:	08 95       	ret

00000d80 <_ZN16CLaserControlApp19OnPWMTimerREDStaticEPv>:
     d80:	08 95       	ret

00000d82 <_ZN16CLaserControlApp19OnPWMTimerGRNStaticEPv>:
     d82:	08 95       	ret

00000d84 <_ZN16CLaserControlApp19OnPWMTimerBLUStaticEPv>:
     d84:	08 95       	ret

00000d86 <_ZN16CLaserControlApp13MelaninPresetEj>:
     d86:	0f 93       	push	r16
     d88:	1f 93       	push	r17
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	ec 01       	movw	r28, r24
     d90:	1e 86       	std	Y+14, r1	; 0x0e
     d92:	fc 01       	movw	r30, r24
     d94:	ee 51       	subi	r30, 0x1E	; 30
     d96:	ff 4f       	sbci	r31, 0xFF	; 255
     d98:	10 82       	st	Z, r1
     d9a:	11 82       	std	Z+1, r1	; 0x01
     d9c:	32 96       	adiw	r30, 0x02	; 2
     d9e:	83 e0       	ldi	r24, 0x03	; 3
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	80 83       	st	Z, r24
     da4:	91 83       	std	Z+1, r25	; 0x01
     da6:	6a 30       	cpi	r22, 0x0A	; 10
     da8:	71 05       	cpc	r23, r1
     daa:	70 f4       	brcc	.+28     	; 0xdc8 <_ZN16CLaserControlApp13MelaninPresetEj+0x42>
     dac:	81 e0       	ldi	r24, 0x01	; 1
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	72 96       	adiw	r30, 0x12	; 18
     db2:	80 83       	st	Z, r24
     db4:	91 83       	std	Z+1, r25	; 0x01
     db6:	8c e3       	ldi	r24, 0x3C	; 60
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	8a 8f       	std	Y+26, r24	; 0x1a
     dbc:	9b 8f       	std	Y+27, r25	; 0x1b
     dbe:	81 e6       	ldi	r24, 0x61	; 97
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	8c 8b       	std	Y+20, r24	; 0x14
     dc4:	9d 8b       	std	Y+21, r25	; 0x15
     dc6:	5b c0       	rjmp	.+182    	; 0xe7e <_ZN16CLaserControlApp13MelaninPresetEj+0xf8>
     dc8:	64 31       	cpi	r22, 0x14	; 20
     dca:	71 05       	cpc	r23, r1
     dcc:	80 f4       	brcc	.+32     	; 0xdee <_ZN16CLaserControlApp13MelaninPresetEj+0x68>
     dce:	82 e0       	ldi	r24, 0x02	; 2
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	fe 01       	movw	r30, r28
     dd4:	ea 50       	subi	r30, 0x0A	; 10
     dd6:	ff 4f       	sbci	r31, 0xFF	; 255
     dd8:	80 83       	st	Z, r24
     dda:	91 83       	std	Z+1, r25	; 0x01
     ddc:	8c e3       	ldi	r24, 0x3C	; 60
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	8a 8f       	std	Y+26, r24	; 0x1a
     de2:	9b 8f       	std	Y+27, r25	; 0x1b
     de4:	81 e6       	ldi	r24, 0x61	; 97
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	8c 8b       	std	Y+20, r24	; 0x14
     dea:	9d 8b       	std	Y+21, r25	; 0x15
     dec:	48 c0       	rjmp	.+144    	; 0xe7e <_ZN16CLaserControlApp13MelaninPresetEj+0xf8>
     dee:	63 32       	cpi	r22, 0x23	; 35
     df0:	71 05       	cpc	r23, r1
     df2:	80 f4       	brcc	.+32     	; 0xe14 <_ZN16CLaserControlApp13MelaninPresetEj+0x8e>
     df4:	83 e0       	ldi	r24, 0x03	; 3
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	fe 01       	movw	r30, r28
     dfa:	ea 50       	subi	r30, 0x0A	; 10
     dfc:	ff 4f       	sbci	r31, 0xFF	; 255
     dfe:	80 83       	st	Z, r24
     e00:	91 83       	std	Z+1, r25	; 0x01
     e02:	8c e3       	ldi	r24, 0x3C	; 60
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	8a 8f       	std	Y+26, r24	; 0x1a
     e08:	9b 8f       	std	Y+27, r25	; 0x1b
     e0a:	81 e6       	ldi	r24, 0x61	; 97
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	8c 8b       	std	Y+20, r24	; 0x14
     e10:	9d 8b       	std	Y+21, r25	; 0x15
     e12:	35 c0       	rjmp	.+106    	; 0xe7e <_ZN16CLaserControlApp13MelaninPresetEj+0xf8>
     e14:	61 33       	cpi	r22, 0x31	; 49
     e16:	71 05       	cpc	r23, r1
     e18:	80 f4       	brcc	.+32     	; 0xe3a <_ZN16CLaserControlApp13MelaninPresetEj+0xb4>
     e1a:	84 e0       	ldi	r24, 0x04	; 4
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	fe 01       	movw	r30, r28
     e20:	ea 50       	subi	r30, 0x0A	; 10
     e22:	ff 4f       	sbci	r31, 0xFF	; 255
     e24:	80 83       	st	Z, r24
     e26:	91 83       	std	Z+1, r25	; 0x01
     e28:	84 e6       	ldi	r24, 0x64	; 100
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	8a 8f       	std	Y+26, r24	; 0x1a
     e2e:	9b 8f       	std	Y+27, r25	; 0x1b
     e30:	81 e6       	ldi	r24, 0x61	; 97
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	8c 8b       	std	Y+20, r24	; 0x14
     e36:	9d 8b       	std	Y+21, r25	; 0x15
     e38:	22 c0       	rjmp	.+68     	; 0xe7e <_ZN16CLaserControlApp13MelaninPresetEj+0xf8>
     e3a:	68 34       	cpi	r22, 0x48	; 72
     e3c:	71 05       	cpc	r23, r1
     e3e:	80 f4       	brcc	.+32     	; 0xe60 <_ZN16CLaserControlApp13MelaninPresetEj+0xda>
     e40:	85 e0       	ldi	r24, 0x05	; 5
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	fe 01       	movw	r30, r28
     e46:	ea 50       	subi	r30, 0x0A	; 10
     e48:	ff 4f       	sbci	r31, 0xFF	; 255
     e4a:	80 83       	st	Z, r24
     e4c:	91 83       	std	Z+1, r25	; 0x01
     e4e:	84 e6       	ldi	r24, 0x64	; 100
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	8a 8f       	std	Y+26, r24	; 0x1a
     e54:	9b 8f       	std	Y+27, r25	; 0x1b
     e56:	8a e5       	ldi	r24, 0x5A	; 90
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	8c 8b       	std	Y+20, r24	; 0x14
     e5c:	9d 8b       	std	Y+21, r25	; 0x15
     e5e:	0f c0       	rjmp	.+30     	; 0xe7e <_ZN16CLaserControlApp13MelaninPresetEj+0xf8>
     e60:	86 e0       	ldi	r24, 0x06	; 6
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	fe 01       	movw	r30, r28
     e66:	ea 50       	subi	r30, 0x0A	; 10
     e68:	ff 4f       	sbci	r31, 0xFF	; 255
     e6a:	80 83       	st	Z, r24
     e6c:	91 83       	std	Z+1, r25	; 0x01
     e6e:	84 e6       	ldi	r24, 0x64	; 100
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	8a 8f       	std	Y+26, r24	; 0x1a
     e74:	9b 8f       	std	Y+27, r25	; 0x1b
     e76:	87 e5       	ldi	r24, 0x57	; 87
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	8c 8b       	std	Y+20, r24	; 0x14
     e7c:	9d 8b       	std	Y+21, r25	; 0x15
     e7e:	fe 01       	movw	r30, r28
     e80:	e8 51       	subi	r30, 0x18	; 24
     e82:	ff 4f       	sbci	r31, 0xFF	; 255
     e84:	84 e6       	ldi	r24, 0x64	; 100
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	80 83       	st	Z, r24
     e8a:	91 83       	std	Z+1, r25	; 0x01
     e8c:	8e 85       	ldd	r24, Y+14	; 0x0e
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	de 01       	movw	r26, r28
     e92:	aa 51       	subi	r26, 0x1A	; 26
     e94:	bf 4f       	sbci	r27, 0xFF	; 255
     e96:	9c 01       	movw	r18, r24
     e98:	2f 5f       	subi	r18, 0xFF	; 255
     e9a:	3f 4f       	sbci	r19, 0xFF	; 255
     e9c:	4a e1       	ldi	r20, 0x1A	; 26
     e9e:	42 9f       	mul	r20, r18
     ea0:	f0 01       	movw	r30, r0
     ea2:	43 9f       	mul	r20, r19
     ea4:	f0 0d       	add	r31, r0
     ea6:	11 24       	eor	r1, r1
     ea8:	ec 0f       	add	r30, r28
     eaa:	fd 1f       	adc	r31, r29
     eac:	20 81       	ld	r18, Z
     eae:	31 81       	ldd	r19, Z+1	; 0x01
     eb0:	2d 93       	st	X+, r18
     eb2:	3c 93       	st	X, r19
     eb4:	8e 01       	movw	r16, r28
     eb6:	06 51       	subi	r16, 0x16	; 22
     eb8:	1f 4f       	sbci	r17, 0xFF	; 255
     eba:	bc 01       	movw	r22, r24
     ebc:	66 0f       	add	r22, r22
     ebe:	77 1f       	adc	r23, r23
     ec0:	68 0f       	add	r22, r24
     ec2:	79 1f       	adc	r23, r25
     ec4:	66 0f       	add	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	6a 56       	subi	r22, 0x6A	; 106
     eca:	7f 4f       	sbci	r23, 0xFF	; 255
     ecc:	6c 0f       	add	r22, r28
     ece:	7d 1f       	adc	r23, r29
     ed0:	ce 01       	movw	r24, r28
     ed2:	0e 94 a7 05 	call	0xb4e	; 0xb4e <_ZN16CLaserControlApp22CalculateLaserSettingsEP24DGUS_LASERPROFILE_STRUCT>
     ed6:	f8 01       	movw	r30, r16
     ed8:	20 83       	st	Z, r18
     eda:	31 83       	std	Z+1, r19	; 0x01
     edc:	42 83       	std	Z+2, r20	; 0x02
     ede:	53 83       	std	Z+3, r21	; 0x03
     ee0:	64 83       	std	Z+4, r22	; 0x04
     ee2:	75 83       	std	Z+5, r23	; 0x05
     ee4:	8e 85       	ldd	r24, Y+14	; 0x0e
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	fc 01       	movw	r30, r24
     eea:	ee 0f       	add	r30, r30
     eec:	ff 1f       	adc	r31, r31
     eee:	e8 0f       	add	r30, r24
     ef0:	f9 1f       	adc	r31, r25
     ef2:	ee 0f       	add	r30, r30
     ef4:	ff 1f       	adc	r31, r31
     ef6:	ec 0f       	add	r30, r28
     ef8:	fd 1f       	adc	r31, r29
     efa:	e6 56       	subi	r30, 0x66	; 102
     efc:	ff 4f       	sbci	r31, 0xFF	; 255
     efe:	80 81       	ld	r24, Z
     f00:	91 81       	ldd	r25, Z+1	; 0x01
     f02:	c8 52       	subi	r28, 0x28	; 40
     f04:	df 4f       	sbci	r29, 0xFF	; 255
     f06:	88 83       	st	Y, r24
     f08:	99 83       	std	Y+1, r25	; 0x01
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	1f 91       	pop	r17
     f10:	0f 91       	pop	r16
     f12:	08 95       	ret

00000f14 <_ZN16CLaserControlApp15PhototypePresetEj>:
     f14:	0f 93       	push	r16
     f16:	1f 93       	push	r17
     f18:	cf 93       	push	r28
     f1a:	df 93       	push	r29
     f1c:	ec 01       	movw	r28, r24
     f1e:	1e 86       	std	Y+14, r1	; 0x0e
     f20:	fc 01       	movw	r30, r24
     f22:	ee 51       	subi	r30, 0x1E	; 30
     f24:	ff 4f       	sbci	r31, 0xFF	; 255
     f26:	10 82       	st	Z, r1
     f28:	11 82       	std	Z+1, r1	; 0x01
     f2a:	32 96       	adiw	r30, 0x02	; 2
     f2c:	83 e0       	ldi	r24, 0x03	; 3
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	80 83       	st	Z, r24
     f32:	91 83       	std	Z+1, r25	; 0x01
     f34:	72 96       	adiw	r30, 0x12	; 18
     f36:	60 83       	st	Z, r22
     f38:	71 83       	std	Z+1, r23	; 0x01
     f3a:	63 30       	cpi	r22, 0x03	; 3
     f3c:	71 05       	cpc	r23, r1
     f3e:	91 f1       	breq	.+100    	; 0xfa4 <_ZN16CLaserControlApp15PhototypePresetEj+0x90>
     f40:	38 f4       	brcc	.+14     	; 0xf50 <_ZN16CLaserControlApp15PhototypePresetEj+0x3c>
     f42:	61 30       	cpi	r22, 0x01	; 1
     f44:	71 05       	cpc	r23, r1
     f46:	71 f0       	breq	.+28     	; 0xf64 <_ZN16CLaserControlApp15PhototypePresetEj+0x50>
     f48:	62 30       	cpi	r22, 0x02	; 2
     f4a:	71 05       	cpc	r23, r1
     f4c:	d9 f0       	breq	.+54     	; 0xf84 <_ZN16CLaserControlApp15PhototypePresetEj+0x70>
     f4e:	69 c0       	rjmp	.+210    	; 0x1022 <_ZN16CLaserControlApp15PhototypePresetEj+0x10e>
     f50:	65 30       	cpi	r22, 0x05	; 5
     f52:	71 05       	cpc	r23, r1
     f54:	09 f4       	brne	.+2      	; 0xf58 <_ZN16CLaserControlApp15PhototypePresetEj+0x44>
     f56:	46 c0       	rjmp	.+140    	; 0xfe4 <_ZN16CLaserControlApp15PhototypePresetEj+0xd0>
     f58:	a8 f1       	brcs	.+106    	; 0xfc4 <_ZN16CLaserControlApp15PhototypePresetEj+0xb0>
     f5a:	66 30       	cpi	r22, 0x06	; 6
     f5c:	71 05       	cpc	r23, r1
     f5e:	09 f4       	brne	.+2      	; 0xf62 <_ZN16CLaserControlApp15PhototypePresetEj+0x4e>
     f60:	51 c0       	rjmp	.+162    	; 0x1004 <_ZN16CLaserControlApp15PhototypePresetEj+0xf0>
     f62:	5f c0       	rjmp	.+190    	; 0x1022 <_ZN16CLaserControlApp15PhototypePresetEj+0x10e>
     f64:	85 e0       	ldi	r24, 0x05	; 5
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	fe 01       	movw	r30, r28
     f6a:	ec 50       	subi	r30, 0x0C	; 12
     f6c:	ff 4f       	sbci	r31, 0xFF	; 255
     f6e:	80 83       	st	Z, r24
     f70:	91 83       	std	Z+1, r25	; 0x01
     f72:	8c e3       	ldi	r24, 0x3C	; 60
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	8a 8f       	std	Y+26, r24	; 0x1a
     f78:	9b 8f       	std	Y+27, r25	; 0x1b
     f7a:	81 e6       	ldi	r24, 0x61	; 97
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	8c 8b       	std	Y+20, r24	; 0x14
     f80:	9d 8b       	std	Y+21, r25	; 0x15
     f82:	4f c0       	rjmp	.+158    	; 0x1022 <_ZN16CLaserControlApp15PhototypePresetEj+0x10e>
     f84:	8e e0       	ldi	r24, 0x0E	; 14
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	fe 01       	movw	r30, r28
     f8a:	ec 50       	subi	r30, 0x0C	; 12
     f8c:	ff 4f       	sbci	r31, 0xFF	; 255
     f8e:	80 83       	st	Z, r24
     f90:	91 83       	std	Z+1, r25	; 0x01
     f92:	8c e3       	ldi	r24, 0x3C	; 60
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	8a 8f       	std	Y+26, r24	; 0x1a
     f98:	9b 8f       	std	Y+27, r25	; 0x1b
     f9a:	81 e6       	ldi	r24, 0x61	; 97
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	8c 8b       	std	Y+20, r24	; 0x14
     fa0:	9d 8b       	std	Y+21, r25	; 0x15
     fa2:	3f c0       	rjmp	.+126    	; 0x1022 <_ZN16CLaserControlApp15PhototypePresetEj+0x10e>
     fa4:	8b e1       	ldi	r24, 0x1B	; 27
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	fe 01       	movw	r30, r28
     faa:	ec 50       	subi	r30, 0x0C	; 12
     fac:	ff 4f       	sbci	r31, 0xFF	; 255
     fae:	80 83       	st	Z, r24
     fb0:	91 83       	std	Z+1, r25	; 0x01
     fb2:	8c e3       	ldi	r24, 0x3C	; 60
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	8a 8f       	std	Y+26, r24	; 0x1a
     fb8:	9b 8f       	std	Y+27, r25	; 0x1b
     fba:	81 e6       	ldi	r24, 0x61	; 97
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	8c 8b       	std	Y+20, r24	; 0x14
     fc0:	9d 8b       	std	Y+21, r25	; 0x15
     fc2:	2f c0       	rjmp	.+94     	; 0x1022 <_ZN16CLaserControlApp15PhototypePresetEj+0x10e>
     fc4:	89 e2       	ldi	r24, 0x29	; 41
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	fe 01       	movw	r30, r28
     fca:	ec 50       	subi	r30, 0x0C	; 12
     fcc:	ff 4f       	sbci	r31, 0xFF	; 255
     fce:	80 83       	st	Z, r24
     fd0:	91 83       	std	Z+1, r25	; 0x01
     fd2:	84 e6       	ldi	r24, 0x64	; 100
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	8a 8f       	std	Y+26, r24	; 0x1a
     fd8:	9b 8f       	std	Y+27, r25	; 0x1b
     fda:	81 e6       	ldi	r24, 0x61	; 97
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	8c 8b       	std	Y+20, r24	; 0x14
     fe0:	9d 8b       	std	Y+21, r25	; 0x15
     fe2:	1f c0       	rjmp	.+62     	; 0x1022 <_ZN16CLaserControlApp15PhototypePresetEj+0x10e>
     fe4:	8d e3       	ldi	r24, 0x3D	; 61
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	fe 01       	movw	r30, r28
     fea:	ec 50       	subi	r30, 0x0C	; 12
     fec:	ff 4f       	sbci	r31, 0xFF	; 255
     fee:	80 83       	st	Z, r24
     ff0:	91 83       	std	Z+1, r25	; 0x01
     ff2:	84 e6       	ldi	r24, 0x64	; 100
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	8a 8f       	std	Y+26, r24	; 0x1a
     ff8:	9b 8f       	std	Y+27, r25	; 0x1b
     ffa:	8a e5       	ldi	r24, 0x5A	; 90
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	8c 8b       	std	Y+20, r24	; 0x14
    1000:	9d 8b       	std	Y+21, r25	; 0x15
    1002:	0f c0       	rjmp	.+30     	; 0x1022 <_ZN16CLaserControlApp15PhototypePresetEj+0x10e>
    1004:	85 e5       	ldi	r24, 0x55	; 85
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	fe 01       	movw	r30, r28
    100a:	ec 50       	subi	r30, 0x0C	; 12
    100c:	ff 4f       	sbci	r31, 0xFF	; 255
    100e:	80 83       	st	Z, r24
    1010:	91 83       	std	Z+1, r25	; 0x01
    1012:	84 e6       	ldi	r24, 0x64	; 100
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	8a 8f       	std	Y+26, r24	; 0x1a
    1018:	9b 8f       	std	Y+27, r25	; 0x1b
    101a:	87 e5       	ldi	r24, 0x57	; 87
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	8c 8b       	std	Y+20, r24	; 0x14
    1020:	9d 8b       	std	Y+21, r25	; 0x15
    1022:	fe 01       	movw	r30, r28
    1024:	e8 51       	subi	r30, 0x18	; 24
    1026:	ff 4f       	sbci	r31, 0xFF	; 255
    1028:	84 e6       	ldi	r24, 0x64	; 100
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	80 83       	st	Z, r24
    102e:	91 83       	std	Z+1, r25	; 0x01
    1030:	32 97       	sbiw	r30, 0x02	; 2
    1032:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1034:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1036:	80 83       	st	Z, r24
    1038:	91 83       	std	Z+1, r25	; 0x01
    103a:	8e 01       	movw	r16, r28
    103c:	06 51       	subi	r16, 0x16	; 22
    103e:	1f 4f       	sbci	r17, 0xFF	; 255
    1040:	be 01       	movw	r22, r28
    1042:	6a 56       	subi	r22, 0x6A	; 106
    1044:	7f 4f       	sbci	r23, 0xFF	; 255
    1046:	ce 01       	movw	r24, r28
    1048:	0e 94 a7 05 	call	0xb4e	; 0xb4e <_ZN16CLaserControlApp22CalculateLaserSettingsEP24DGUS_LASERPROFILE_STRUCT>
    104c:	f8 01       	movw	r30, r16
    104e:	20 83       	st	Z, r18
    1050:	31 83       	std	Z+1, r19	; 0x01
    1052:	42 83       	std	Z+2, r20	; 0x02
    1054:	53 83       	std	Z+3, r21	; 0x03
    1056:	64 83       	std	Z+4, r22	; 0x04
    1058:	75 83       	std	Z+5, r23	; 0x05
    105a:	8e 85       	ldd	r24, Y+14	; 0x0e
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	fc 01       	movw	r30, r24
    1060:	ee 0f       	add	r30, r30
    1062:	ff 1f       	adc	r31, r31
    1064:	e8 0f       	add	r30, r24
    1066:	f9 1f       	adc	r31, r25
    1068:	ee 0f       	add	r30, r30
    106a:	ff 1f       	adc	r31, r31
    106c:	ec 0f       	add	r30, r28
    106e:	fd 1f       	adc	r31, r29
    1070:	e6 56       	subi	r30, 0x66	; 102
    1072:	ff 4f       	sbci	r31, 0xFF	; 255
    1074:	80 81       	ld	r24, Z
    1076:	91 81       	ldd	r25, Z+1	; 0x01
    1078:	c8 52       	subi	r28, 0x28	; 40
    107a:	df 4f       	sbci	r29, 0xFF	; 255
    107c:	88 83       	st	Y, r24
    107e:	99 83       	std	Y+1, r25	; 0x01
    1080:	df 91       	pop	r29
    1082:	cf 91       	pop	r28
    1084:	1f 91       	pop	r17
    1086:	0f 91       	pop	r16
    1088:	08 95       	ret

0000108a <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM>:
    108a:	af 92       	push	r10
    108c:	bf 92       	push	r11
    108e:	cf 92       	push	r12
    1090:	df 92       	push	r13
    1092:	ef 92       	push	r14
    1094:	ff 92       	push	r15
    1096:	0f 93       	push	r16
    1098:	1f 93       	push	r17
    109a:	cf 93       	push	r28
    109c:	df 93       	push	r29
    109e:	ec 01       	movw	r28, r24
    10a0:	6b 01       	movw	r12, r22
    10a2:	02 30       	cpi	r16, 0x02	; 2
    10a4:	81 f0       	breq	.+32     	; 0x10c6 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x3c>
    10a6:	18 f4       	brcc	.+6      	; 0x10ae <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x24>
    10a8:	01 30       	cpi	r16, 0x01	; 1
    10aa:	31 f0       	breq	.+12     	; 0x10b8 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x2e>
    10ac:	33 c0       	rjmp	.+102    	; 0x1114 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x8a>
    10ae:	03 30       	cpi	r16, 0x03	; 3
    10b0:	b9 f0       	breq	.+46     	; 0x10e0 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x56>
    10b2:	04 30       	cpi	r16, 0x04	; 4
    10b4:	11 f1       	breq	.+68     	; 0x10fa <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x70>
    10b6:	2e c0       	rjmp	.+92     	; 0x1114 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x8a>
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	8a af       	std	Y+58, r24	; 0x3a
    10be:	9b af       	std	Y+59, r25	; 0x3b
    10c0:	88 af       	std	Y+56, r24	; 0x38
    10c2:	99 af       	std	Y+57, r25	; 0x39
    10c4:	43 c0       	rjmp	.+134    	; 0x114c <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0xc2>
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	fe 01       	movw	r30, r28
    10cc:	ec 5a       	subi	r30, 0xAC	; 172
    10ce:	ff 4f       	sbci	r31, 0xFF	; 255
    10d0:	80 83       	st	Z, r24
    10d2:	91 83       	std	Z+1, r25	; 0x01
    10d4:	83 e0       	ldi	r24, 0x03	; 3
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	32 97       	sbiw	r30, 0x02	; 2
    10da:	80 83       	st	Z, r24
    10dc:	91 83       	std	Z+1, r25	; 0x01
    10de:	1c c0       	rjmp	.+56     	; 0x1118 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x8e>
    10e0:	84 e0       	ldi	r24, 0x04	; 4
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	fe 01       	movw	r30, r28
    10e6:	e2 59       	subi	r30, 0x92	; 146
    10e8:	ff 4f       	sbci	r31, 0xFF	; 255
    10ea:	80 83       	st	Z, r24
    10ec:	91 83       	std	Z+1, r25	; 0x01
    10ee:	86 e0       	ldi	r24, 0x06	; 6
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	32 97       	sbiw	r30, 0x02	; 2
    10f4:	80 83       	st	Z, r24
    10f6:	91 83       	std	Z+1, r25	; 0x01
    10f8:	0f c0       	rjmp	.+30     	; 0x1118 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x8e>
    10fa:	87 e0       	ldi	r24, 0x07	; 7
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	fe 01       	movw	r30, r28
    1100:	e8 57       	subi	r30, 0x78	; 120
    1102:	ff 4f       	sbci	r31, 0xFF	; 255
    1104:	80 83       	st	Z, r24
    1106:	91 83       	std	Z+1, r25	; 0x01
    1108:	8a e0       	ldi	r24, 0x0A	; 10
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	32 97       	sbiw	r30, 0x02	; 2
    110e:	80 83       	st	Z, r24
    1110:	91 83       	std	Z+1, r25	; 0x01
    1112:	02 c0       	rjmp	.+4      	; 0x1118 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x8e>
    1114:	01 30       	cpi	r16, 0x01	; 1
    1116:	f9 f0       	breq	.+62     	; 0x1156 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0xcc>
    1118:	80 2f       	mov	r24, r16
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	fe 01       	movw	r30, r28
    111e:	2a e1       	ldi	r18, 0x1A	; 26
    1120:	02 9f       	mul	r16, r18
    1122:	e0 0d       	add	r30, r0
    1124:	f1 1d       	adc	r31, r1
    1126:	11 24       	eor	r1, r1
    1128:	20 a1       	ldd	r18, Z+32	; 0x20
    112a:	31 a1       	ldd	r19, Z+33	; 0x21
    112c:	c2 16       	cp	r12, r18
    112e:	d3 06       	cpc	r13, r19
    1130:	68 f0       	brcs	.+26     	; 0x114c <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0xc2>
    1132:	2a e1       	ldi	r18, 0x1A	; 26
    1134:	28 9f       	mul	r18, r24
    1136:	f0 01       	movw	r30, r0
    1138:	29 9f       	mul	r18, r25
    113a:	f0 0d       	add	r31, r0
    113c:	11 24       	eor	r1, r1
    113e:	ec 0f       	add	r30, r28
    1140:	fd 1f       	adc	r31, r29
    1142:	86 8d       	ldd	r24, Z+30	; 0x1e
    1144:	97 8d       	ldd	r25, Z+31	; 0x1f
    1146:	8c 15       	cp	r24, r12
    1148:	9d 05       	cpc	r25, r13
    114a:	28 f4       	brcc	.+10     	; 0x1156 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0xcc>
    114c:	fe 01       	movw	r30, r28
    114e:	ec 51       	subi	r30, 0x1C	; 28
    1150:	ff 4f       	sbci	r31, 0xFF	; 255
    1152:	c0 82       	st	Z, r12
    1154:	d1 82       	std	Z+1, r13	; 0x01
    1156:	96 01       	movw	r18, r12
    1158:	22 0f       	add	r18, r18
    115a:	33 1f       	adc	r19, r19
    115c:	f9 01       	movw	r30, r18
    115e:	e0 50       	subi	r30, 0x00	; 0
    1160:	fe 4d       	sbci	r31, 0xDE	; 222
    1162:	60 81       	ld	r22, Z
    1164:	71 81       	ldd	r23, Z+1	; 0x01
    1166:	f9 01       	movw	r30, r18
    1168:	e6 51       	subi	r30, 0x16	; 22
    116a:	fe 4d       	sbci	r31, 0xDE	; 222
    116c:	01 90       	ld	r0, Z+
    116e:	f0 81       	ld	r31, Z
    1170:	e0 2d       	mov	r30, r0
    1172:	d9 01       	movw	r26, r18
    1174:	ac 52       	subi	r26, 0x2C	; 44
    1176:	be 4d       	sbci	r27, 0xDE	; 222
    1178:	ad 90       	ld	r10, X+
    117a:	bc 90       	ld	r11, X
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	a8 1a       	sub	r10, r24
    1180:	b1 08       	sbc	r11, r1
    1182:	16 2f       	mov	r17, r22
    1184:	97 2f       	mov	r25, r23
    1186:	64 17       	cp	r22, r20
    1188:	75 07       	cpc	r23, r21
    118a:	10 f4       	brcc	.+4      	; 0x1190 <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x106>
    118c:	14 2f       	mov	r17, r20
    118e:	95 2f       	mov	r25, r21
    1190:	8a e1       	ldi	r24, 0x1A	; 26
    1192:	e0 2e       	mov	r14, r16
    1194:	f1 2c       	mov	r15, r1
    1196:	de 01       	movw	r26, r28
    1198:	80 9f       	mul	r24, r16
    119a:	a0 0d       	add	r26, r0
    119c:	b1 1d       	adc	r27, r1
    119e:	11 24       	eor	r1, r1
    11a0:	5c 96       	adiw	r26, 0x1c	; 28
    11a2:	6d 93       	st	X+, r22
    11a4:	7c 93       	st	X, r23
    11a6:	5d 97       	sbiw	r26, 0x1d	; 29
    11a8:	97 01       	movw	r18, r14
    11aa:	2f 5f       	subi	r18, 0xFF	; 255
    11ac:	3f 4f       	sbci	r19, 0xFF	; 255
    11ae:	82 9f       	mul	r24, r18
    11b0:	d0 01       	movw	r26, r0
    11b2:	83 9f       	mul	r24, r19
    11b4:	b0 0d       	add	r27, r0
    11b6:	11 24       	eor	r1, r1
    11b8:	ac 0f       	add	r26, r28
    11ba:	bd 1f       	adc	r27, r29
    11bc:	ed 93       	st	X+, r30
    11be:	fc 93       	st	X, r31
    11c0:	21 2f       	mov	r18, r17
    11c2:	39 2f       	mov	r19, r25
    11c4:	e2 17       	cp	r30, r18
    11c6:	f3 07       	cpc	r31, r19
    11c8:	08 f4       	brcc	.+2      	; 0x11cc <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM+0x142>
    11ca:	9f 01       	movw	r18, r30
    11cc:	26 1b       	sub	r18, r22
    11ce:	37 0b       	sbc	r19, r23
    11d0:	cf 01       	movw	r24, r30
    11d2:	86 1b       	sub	r24, r22
    11d4:	97 0b       	sbc	r25, r23
    11d6:	b5 01       	movw	r22, r10
    11d8:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    11dc:	c9 01       	movw	r24, r18
    11de:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    11e2:	80 e0       	ldi	r24, 0x00	; 0
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <_Z3maxjj>
    11ea:	b5 01       	movw	r22, r10
    11ec:	0e 94 61 16 	call	0x2cc2	; 0x2cc2 <_Z3minjj>
    11f0:	4b e0       	ldi	r20, 0x0B	; 11
    11f2:	4c 9d       	mul	r20, r12
    11f4:	90 01       	movw	r18, r0
    11f6:	4d 9d       	mul	r20, r13
    11f8:	30 0d       	add	r19, r0
    11fa:	11 24       	eor	r1, r1
    11fc:	82 0f       	add	r24, r18
    11fe:	93 1f       	adc	r25, r19
    1200:	fc 01       	movw	r30, r24
    1202:	ee 0f       	add	r30, r30
    1204:	ff 1f       	adc	r31, r31
    1206:	ea 5f       	subi	r30, 0xFA	; 250
    1208:	ff 4d       	sbci	r31, 0xDF	; 223
    120a:	20 81       	ld	r18, Z
    120c:	31 81       	ldd	r19, Z+1	; 0x01
    120e:	4a e1       	ldi	r20, 0x1A	; 26
    1210:	4e 9d       	mul	r20, r14
    1212:	c0 01       	movw	r24, r0
    1214:	4f 9d       	mul	r20, r15
    1216:	90 0d       	add	r25, r0
    1218:	11 24       	eor	r1, r1
    121a:	c8 0f       	add	r28, r24
    121c:	d9 1f       	adc	r29, r25
    121e:	8a a1       	ldd	r24, Y+34	; 0x22
    1220:	9b a1       	ldd	r25, Y+35	; 0x23
    1222:	88 8f       	std	Y+24, r24	; 0x18
    1224:	99 8f       	std	Y+25, r25	; 0x19
    1226:	2e 8b       	std	Y+22, r18	; 0x16
    1228:	3f 8b       	std	Y+23, r19	; 0x17
    122a:	df 91       	pop	r29
    122c:	cf 91       	pop	r28
    122e:	1f 91       	pop	r17
    1230:	0f 91       	pop	r16
    1232:	ff 90       	pop	r15
    1234:	ef 90       	pop	r14
    1236:	df 90       	pop	r13
    1238:	cf 90       	pop	r12
    123a:	bf 90       	pop	r11
    123c:	af 90       	pop	r10
    123e:	08 95       	ret

00001240 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM>:
    1240:	3f 92       	push	r3
    1242:	4f 92       	push	r4
    1244:	5f 92       	push	r5
    1246:	6f 92       	push	r6
    1248:	7f 92       	push	r7
    124a:	8f 92       	push	r8
    124c:	9f 92       	push	r9
    124e:	af 92       	push	r10
    1250:	bf 92       	push	r11
    1252:	cf 92       	push	r12
    1254:	df 92       	push	r13
    1256:	ef 92       	push	r14
    1258:	ff 92       	push	r15
    125a:	0f 93       	push	r16
    125c:	1f 93       	push	r17
    125e:	cf 93       	push	r28
    1260:	df 93       	push	r29
    1262:	cd b7       	in	r28, 0x3d	; 61
    1264:	de b7       	in	r29, 0x3e	; 62
    1266:	2a 97       	sbiw	r28, 0x0a	; 10
    1268:	cd bf       	out	0x3d, r28	; 61
    126a:	de bf       	out	0x3e, r29	; 62
    126c:	7c 01       	movw	r14, r24
    126e:	6b 01       	movw	r12, r22
    1270:	5a 01       	movw	r10, r20
    1272:	49 01       	movw	r8, r18
    1274:	30 2e       	mov	r3, r16
    1276:	22 e0       	ldi	r18, 0x02	; 2
    1278:	02 17       	cp	r16, r18
    127a:	01 f1       	breq	.+64     	; 0x12bc <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x7c>
    127c:	20 17       	cp	r18, r16
    127e:	20 f0       	brcs	.+8      	; 0x1288 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x48>
    1280:	41 e0       	ldi	r20, 0x01	; 1
    1282:	04 17       	cp	r16, r20
    1284:	41 f0       	breq	.+16     	; 0x1296 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x56>
    1286:	41 c0       	rjmp	.+130    	; 0x130a <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0xca>
    1288:	83 e0       	ldi	r24, 0x03	; 3
    128a:	08 17       	cp	r16, r24
    128c:	21 f1       	breq	.+72     	; 0x12d6 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x96>
    128e:	a4 e0       	ldi	r26, 0x04	; 4
    1290:	0a 17       	cp	r16, r26
    1292:	71 f1       	breq	.+92     	; 0x12f0 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0xb0>
    1294:	3a c0       	rjmp	.+116    	; 0x130a <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0xca>
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	f7 01       	movw	r30, r14
    129c:	82 af       	std	Z+58, r24	; 0x3a
    129e:	93 af       	std	Z+59, r25	; 0x3b
    12a0:	80 af       	std	Z+56, r24	; 0x38
    12a2:	91 af       	std	Z+57, r25	; 0x39
    12a4:	db 01       	movw	r26, r22
    12a6:	8d 91       	ld	r24, X+
    12a8:	9c 91       	ld	r25, X
    12aa:	11 97       	sbiw	r26, 0x01	; 1
    12ac:	01 97       	sbiw	r24, 0x01	; 1
    12ae:	09 f4       	brne	.+2      	; 0x12b2 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x72>
    12b0:	8c c1       	rjmp	.+792    	; 0x15ca <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x38a>
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	8d 93       	st	X+, r24
    12b8:	9c 93       	st	X, r25
    12ba:	88 c1       	rjmp	.+784    	; 0x15cc <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x38c>
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	f7 01       	movw	r30, r14
    12c2:	ec 5a       	subi	r30, 0xAC	; 172
    12c4:	ff 4f       	sbci	r31, 0xFF	; 255
    12c6:	80 83       	st	Z, r24
    12c8:	91 83       	std	Z+1, r25	; 0x01
    12ca:	83 e0       	ldi	r24, 0x03	; 3
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	32 97       	sbiw	r30, 0x02	; 2
    12d0:	80 83       	st	Z, r24
    12d2:	91 83       	std	Z+1, r25	; 0x01
    12d4:	1d c0       	rjmp	.+58     	; 0x1310 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0xd0>
    12d6:	84 e0       	ldi	r24, 0x04	; 4
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	f7 01       	movw	r30, r14
    12dc:	e2 59       	subi	r30, 0x92	; 146
    12de:	ff 4f       	sbci	r31, 0xFF	; 255
    12e0:	80 83       	st	Z, r24
    12e2:	91 83       	std	Z+1, r25	; 0x01
    12e4:	86 e0       	ldi	r24, 0x06	; 6
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	32 97       	sbiw	r30, 0x02	; 2
    12ea:	80 83       	st	Z, r24
    12ec:	91 83       	std	Z+1, r25	; 0x01
    12ee:	10 c0       	rjmp	.+32     	; 0x1310 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0xd0>
    12f0:	87 e0       	ldi	r24, 0x07	; 7
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	f7 01       	movw	r30, r14
    12f6:	e8 57       	subi	r30, 0x78	; 120
    12f8:	ff 4f       	sbci	r31, 0xFF	; 255
    12fa:	80 83       	st	Z, r24
    12fc:	91 83       	std	Z+1, r25	; 0x01
    12fe:	8a e0       	ldi	r24, 0x0A	; 10
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	32 97       	sbiw	r30, 0x02	; 2
    1304:	80 83       	st	Z, r24
    1306:	91 83       	std	Z+1, r25	; 0x01
    1308:	03 c0       	rjmp	.+6      	; 0x1310 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0xd0>
    130a:	b1 e0       	ldi	r27, 0x01	; 1
    130c:	3b 16       	cp	r3, r27
    130e:	e1 f1       	breq	.+120    	; 0x1388 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x148>
    1310:	f6 01       	movw	r30, r12
    1312:	20 81       	ld	r18, Z
    1314:	31 81       	ldd	r19, Z+1	; 0x01
    1316:	83 2d       	mov	r24, r3
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	f7 01       	movw	r30, r14
    131c:	4a e1       	ldi	r20, 0x1A	; 26
    131e:	34 9e       	mul	r3, r20
    1320:	e0 0d       	add	r30, r0
    1322:	f1 1d       	adc	r31, r1
    1324:	11 24       	eor	r1, r1
    1326:	40 a1       	ldd	r20, Z+32	; 0x20
    1328:	51 a1       	ldd	r21, Z+33	; 0x21
    132a:	24 17       	cp	r18, r20
    132c:	35 07       	cpc	r19, r21
    132e:	88 f4       	brcc	.+34     	; 0x1352 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x112>
    1330:	d6 01       	movw	r26, r12
    1332:	4d 93       	st	X+, r20
    1334:	5c 93       	st	X, r21
    1336:	2a e1       	ldi	r18, 0x1A	; 26
    1338:	28 9f       	mul	r18, r24
    133a:	f0 01       	movw	r30, r0
    133c:	29 9f       	mul	r18, r25
    133e:	f0 0d       	add	r31, r0
    1340:	11 24       	eor	r1, r1
    1342:	ee 0d       	add	r30, r14
    1344:	ff 1d       	adc	r31, r15
    1346:	86 8d       	ldd	r24, Z+30	; 0x1e
    1348:	97 8d       	ldd	r25, Z+31	; 0x1f
    134a:	84 17       	cp	r24, r20
    134c:	95 07       	cpc	r25, r21
    134e:	70 f0       	brcs	.+28     	; 0x136c <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x12c>
    1350:	10 c0       	rjmp	.+32     	; 0x1372 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x132>
    1352:	4a e1       	ldi	r20, 0x1A	; 26
    1354:	48 9f       	mul	r20, r24
    1356:	f0 01       	movw	r30, r0
    1358:	49 9f       	mul	r20, r25
    135a:	f0 0d       	add	r31, r0
    135c:	11 24       	eor	r1, r1
    135e:	ee 0d       	add	r30, r14
    1360:	ff 1d       	adc	r31, r15
    1362:	86 8d       	ldd	r24, Z+30	; 0x1e
    1364:	97 8d       	ldd	r25, Z+31	; 0x1f
    1366:	82 17       	cp	r24, r18
    1368:	93 07       	cpc	r25, r19
    136a:	70 f4       	brcc	.+28     	; 0x1388 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x148>
    136c:	f6 01       	movw	r30, r12
    136e:	80 83       	st	Z, r24
    1370:	91 83       	std	Z+1, r25	; 0x01
    1372:	d6 01       	movw	r26, r12
    1374:	8d 91       	ld	r24, X+
    1376:	9c 91       	ld	r25, X
    1378:	f7 01       	movw	r30, r14
    137a:	ec 51       	subi	r30, 0x1C	; 28
    137c:	ff 4f       	sbci	r31, 0xFF	; 255
    137e:	80 83       	st	Z, r24
    1380:	91 83       	std	Z+1, r25	; 0x01
    1382:	81 e0       	ldi	r24, 0x01	; 1
    1384:	f7 01       	movw	r30, r14
    1386:	81 8b       	std	Z+17, r24	; 0x11
    1388:	d6 01       	movw	r26, r12
    138a:	4d 91       	ld	r20, X+
    138c:	5c 91       	ld	r21, X
    138e:	44 0f       	add	r20, r20
    1390:	55 1f       	adc	r21, r21
    1392:	fa 01       	movw	r30, r20
    1394:	e0 50       	subi	r30, 0x00	; 0
    1396:	fe 4d       	sbci	r31, 0xDE	; 222
    1398:	20 81       	ld	r18, Z
    139a:	31 81       	ldd	r19, Z+1	; 0x01
    139c:	29 87       	std	Y+9, r18	; 0x09
    139e:	3a 87       	std	Y+10, r19	; 0x0a
    13a0:	fa 01       	movw	r30, r20
    13a2:	e6 51       	subi	r30, 0x16	; 22
    13a4:	fe 4d       	sbci	r31, 0xDE	; 222
    13a6:	01 90       	ld	r0, Z+
    13a8:	f0 81       	ld	r31, Z
    13aa:	e0 2d       	mov	r30, r0
    13ac:	ef 83       	std	Y+7, r30	; 0x07
    13ae:	f8 87       	std	Y+8, r31	; 0x08
    13b0:	cf 01       	movw	r24, r30
    13b2:	82 1b       	sub	r24, r18
    13b4:	93 0b       	sbc	r25, r19
    13b6:	da 01       	movw	r26, r20
    13b8:	ac 52       	subi	r26, 0x2C	; 44
    13ba:	be 4d       	sbci	r27, 0xDE	; 222
    13bc:	6d 91       	ld	r22, X+
    13be:	7c 91       	ld	r23, X
    13c0:	61 50       	subi	r22, 0x01	; 1
    13c2:	71 09       	sbc	r23, r1
    13c4:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    13c8:	3b 01       	movw	r6, r22
    13ca:	81 e0       	ldi	r24, 0x01	; 1
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	8d 83       	std	Y+5, r24	; 0x05
    13d0:	9e 83       	std	Y+6, r25	; 0x06
    13d2:	d5 01       	movw	r26, r10
    13d4:	8d 91       	ld	r24, X+
    13d6:	9c 91       	ld	r25, X
    13d8:	11 97       	sbiw	r26, 0x01	; 1
    13da:	82 17       	cp	r24, r18
    13dc:	93 07       	cpc	r25, r19
    13de:	08 f0       	brcs	.+2      	; 0x13e2 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x1a2>
    13e0:	f8 c0       	rjmp	.+496    	; 0x15d2 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x392>
    13e2:	2d 93       	st	X+, r18
    13e4:	3c 93       	st	X, r19
    13e6:	e2 17       	cp	r30, r18
    13e8:	f3 07       	cpc	r31, r19
    13ea:	18 f4       	brcc	.+6      	; 0x13f2 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x1b2>
    13ec:	d5 01       	movw	r26, r10
    13ee:	ed 93       	st	X+, r30
    13f0:	fc 93       	st	X, r31
    13f2:	08 e0       	ldi	r16, 0x08	; 8
    13f4:	10 e2       	ldi	r17, 0x20	; 32
    13f6:	24 e1       	ldi	r18, 0x14	; 20
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	ae 01       	movw	r20, r28
    13fc:	4b 5f       	subi	r20, 0xFB	; 251
    13fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1400:	be 01       	movw	r22, r28
    1402:	69 5f       	subi	r22, 0xF9	; 249
    1404:	7f 4f       	sbci	r23, 0xFF	; 255
    1406:	ce 01       	movw	r24, r28
    1408:	09 96       	adiw	r24, 0x09	; 9
    140a:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_Z13NormalizeStepRjS_S_jPj>
    140e:	6d 81       	ldd	r22, Y+5	; 0x05
    1410:	7e 81       	ldd	r23, Y+6	; 0x06
    1412:	4a e1       	ldi	r20, 0x1A	; 26
    1414:	03 2d       	mov	r16, r3
    1416:	10 e0       	ldi	r17, 0x00	; 0
    1418:	f7 01       	movw	r30, r14
    141a:	43 9d       	mul	r20, r3
    141c:	e0 0d       	add	r30, r0
    141e:	f1 1d       	adc	r31, r1
    1420:	11 24       	eor	r1, r1
    1422:	62 a7       	std	Z+42, r22	; 0x2a
    1424:	73 a7       	std	Z+43, r23	; 0x2b
    1426:	4f 80       	ldd	r4, Y+7	; 0x07
    1428:	58 84       	ldd	r5, Y+8	; 0x08
    142a:	29 85       	ldd	r18, Y+9	; 0x09
    142c:	3a 85       	ldd	r19, Y+10	; 0x0a
    142e:	c2 01       	movw	r24, r4
    1430:	82 1b       	sub	r24, r18
    1432:	93 0b       	sbc	r25, r19
    1434:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    1438:	64 a7       	std	Z+44, r22	; 0x2c
    143a:	75 a7       	std	Z+45, r23	; 0x2d
    143c:	20 a7       	std	Z+40, r18	; 0x28
    143e:	31 a7       	std	Z+41, r19	; 0x29
    1440:	24 8f       	std	Z+28, r18	; 0x1c
    1442:	35 8f       	std	Z+29, r19	; 0x1d
    1444:	0f 5f       	subi	r16, 0xFF	; 255
    1446:	1f 4f       	sbci	r17, 0xFF	; 255
    1448:	40 9f       	mul	r20, r16
    144a:	d0 01       	movw	r26, r0
    144c:	41 9f       	mul	r20, r17
    144e:	b0 0d       	add	r27, r0
    1450:	11 24       	eor	r1, r1
    1452:	ae 0d       	add	r26, r14
    1454:	bf 1d       	adc	r27, r15
    1456:	4d 92       	st	X+, r4
    1458:	5c 92       	st	X, r5
    145a:	97 01       	movw	r18, r14
    145c:	2a 51       	subi	r18, 0x1A	; 26
    145e:	3f 4f       	sbci	r19, 0xFF	; 255
    1460:	d5 01       	movw	r26, r10
    1462:	8d 91       	ld	r24, X+
    1464:	9c 91       	ld	r25, X
    1466:	40 a5       	ldd	r20, Z+40	; 0x28
    1468:	51 a5       	ldd	r21, Z+41	; 0x29
    146a:	84 1b       	sub	r24, r20
    146c:	95 0b       	sbc	r25, r21
    146e:	62 a5       	ldd	r22, Z+42	; 0x2a
    1470:	73 a5       	ldd	r23, Z+43	; 0x2b
    1472:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    1476:	f9 01       	movw	r30, r18
    1478:	60 83       	st	Z, r22
    147a:	71 83       	std	Z+1, r23	; 0x01
    147c:	d5 01       	movw	r26, r10
    147e:	8d 91       	ld	r24, X+
    1480:	9c 91       	ld	r25, X
    1482:	36 96       	adiw	r30, 0x06	; 6
    1484:	80 83       	st	Z, r24
    1486:	91 83       	std	Z+1, r25	; 0x01
    1488:	81 e0       	ldi	r24, 0x01	; 1
    148a:	f7 01       	movw	r30, r14
    148c:	81 8b       	std	Z+17, r24	; 0x11
    148e:	d6 01       	movw	r26, r12
    1490:	ed 91       	ld	r30, X+
    1492:	fc 91       	ld	r31, X
    1494:	ee 0f       	add	r30, r30
    1496:	ff 1f       	adc	r31, r31
    1498:	ec 52       	subi	r30, 0x2C	; 44
    149a:	fe 4d       	sbci	r31, 0xDE	; 222
    149c:	40 80       	ld	r4, Z
    149e:	51 80       	ldd	r5, Z+1	; 0x01
    14a0:	b1 e0       	ldi	r27, 0x01	; 1
    14a2:	4b 1a       	sub	r4, r27
    14a4:	51 08       	sbc	r5, r1
    14a6:	f5 01       	movw	r30, r10
    14a8:	80 81       	ld	r24, Z
    14aa:	91 81       	ldd	r25, Z+1	; 0x01
    14ac:	29 85       	ldd	r18, Y+9	; 0x09
    14ae:	3a 85       	ldd	r19, Y+10	; 0x0a
    14b0:	82 1b       	sub	r24, r18
    14b2:	93 0b       	sbc	r25, r19
    14b4:	b3 01       	movw	r22, r6
    14b6:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    14ba:	80 e0       	ldi	r24, 0x00	; 0
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <_Z3maxjj>
    14c2:	b2 01       	movw	r22, r4
    14c4:	0e 94 61 16 	call	0x2cc2	; 0x2cc2 <_Z3minjj>
    14c8:	d6 01       	movw	r26, r12
    14ca:	4d 91       	ld	r20, X+
    14cc:	5c 91       	ld	r21, X
    14ce:	6b e0       	ldi	r22, 0x0B	; 11
    14d0:	64 9f       	mul	r22, r20
    14d2:	90 01       	movw	r18, r0
    14d4:	65 9f       	mul	r22, r21
    14d6:	30 0d       	add	r19, r0
    14d8:	11 24       	eor	r1, r1
    14da:	82 0f       	add	r24, r18
    14dc:	93 1f       	adc	r25, r19
    14de:	fc 01       	movw	r30, r24
    14e0:	ee 0f       	add	r30, r30
    14e2:	ff 1f       	adc	r31, r31
    14e4:	ea 5f       	subi	r30, 0xFA	; 250
    14e6:	ff 4d       	sbci	r31, 0xDF	; 223
    14e8:	80 81       	ld	r24, Z
    14ea:	91 81       	ldd	r25, Z+1	; 0x01
    14ec:	43 2d       	mov	r20, r3
    14ee:	50 e0       	ldi	r21, 0x00	; 0
    14f0:	f7 01       	movw	r30, r14
    14f2:	ba e1       	ldi	r27, 0x1A	; 26
    14f4:	3b 9e       	mul	r3, r27
    14f6:	e0 0d       	add	r30, r0
    14f8:	f1 1d       	adc	r31, r1
    14fa:	11 24       	eor	r1, r1
    14fc:	86 8b       	std	Z+22, r24	; 0x16
    14fe:	97 8b       	std	Z+23, r25	; 0x17
    1500:	f4 01       	movw	r30, r8
    1502:	20 81       	ld	r18, Z
    1504:	31 81       	ldd	r19, Z+1	; 0x01
    1506:	82 17       	cp	r24, r18
    1508:	93 07       	cpc	r25, r19
    150a:	08 f0       	brcs	.+2      	; 0x150e <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x2ce>
    150c:	67 c0       	rjmp	.+206    	; 0x15dc <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x39c>
    150e:	80 83       	st	Z, r24
    1510:	91 83       	std	Z+1, r25	; 0x01
    1512:	81 e0       	ldi	r24, 0x01	; 1
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	8d 83       	std	Y+5, r24	; 0x05
    1518:	9e 83       	std	Y+6, r25	; 0x06
    151a:	8a e1       	ldi	r24, 0x1A	; 26
    151c:	84 9f       	mul	r24, r20
    151e:	60 01       	movw	r12, r0
    1520:	85 9f       	mul	r24, r21
    1522:	d0 0c       	add	r13, r0
    1524:	11 24       	eor	r1, r1
    1526:	ce 0c       	add	r12, r14
    1528:	df 1c       	adc	r13, r15
    152a:	d6 01       	movw	r26, r12
    152c:	56 96       	adiw	r26, 0x16	; 22
    152e:	8d 91       	ld	r24, X+
    1530:	9c 91       	ld	r25, X
    1532:	57 97       	sbiw	r26, 0x17	; 23
    1534:	8b 83       	std	Y+3, r24	; 0x03
    1536:	9c 83       	std	Y+4, r25	; 0x04
    1538:	92 96       	adiw	r26, 0x22	; 34
    153a:	8d 91       	ld	r24, X+
    153c:	9c 91       	ld	r25, X
    153e:	93 97       	sbiw	r26, 0x23	; 35
    1540:	89 83       	std	Y+1, r24	; 0x01
    1542:	9a 83       	std	Y+2, r25	; 0x02
    1544:	08 e0       	ldi	r16, 0x08	; 8
    1546:	10 e2       	ldi	r17, 0x20	; 32
    1548:	24 e1       	ldi	r18, 0x14	; 20
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	ae 01       	movw	r20, r28
    154e:	4b 5f       	subi	r20, 0xFB	; 251
    1550:	5f 4f       	sbci	r21, 0xFF	; 255
    1552:	be 01       	movw	r22, r28
    1554:	6d 5f       	subi	r22, 0xFD	; 253
    1556:	7f 4f       	sbci	r23, 0xFF	; 255
    1558:	ce 01       	movw	r24, r28
    155a:	01 96       	adiw	r24, 0x01	; 1
    155c:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_Z13NormalizeStepRjS_S_jPj>
    1560:	29 81       	ldd	r18, Y+1	; 0x01
    1562:	3a 81       	ldd	r19, Y+2	; 0x02
    1564:	f6 01       	movw	r30, r12
    1566:	22 a3       	std	Z+34, r18	; 0x22
    1568:	33 a3       	std	Z+35, r19	; 0x23
    156a:	6d 81       	ldd	r22, Y+5	; 0x05
    156c:	7e 81       	ldd	r23, Y+6	; 0x06
    156e:	64 a3       	std	Z+36, r22	; 0x24
    1570:	75 a3       	std	Z+37, r23	; 0x25
    1572:	86 89       	ldd	r24, Z+22	; 0x16
    1574:	97 89       	ldd	r25, Z+23	; 0x17
    1576:	82 1b       	sub	r24, r18
    1578:	93 0b       	sbc	r25, r19
    157a:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    157e:	66 a3       	std	Z+38, r22	; 0x26
    1580:	77 a3       	std	Z+39, r23	; 0x27
    1582:	20 8f       	std	Z+24, r18	; 0x18
    1584:	31 8f       	std	Z+25, r19	; 0x19
    1586:	8b 81       	ldd	r24, Y+3	; 0x03
    1588:	9c 81       	ldd	r25, Y+4	; 0x04
    158a:	86 8b       	std	Z+22, r24	; 0x16
    158c:	97 8b       	std	Z+23, r25	; 0x17
    158e:	f7 01       	movw	r30, r14
    1590:	e8 51       	subi	r30, 0x18	; 24
    1592:	ff 4f       	sbci	r31, 0xFF	; 255
    1594:	d4 01       	movw	r26, r8
    1596:	8d 91       	ld	r24, X+
    1598:	9c 91       	ld	r25, X
    159a:	d6 01       	movw	r26, r12
    159c:	82 1b       	sub	r24, r18
    159e:	93 0b       	sbc	r25, r19
    15a0:	94 96       	adiw	r26, 0x24	; 36
    15a2:	6d 91       	ld	r22, X+
    15a4:	7c 91       	ld	r23, X
    15a6:	95 97       	sbiw	r26, 0x25	; 37
    15a8:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    15ac:	60 83       	st	Z, r22
    15ae:	71 83       	std	Z+1, r23	; 0x01
    15b0:	f4 01       	movw	r30, r8
    15b2:	80 81       	ld	r24, Z
    15b4:	91 81       	ldd	r25, Z+1	; 0x01
    15b6:	f7 01       	movw	r30, r14
    15b8:	e2 51       	subi	r30, 0x12	; 18
    15ba:	ff 4f       	sbci	r31, 0xFF	; 255
    15bc:	80 83       	st	Z, r24
    15be:	91 83       	std	Z+1, r25	; 0x01
    15c0:	81 e0       	ldi	r24, 0x01	; 1
    15c2:	d7 01       	movw	r26, r14
    15c4:	51 96       	adiw	r26, 0x11	; 17
    15c6:	8c 93       	st	X, r24
    15c8:	09 c0       	rjmp	.+18     	; 0x15dc <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x39c>
    15ca:	80 e0       	ldi	r24, 0x00	; 0
    15cc:	81 11       	cpse	r24, r1
    15ce:	d1 ce       	rjmp	.-606    	; 0x1372 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x132>
    15d0:	db ce       	rjmp	.-586    	; 0x1388 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x148>
    15d2:	e8 17       	cp	r30, r24
    15d4:	f9 07       	cpc	r31, r25
    15d6:	08 f4       	brcc	.+2      	; 0x15da <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x39a>
    15d8:	09 cf       	rjmp	.-494    	; 0x13ec <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x1ac>
    15da:	59 cf       	rjmp	.-334    	; 0x148e <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM+0x24e>
    15dc:	80 e0       	ldi	r24, 0x00	; 0
    15de:	2a 96       	adiw	r28, 0x0a	; 10
    15e0:	cd bf       	out	0x3d, r28	; 61
    15e2:	de bf       	out	0x3e, r29	; 62
    15e4:	df 91       	pop	r29
    15e6:	cf 91       	pop	r28
    15e8:	1f 91       	pop	r17
    15ea:	0f 91       	pop	r16
    15ec:	ff 90       	pop	r15
    15ee:	ef 90       	pop	r14
    15f0:	df 90       	pop	r13
    15f2:	cf 90       	pop	r12
    15f4:	bf 90       	pop	r11
    15f6:	af 90       	pop	r10
    15f8:	9f 90       	pop	r9
    15fa:	8f 90       	pop	r8
    15fc:	7f 90       	pop	r7
    15fe:	6f 90       	pop	r6
    1600:	5f 90       	pop	r5
    1602:	4f 90       	pop	r4
    1604:	3f 90       	pop	r3
    1606:	08 95       	ret

00001608 <_ZN16CLaserControlApp17CalculateAllStepsERjS0_16APP_PROFILE_ENUM>:

void CLaserControlApp::CalculateAllSteps(uint16_t &freq, uint16_t &duration, APP_PROFILE mode)
{
    1608:	5f 92       	push	r5
    160a:	6f 92       	push	r6
    160c:	7f 92       	push	r7
    160e:	8f 92       	push	r8
    1610:	9f 92       	push	r9
    1612:	af 92       	push	r10
    1614:	bf 92       	push	r11
    1616:	cf 92       	push	r12
    1618:	df 92       	push	r13
    161a:	ef 92       	push	r14
    161c:	ff 92       	push	r15
    161e:	0f 93       	push	r16
    1620:	1f 93       	push	r17
    1622:	cf 93       	push	r28
    1624:	df 93       	push	r29
    1626:	cd b7       	in	r28, 0x3d	; 61
    1628:	de b7       	in	r29, 0x3e	; 62
    162a:	2a 97       	sbiw	r28, 0x0a	; 10
    162c:	cd bf       	out	0x3d, r28	; 61
    162e:	de bf       	out	0x3e, r29	; 62
    1630:	7c 01       	movw	r14, r24
    1632:	6b 01       	movw	r12, r22
    1634:	3a 01       	movw	r6, r20
    1636:	52 2e       	mov	r5, r18
	uint16_t MinD = MinDurationTable[freq];
    1638:	db 01       	movw	r26, r22
    163a:	4d 91       	ld	r20, X+
    163c:	5c 91       	ld	r21, X
    163e:	44 0f       	add	r20, r20
    1640:	55 1f       	adc	r21, r21
    1642:	fa 01       	movw	r30, r20
    1644:	e0 50       	subi	r30, 0x00	; 0
    1646:	fe 4d       	sbci	r31, 0xDE	; 222
    1648:	20 81       	ld	r18, Z
    164a:	31 81       	ldd	r19, Z+1	; 0x01
    164c:	29 87       	std	Y+9, r18	; 0x09
    164e:	3a 87       	std	Y+10, r19	; 0x0a
	uint16_t MaxD = MaxDurationTable[freq];
    1650:	fa 01       	movw	r30, r20
    1652:	e6 51       	subi	r30, 0x16	; 22
    1654:	fe 4d       	sbci	r31, 0xDE	; 222
    1656:	80 81       	ld	r24, Z
    1658:	91 81       	ldd	r25, Z+1	; 0x01
    165a:	8f 83       	std	Y+7, r24	; 0x07
    165c:	98 87       	std	Y+8, r25	; 0x08
	uint16_t Delta = (MaxD - MinD) / (TableNum[freq] - 1);
    165e:	82 1b       	sub	r24, r18
    1660:	93 0b       	sbc	r25, r19
    1662:	fa 01       	movw	r30, r20
    1664:	ec 52       	subi	r30, 0x2C	; 44
    1666:	fe 4d       	sbci	r31, 0xDE	; 222
    1668:	60 81       	ld	r22, Z
    166a:	71 81       	ldd	r23, Z+1	; 0x01
    166c:	61 50       	subi	r22, 0x01	; 1
    166e:	71 09       	sbc	r23, r1
    1670:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    1674:	4b 01       	movw	r8, r22
	uint16_t step = 1;
    1676:	aa 24       	eor	r10, r10
    1678:	a3 94       	inc	r10
    167a:	b1 2c       	mov	r11, r1
    167c:	ad 82       	std	Y+5, r10	; 0x05
    167e:	be 82       	std	Y+6, r11	; 0x06
	
	// Update duration helpers
	NormalizeStep(MinD, MaxD, step, 20, step_table);
    1680:	08 e0       	ldi	r16, 0x08	; 8
    1682:	10 e2       	ldi	r17, 0x20	; 32
    1684:	24 e1       	ldi	r18, 0x14	; 20
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	ae 01       	movw	r20, r28
    168a:	4b 5f       	subi	r20, 0xFB	; 251
    168c:	5f 4f       	sbci	r21, 0xFF	; 255
    168e:	be 01       	movw	r22, r28
    1690:	69 5f       	subi	r22, 0xF9	; 249
    1692:	7f 4f       	sbci	r23, 0xFF	; 255
    1694:	ce 01       	movw	r24, r28
    1696:	09 96       	adiw	r24, 0x09	; 9
    1698:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_Z13NormalizeStepRjS_S_jPj>
	pstGUI[mode].m_wDurationStep = step;
    169c:	6d 81       	ldd	r22, Y+5	; 0x05
    169e:	7e 81       	ldd	r23, Y+6	; 0x06
    16a0:	ba e1       	ldi	r27, 0x1A	; 26
    16a2:	5b 9e       	mul	r5, r27
    16a4:	e0 0c       	add	r14, r0
    16a6:	f1 1c       	adc	r15, r1
    16a8:	11 24       	eor	r1, r1
    16aa:	f7 01       	movw	r30, r14
    16ac:	62 a7       	std	Z+42, r22	; 0x2a
    16ae:	73 a7       	std	Z+43, r23	; 0x2b
	pstGUI[mode].m_wDurationNumSteps = (MaxD - MinD)/step;
    16b0:	29 85       	ldd	r18, Y+9	; 0x09
    16b2:	3a 85       	ldd	r19, Y+10	; 0x0a
    16b4:	8f 81       	ldd	r24, Y+7	; 0x07
    16b6:	98 85       	ldd	r25, Y+8	; 0x08
    16b8:	82 1b       	sub	r24, r18
    16ba:	93 0b       	sbc	r25, r19
    16bc:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    16c0:	64 a7       	std	Z+44, r22	; 0x2c
    16c2:	75 a7       	std	Z+45, r23	; 0x2d
	pstGUI[mode].m_wDurationOffset = MinD;
    16c4:	20 a7       	std	Z+40, r18	; 0x28
    16c6:	31 a7       	std	Z+41, r19	; 0x29
	
	uint16_t index = (duration - MinD) / Delta;
	index = min(max(0, index), TableNum[freq] - 1);
    16c8:	d6 01       	movw	r26, r12
    16ca:	ed 91       	ld	r30, X+
    16cc:	fc 91       	ld	r31, X
    16ce:	ee 0f       	add	r30, r30
    16d0:	ff 1f       	adc	r31, r31
    16d2:	ec 52       	subi	r30, 0x2C	; 44
    16d4:	fe 4d       	sbci	r31, 0xDE	; 222
    16d6:	00 81       	ld	r16, Z
    16d8:	11 81       	ldd	r17, Z+1	; 0x01
    16da:	01 50       	subi	r16, 0x01	; 1
    16dc:	11 09       	sbc	r17, r1
	NormalizeStep(MinD, MaxD, step, 20, step_table);
	pstGUI[mode].m_wDurationStep = step;
	pstGUI[mode].m_wDurationNumSteps = (MaxD - MinD)/step;
	pstGUI[mode].m_wDurationOffset = MinD;
	
	uint16_t index = (duration - MinD) / Delta;
    16de:	f3 01       	movw	r30, r6
    16e0:	80 81       	ld	r24, Z
    16e2:	91 81       	ldd	r25, Z+1	; 0x01
    16e4:	82 1b       	sub	r24, r18
    16e6:	93 0b       	sbc	r25, r19
    16e8:	b4 01       	movw	r22, r8
    16ea:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
	index = min(max(0, index), TableNum[freq] - 1);
    16ee:	80 e0       	ldi	r24, 0x00	; 0
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <_Z3maxjj>
    16f6:	b8 01       	movw	r22, r16
    16f8:	0e 94 61 16 	call	0x2cc2	; 0x2cc2 <_Z3minjj>
    16fc:	ac 01       	movw	r20, r24
	
	pstGUI[mode].m_wMaxEnergy = PowerTable[11 * (freq - 1) + index] / 5;
    16fe:	d6 01       	movw	r26, r12
    1700:	8d 91       	ld	r24, X+
    1702:	9c 91       	ld	r25, X
    1704:	1b e0       	ldi	r17, 0x0B	; 11
    1706:	18 9f       	mul	r17, r24
    1708:	f0 01       	movw	r30, r0
    170a:	19 9f       	mul	r17, r25
    170c:	f0 0d       	add	r31, r0
    170e:	11 24       	eor	r1, r1
    1710:	e4 0f       	add	r30, r20
    1712:	f5 1f       	adc	r31, r21
    1714:	ee 0f       	add	r30, r30
    1716:	ff 1f       	adc	r31, r31
    1718:	ee 51       	subi	r30, 0x1E	; 30
    171a:	ff 4d       	sbci	r31, 0xDF	; 223
    171c:	20 81       	ld	r18, Z
    171e:	31 81       	ldd	r19, Z+1	; 0x01
    1720:	ad ec       	ldi	r26, 0xCD	; 205
    1722:	bc ec       	ldi	r27, 0xCC	; 204
    1724:	0e 94 b4 39 	call	0x7368	; 0x7368 <__umulhisi3>
    1728:	96 95       	lsr	r25
    172a:	87 95       	ror	r24
    172c:	96 95       	lsr	r25
    172e:	87 95       	ror	r24
    1730:	f7 01       	movw	r30, r14
    1732:	84 8b       	std	Z+20, r24	; 0x14
    1734:	95 8b       	std	Z+21, r25	; 0x15
	pstGUI[mode].m_wMaxEnergy_ = EnergyTable[11 * (freq - 1) + index];
    1736:	d6 01       	movw	r26, r12
    1738:	8d 91       	ld	r24, X+
    173a:	9c 91       	ld	r25, X
    173c:	18 9f       	mul	r17, r24
    173e:	f0 01       	movw	r30, r0
    1740:	19 9f       	mul	r17, r25
    1742:	f0 0d       	add	r31, r0
    1744:	11 24       	eor	r1, r1
    1746:	e4 0f       	add	r30, r20
    1748:	f5 1f       	adc	r31, r21
    174a:	ee 0f       	add	r30, r30
    174c:	ff 1f       	adc	r31, r31
    174e:	ea 5f       	subi	r30, 0xFA	; 250
    1750:	ff 4d       	sbci	r31, 0xDF	; 223
    1752:	80 81       	ld	r24, Z
    1754:	91 81       	ldd	r25, Z+1	; 0x01
    1756:	f7 01       	movw	r30, r14
    1758:	86 8b       	std	Z+22, r24	; 0x16
    175a:	97 8b       	std	Z+23, r25	; 0x17
	
	// Update energy helpers
	step = 1;
    175c:	ad 82       	std	Y+5, r10	; 0x05
    175e:	be 82       	std	Y+6, r11	; 0x06
	uint16_t MaxEnergy = pstGUI[mode].m_wMaxEnergy_;
    1760:	8b 83       	std	Y+3, r24	; 0x03
    1762:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t Offset = pstGUI[mode].m_wEnergyOffset;
    1764:	82 a1       	ldd	r24, Z+34	; 0x22
    1766:	93 a1       	ldd	r25, Z+35	; 0x23
    1768:	89 83       	std	Y+1, r24	; 0x01
    176a:	9a 83       	std	Y+2, r25	; 0x02
	NormalizeStep(Offset, MaxEnergy, step, 20, step_table);
    176c:	08 e0       	ldi	r16, 0x08	; 8
    176e:	10 e2       	ldi	r17, 0x20	; 32
    1770:	24 e1       	ldi	r18, 0x14	; 20
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	ae 01       	movw	r20, r28
    1776:	4b 5f       	subi	r20, 0xFB	; 251
    1778:	5f 4f       	sbci	r21, 0xFF	; 255
    177a:	be 01       	movw	r22, r28
    177c:	6d 5f       	subi	r22, 0xFD	; 253
    177e:	7f 4f       	sbci	r23, 0xFF	; 255
    1780:	ce 01       	movw	r24, r28
    1782:	01 96       	adiw	r24, 0x01	; 1
    1784:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_Z13NormalizeStepRjS_S_jPj>
	pstGUI[mode].m_wEnergyOffset = Offset;
    1788:	29 81       	ldd	r18, Y+1	; 0x01
    178a:	3a 81       	ldd	r19, Y+2	; 0x02
    178c:	d7 01       	movw	r26, r14
    178e:	92 96       	adiw	r26, 0x22	; 34
    1790:	2d 93       	st	X+, r18
    1792:	3c 93       	st	X, r19
    1794:	93 97       	sbiw	r26, 0x23	; 35
	pstGUI[mode].m_wEnergyStep = step;
    1796:	6d 81       	ldd	r22, Y+5	; 0x05
    1798:	7e 81       	ldd	r23, Y+6	; 0x06
    179a:	94 96       	adiw	r26, 0x24	; 36
    179c:	6d 93       	st	X+, r22
    179e:	7c 93       	st	X, r23
    17a0:	95 97       	sbiw	r26, 0x25	; 37
	pstGUI[mode].m_wEnergyNumSteps = (pstGUI[mode].m_wMaxEnergy_ - Offset)/step;
    17a2:	56 96       	adiw	r26, 0x16	; 22
    17a4:	8d 91       	ld	r24, X+
    17a6:	9c 91       	ld	r25, X
    17a8:	57 97       	sbiw	r26, 0x17	; 23
    17aa:	82 1b       	sub	r24, r18
    17ac:	93 0b       	sbc	r25, r19
    17ae:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    17b2:	f7 01       	movw	r30, r14
    17b4:	66 a3       	std	Z+38, r22	; 0x26
    17b6:	77 a3       	std	Z+39, r23	; 0x27
}
    17b8:	2a 96       	adiw	r28, 0x0a	; 10
    17ba:	cd bf       	out	0x3d, r28	; 61
    17bc:	de bf       	out	0x3e, r29	; 62
    17be:	df 91       	pop	r29
    17c0:	cf 91       	pop	r28
    17c2:	1f 91       	pop	r17
    17c4:	0f 91       	pop	r16
    17c6:	ff 90       	pop	r15
    17c8:	ef 90       	pop	r14
    17ca:	df 90       	pop	r13
    17cc:	cf 90       	pop	r12
    17ce:	bf 90       	pop	r11
    17d0:	af 90       	pop	r10
    17d2:	9f 90       	pop	r9
    17d4:	8f 90       	pop	r8
    17d6:	7f 90       	pop	r7
    17d8:	6f 90       	pop	r6
    17da:	5f 90       	pop	r5
    17dc:	08 95       	ret

000017de <_ZN16CLaserControlApp11LaserPresetERjS0_S0_16APP_PROFILE_ENUM>:
	
	return result;
}

void CLaserControlApp::LaserPreset(uint16_t &freq, uint16_t &duration, uint16_t &energy, APP_PROFILE mode)
{
    17de:	8f 92       	push	r8
    17e0:	9f 92       	push	r9
    17e2:	af 92       	push	r10
    17e4:	bf 92       	push	r11
    17e6:	cf 92       	push	r12
    17e8:	df 92       	push	r13
    17ea:	ef 92       	push	r14
    17ec:	ff 92       	push	r15
    17ee:	0f 93       	push	r16
    17f0:	1f 93       	push	r17
    17f2:	cf 93       	push	r28
    17f4:	df 93       	push	r29
    17f6:	6c 01       	movw	r12, r24
    17f8:	7b 01       	movw	r14, r22
    17fa:	ea 01       	movw	r28, r20
    17fc:	49 01       	movw	r8, r18
    17fe:	10 2f       	mov	r17, r16
	UpdateLimits(freq, duration, energy, mode);
    1800:	d9 01       	movw	r26, r18
    1802:	2d 91       	ld	r18, X+
    1804:	3c 91       	ld	r19, X
    1806:	48 81       	ld	r20, Y
    1808:	59 81       	ldd	r21, Y+1	; 0x01
    180a:	fb 01       	movw	r30, r22
    180c:	60 81       	ld	r22, Z
    180e:	71 81       	ldd	r23, Z+1	; 0x01
    1810:	0e 94 45 08 	call	0x108a	; 0x108a <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM>
	//update = CheckLimits(freq, duration, mode);
	CalculateAllSteps(freq, duration, mode);
    1814:	21 2f       	mov	r18, r17
    1816:	ae 01       	movw	r20, r28
    1818:	b7 01       	movw	r22, r14
    181a:	c6 01       	movw	r24, r12
    181c:	0e 94 04 0b 	call	0x1608	; 0x1608 <_ZN16CLaserControlApp17CalculateAllStepsERjS0_16APP_PROFILE_ENUM>
	
	m_structLaserProfile[mode].Frequency = freq;
    1820:	01 2f       	mov	r16, r17
    1822:	10 e0       	ldi	r17, 0x00	; 0
    1824:	d7 01       	movw	r26, r14
    1826:	8d 91       	ld	r24, X+
    1828:	9c 91       	ld	r25, X
    182a:	f8 01       	movw	r30, r16
    182c:	ee 0f       	add	r30, r30
    182e:	ff 1f       	adc	r31, r31
    1830:	5f 01       	movw	r10, r30
    1832:	a0 0e       	add	r10, r16
    1834:	b1 1e       	adc	r11, r17
    1836:	aa 0c       	add	r10, r10
    1838:	bb 1c       	adc	r11, r11
    183a:	ac 0c       	add	r10, r12
    183c:	bd 1c       	adc	r11, r13
    183e:	d5 01       	movw	r26, r10
    1840:	aa 56       	subi	r26, 0x6A	; 106
    1842:	bf 4f       	sbci	r27, 0xFF	; 255
    1844:	8d 93       	st	X+, r24
    1846:	9c 93       	st	X, r25
	m_structLaserProfile[mode].EnergyCnt = (energy - pstGUI[mode].m_wEnergyOffset) / pstGUI[mode].m_wEnergyStep;
    1848:	8a e1       	ldi	r24, 0x1A	; 26
    184a:	80 9f       	mul	r24, r16
    184c:	90 01       	movw	r18, r0
    184e:	81 9f       	mul	r24, r17
    1850:	30 0d       	add	r19, r0
    1852:	11 24       	eor	r1, r1
    1854:	2c 0d       	add	r18, r12
    1856:	3d 1d       	adc	r19, r13
    1858:	d4 01       	movw	r26, r8
    185a:	8d 91       	ld	r24, X+
    185c:	9c 91       	ld	r25, X
    185e:	d9 01       	movw	r26, r18
    1860:	92 96       	adiw	r26, 0x22	; 34
    1862:	4d 91       	ld	r20, X+
    1864:	5c 91       	ld	r21, X
    1866:	93 97       	sbiw	r26, 0x23	; 35
    1868:	84 1b       	sub	r24, r20
    186a:	95 0b       	sbc	r25, r21
    186c:	94 96       	adiw	r26, 0x24	; 36
    186e:	6d 91       	ld	r22, X+
    1870:	7c 91       	ld	r23, X
    1872:	95 97       	sbiw	r26, 0x25	; 37
    1874:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    1878:	d5 01       	movw	r26, r10
    187a:	a6 56       	subi	r26, 0x66	; 102
    187c:	bf 4f       	sbci	r27, 0xFF	; 255
    187e:	6d 93       	st	X+, r22
    1880:	7c 93       	st	X, r23
	m_structLaserProfile[mode].DurationCnt = (duration - pstGUI[mode].m_wDurationOffset) / pstGUI[mode].m_wDurationStep;
    1882:	88 81       	ld	r24, Y
    1884:	99 81       	ldd	r25, Y+1	; 0x01
    1886:	d9 01       	movw	r26, r18
    1888:	98 96       	adiw	r26, 0x28	; 40
    188a:	4d 91       	ld	r20, X+
    188c:	5c 91       	ld	r21, X
    188e:	99 97       	sbiw	r26, 0x29	; 41
    1890:	84 1b       	sub	r24, r20
    1892:	95 0b       	sbc	r25, r21
    1894:	9a 96       	adiw	r26, 0x2a	; 42
    1896:	6d 91       	ld	r22, X+
    1898:	7c 91       	ld	r23, X
    189a:	9b 97       	sbiw	r26, 0x2b	; 43
    189c:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    18a0:	d5 01       	movw	r26, r10
    18a2:	a8 56       	subi	r26, 0x68	; 104
    18a4:	bf 4f       	sbci	r27, 0xFF	; 255
    18a6:	6d 93       	st	X+, r22
    18a8:	7c 93       	st	X, r23
    18aa:	11 97       	sbiw	r26, 0x01	; 1
	m_structLaserSettings[mode].Duration = duration;
    18ac:	88 81       	ld	r24, Y
    18ae:	99 81       	ldd	r25, Y+1	; 0x01
    18b0:	5e 96       	adiw	r26, 0x1e	; 30
    18b2:	8d 93       	st	X+, r24
    18b4:	9c 93       	st	X, r25
	m_structLaserSettings[mode].Energy = energy;
    18b6:	d4 01       	movw	r26, r8
    18b8:	8d 91       	ld	r24, X+
    18ba:	9c 91       	ld	r25, X
    18bc:	d5 01       	movw	r26, r10
    18be:	a8 54       	subi	r26, 0x48	; 72
    18c0:	bf 4f       	sbci	r27, 0xFF	; 255
    18c2:	8d 93       	st	X+, r24
    18c4:	9c 93       	st	X, r25
	m_structLaserSettings[mode].Power = 0; // deprecated
    18c6:	f5 01       	movw	r30, r10
    18c8:	ec 54       	subi	r30, 0x4C	; 76
    18ca:	ff 4f       	sbci	r31, 0xFF	; 255
    18cc:	10 82       	st	Z, r1
    18ce:	11 82       	std	Z+1, r1	; 0x01
	
	// Set settings to hardware
	uint16_t period = 1000 / freq;											//  period [ms]
    18d0:	f7 01       	movw	r30, r14
    18d2:	e0 80       	ld	r14, Z
    18d4:	f1 80       	ldd	r15, Z+1	; 0x01
    18d6:	88 ee       	ldi	r24, 0xE8	; 232
    18d8:	93 e0       	ldi	r25, 0x03	; 3
    18da:	b7 01       	movw	r22, r14
    18dc:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    18e0:	8b 01       	movw	r16, r22
	uint32_t dutycycle = uint32_t(duration * 1000ul) / uint32_t(period);	//  duration [ms] / period [us]
    18e2:	28 81       	ld	r18, Y
    18e4:	39 81       	ldd	r19, Y+1	; 0x01
    18e6:	a8 ee       	ldi	r26, 0xE8	; 232
    18e8:	b3 e0       	ldi	r27, 0x03	; 3
    18ea:	0e 94 b4 39 	call	0x7368	; 0x7368 <__umulhisi3>
    18ee:	98 01       	movw	r18, r16
    18f0:	40 e0       	ldi	r20, 0x00	; 0
    18f2:	50 e0       	ldi	r21, 0x00	; 0
    18f4:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <__udivmodsi4>
    18f8:	49 01       	movw	r8, r18
    18fa:	5a 01       	movw	r10, r20
	// calculate timer settings
	laserTimerPeriod = (6250 / freq) * 10;
    18fc:	8a e6       	ldi	r24, 0x6A	; 106
    18fe:	98 e1       	ldi	r25, 0x18	; 24
    1900:	b7 01       	movw	r22, r14
    1902:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    1906:	eb 01       	movw	r28, r22
    1908:	cc 0f       	add	r28, r28
    190a:	dd 1f       	adc	r29, r29
    190c:	66 0f       	add	r22, r22
    190e:	77 1f       	adc	r23, r23
    1910:	66 0f       	add	r22, r22
    1912:	77 1f       	adc	r23, r23
    1914:	66 0f       	add	r22, r22
    1916:	77 1f       	adc	r23, r23
    1918:	c6 0f       	add	r28, r22
    191a:	d7 1f       	adc	r29, r23
    191c:	f6 01       	movw	r30, r12
    191e:	ee 52       	subi	r30, 0x2E	; 46
    1920:	ff 4f       	sbci	r31, 0xFF	; 255
    1922:	c0 83       	st	Z, r28
    1924:	d1 83       	std	Z+1, r29	; 0x01
	laserTimerDutyCycle = laserTimerPeriod - uint16_t((uint32_t(laserTimerPeriod) * dutycycle) / 1000ul);
    1926:	76 01       	movw	r14, r12
    1928:	f4 ed       	ldi	r31, 0xD4	; 212
    192a:	ef 0e       	add	r14, r31
    192c:	f1 1c       	adc	r15, r1
    192e:	de 01       	movw	r26, r28
    1930:	a5 01       	movw	r20, r10
    1932:	94 01       	movw	r18, r8
    1934:	0e 94 c3 39 	call	0x7386	; 0x7386 <__muluhisi3>
    1938:	28 ee       	ldi	r18, 0xE8	; 232
    193a:	33 e0       	ldi	r19, 0x03	; 3
    193c:	40 e0       	ldi	r20, 0x00	; 0
    193e:	50 e0       	ldi	r21, 0x00	; 0
    1940:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <__udivmodsi4>
    1944:	c2 1b       	sub	r28, r18
    1946:	d3 0b       	sbc	r29, r19
    1948:	d7 01       	movw	r26, r14
    194a:	cd 93       	st	X+, r28
    194c:	dc 93       	st	X, r29
	laserTimerDutyCyclems = period;
    194e:	f6 01       	movw	r30, r12
    1950:	ea 52       	subi	r30, 0x2A	; 42
    1952:	ff 4f       	sbci	r31, 0xFF	; 255
    1954:	00 83       	st	Z, r16
    1956:	11 83       	std	Z+1, r17	; 0x01
}
    1958:	df 91       	pop	r29
    195a:	cf 91       	pop	r28
    195c:	1f 91       	pop	r17
    195e:	0f 91       	pop	r16
    1960:	ff 90       	pop	r15
    1962:	ef 90       	pop	r14
    1964:	df 90       	pop	r13
    1966:	cf 90       	pop	r12
    1968:	bf 90       	pop	r11
    196a:	af 90       	pop	r10
    196c:	9f 90       	pop	r9
    196e:	8f 90       	pop	r8
    1970:	08 95       	ret

00001972 <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM>:
}

bool CLaserControlApp::FreqLimits(uint16_t &freq, APP_PROFILE mode)
{
	bool UpdateFreq = false;
	switch (mode)
    1972:	42 30       	cpi	r20, 0x02	; 2
    1974:	d9 f0       	breq	.+54     	; 0x19ac <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x3a>
    1976:	18 f4       	brcc	.+6      	; 0x197e <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0xc>
    1978:	41 30       	cpi	r20, 0x01	; 1
    197a:	31 f0       	breq	.+12     	; 0x1988 <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x16>
    197c:	3e c0       	rjmp	.+124    	; 0x19fa <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x88>
    197e:	43 30       	cpi	r20, 0x03	; 3
    1980:	11 f1       	breq	.+68     	; 0x19c6 <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x54>
    1982:	44 30       	cpi	r20, 0x04	; 4
    1984:	69 f1       	breq	.+90     	; 0x19e0 <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x6e>
    1986:	39 c0       	rjmp	.+114    	; 0x19fa <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x88>
	{
		case PROFILE_DEFAULT:break;
		case PROFILE_SINGLE:
		pstGUI[mode].m_wMinFreq = 1;
    1988:	21 e0       	ldi	r18, 0x01	; 1
    198a:	30 e0       	ldi	r19, 0x00	; 0
    198c:	fc 01       	movw	r30, r24
    198e:	22 af       	std	Z+58, r18	; 0x3a
    1990:	33 af       	std	Z+59, r19	; 0x3b
		pstGUI[mode].m_wMaxFreq = 1;
    1992:	20 af       	std	Z+56, r18	; 0x38
    1994:	31 af       	std	Z+57, r19	; 0x39
		if (freq != 1)
    1996:	fb 01       	movw	r30, r22
    1998:	80 81       	ld	r24, Z
    199a:	91 81       	ldd	r25, Z+1	; 0x01
    199c:	01 97       	sbiw	r24, 0x01	; 1
    199e:	09 f4       	brne	.+2      	; 0x19a2 <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x30>
    19a0:	48 c0       	rjmp	.+144    	; 0x1a32 <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0xc0>
		{
			freq = 1;
    19a2:	81 e0       	ldi	r24, 0x01	; 1
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	80 83       	st	Z, r24
    19a8:	91 83       	std	Z+1, r25	; 0x01
    19aa:	08 95       	ret
			UpdateFreq = true;
		}
		break;
		case PROFILE_SLOW:
		pstGUI[mode].m_wMinFreq = 1;
    19ac:	21 e0       	ldi	r18, 0x01	; 1
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	fc 01       	movw	r30, r24
    19b2:	ec 5a       	subi	r30, 0xAC	; 172
    19b4:	ff 4f       	sbci	r31, 0xFF	; 255
    19b6:	20 83       	st	Z, r18
    19b8:	31 83       	std	Z+1, r19	; 0x01
		pstGUI[mode].m_wMaxFreq = 3;
    19ba:	23 e0       	ldi	r18, 0x03	; 3
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	32 97       	sbiw	r30, 0x02	; 2
    19c0:	20 83       	st	Z, r18
    19c2:	31 83       	std	Z+1, r19	; 0x01
		break;
    19c4:	1c c0       	rjmp	.+56     	; 0x19fe <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x8c>
		case PROFILE_MEDIUM:
		pstGUI[mode].m_wMinFreq = 4;
    19c6:	24 e0       	ldi	r18, 0x04	; 4
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	fc 01       	movw	r30, r24
    19cc:	e2 59       	subi	r30, 0x92	; 146
    19ce:	ff 4f       	sbci	r31, 0xFF	; 255
    19d0:	20 83       	st	Z, r18
    19d2:	31 83       	std	Z+1, r19	; 0x01
		pstGUI[mode].m_wMaxFreq = 6;
    19d4:	26 e0       	ldi	r18, 0x06	; 6
    19d6:	30 e0       	ldi	r19, 0x00	; 0
    19d8:	32 97       	sbiw	r30, 0x02	; 2
    19da:	20 83       	st	Z, r18
    19dc:	31 83       	std	Z+1, r19	; 0x01
		break;
    19de:	0f c0       	rjmp	.+30     	; 0x19fe <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x8c>
		case PROFILE_FAST:
		pstGUI[mode].m_wMinFreq = 7;
    19e0:	27 e0       	ldi	r18, 0x07	; 7
    19e2:	30 e0       	ldi	r19, 0x00	; 0
    19e4:	fc 01       	movw	r30, r24
    19e6:	e8 57       	subi	r30, 0x78	; 120
    19e8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ea:	20 83       	st	Z, r18
    19ec:	31 83       	std	Z+1, r19	; 0x01
		pstGUI[mode].m_wMaxFreq = 10;
    19ee:	2a e0       	ldi	r18, 0x0A	; 10
    19f0:	30 e0       	ldi	r19, 0x00	; 0
    19f2:	32 97       	sbiw	r30, 0x02	; 2
    19f4:	20 83       	st	Z, r18
    19f6:	31 83       	std	Z+1, r19	; 0x01
		break;
    19f8:	02 c0       	rjmp	.+4      	; 0x19fe <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0x8c>
	}
	if (mode != PROFILE_SINGLE)
    19fa:	41 30       	cpi	r20, 0x01	; 1
    19fc:	b1 f0       	breq	.+44     	; 0x1a2a <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0xb8>
	{
		if (freq < pstGUI[mode].m_wMinFreq)	{	/*freq = m_wMinFreq;*/	UpdateFreq = true;	}
    19fe:	fb 01       	movw	r30, r22
    1a00:	20 81       	ld	r18, Z
    1a02:	31 81       	ldd	r19, Z+1	; 0x01
    1a04:	fc 01       	movw	r30, r24
    1a06:	5a e1       	ldi	r21, 0x1A	; 26
    1a08:	45 9f       	mul	r20, r21
    1a0a:	e0 0d       	add	r30, r0
    1a0c:	f1 1d       	adc	r31, r1
    1a0e:	11 24       	eor	r1, r1
    1a10:	40 a1       	ldd	r20, Z+32	; 0x20
    1a12:	51 a1       	ldd	r21, Z+33	; 0x21
		if (freq > pstGUI[mode].m_wMaxFreq)	{	/*freq = m_wMaxFreq;*/	UpdateFreq = true;	}
    1a14:	86 8d       	ldd	r24, Z+30	; 0x1e
    1a16:	97 8d       	ldd	r25, Z+31	; 0x1f
    1a18:	82 17       	cp	r24, r18
    1a1a:	93 07       	cpc	r25, r19
    1a1c:	40 f0       	brcs	.+16     	; 0x1a2e <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0xbc>
		pstGUI[mode].m_wMaxFreq = 10;
		break;
	}
	if (mode != PROFILE_SINGLE)
	{
		if (freq < pstGUI[mode].m_wMinFreq)	{	/*freq = m_wMinFreq;*/	UpdateFreq = true;	}
    1a1e:	81 e0       	ldi	r24, 0x01	; 1
    1a20:	24 17       	cp	r18, r20
    1a22:	35 07       	cpc	r19, r21
    1a24:	38 f0       	brcs	.+14     	; 0x1a34 <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM+0xc2>
    1a26:	80 e0       	ldi	r24, 0x00	; 0
    1a28:	08 95       	ret
	pstGUI[mode].m_wEnergyNumSteps = (pstGUI[mode].m_wMaxEnergy_ - Offset)/step;
}

bool CLaserControlApp::FreqLimits(uint16_t &freq, APP_PROFILE mode)
{
	bool UpdateFreq = false;
    1a2a:	80 e0       	ldi	r24, 0x00	; 0
    1a2c:	08 95       	ret
		break;
	}
	if (mode != PROFILE_SINGLE)
	{
		if (freq < pstGUI[mode].m_wMinFreq)	{	/*freq = m_wMinFreq;*/	UpdateFreq = true;	}
		if (freq > pstGUI[mode].m_wMaxFreq)	{	/*freq = m_wMaxFreq;*/	UpdateFreq = true;	}
    1a2e:	81 e0       	ldi	r24, 0x01	; 1
    1a30:	08 95       	ret
	pstGUI[mode].m_wEnergyNumSteps = (pstGUI[mode].m_wMaxEnergy_ - Offset)/step;
}

bool CLaserControlApp::FreqLimits(uint16_t &freq, APP_PROFILE mode)
{
	bool UpdateFreq = false;
    1a32:	80 e0       	ldi	r24, 0x00	; 0
		// Update Frequency
		laserDiodeData.laserprofile.Frequency = freq;
	}*/
	
	return UpdateFreq;
    1a34:	08 95       	ret

00001a36 <_ZN16CLaserControlApp10InitializeEP9CMBSender>:
	}
}

// Initialization
void CLaserControlApp::Initialize(CMBSender* sender)
{
    1a36:	4f 92       	push	r4
    1a38:	5f 92       	push	r5
    1a3a:	6f 92       	push	r6
    1a3c:	7f 92       	push	r7
    1a3e:	8f 92       	push	r8
    1a40:	9f 92       	push	r9
    1a42:	af 92       	push	r10
    1a44:	bf 92       	push	r11
    1a46:	cf 92       	push	r12
    1a48:	df 92       	push	r13
    1a4a:	ef 92       	push	r14
    1a4c:	ff 92       	push	r15
    1a4e:	0f 93       	push	r16
    1a50:	cf 93       	push	r28
    1a52:	df 93       	push	r29
    1a54:	00 d0       	rcall	.+0      	; 0x1a56 <_ZN16CLaserControlApp10InitializeEP9CMBSender+0x20>
    1a56:	00 d0       	rcall	.+0      	; 0x1a58 <_ZN16CLaserControlApp10InitializeEP9CMBSender+0x22>
    1a58:	cd b7       	in	r28, 0x3d	; 61
    1a5a:	de b7       	in	r29, 0x3e	; 62
    1a5c:	7c 01       	movw	r14, r24
	// GUI class initialization
	m_cpSender = sender;
    1a5e:	fc 01       	movw	r30, r24
    1a60:	e6 5e       	subi	r30, 0xE6	; 230
    1a62:	fe 4f       	sbci	r31, 0xFE	; 254
    1a64:	60 83       	st	Z, r22
    1a66:	71 83       	std	Z+1, r23	; 0x01
	
	// Set global variables
	PIC_ID = 0;
    1a68:	fc 01       	movw	r30, r24
    1a6a:	17 86       	std	Z+15, r1	; 0x0f
	update = false;
    1a6c:	11 8a       	std	Z+17, r1	; 0x11
	prepare = false;
    1a6e:	12 8a       	std	Z+18, r1	; 0x12
	peltier_en = false;
    1a70:	13 8a       	std	Z+19, r1	; 0x13
	//isstarted = false;
	m_wSetMin = 0;
    1a72:	4c 01       	movw	r8, r24
    1a74:	fe ee       	ldi	r31, 0xEE	; 238
    1a76:	8f 1a       	sub	r8, r31
    1a78:	fe ef       	ldi	r31, 0xFE	; 254
    1a7a:	9f 0a       	sbc	r9, r31
    1a7c:	f4 01       	movw	r30, r8
    1a7e:	10 82       	st	Z, r1
    1a80:	11 82       	std	Z+1, r1	; 0x01
	m_wSetSec = 10;
    1a82:	5c 01       	movw	r10, r24
    1a84:	fc ee       	ldi	r31, 0xEC	; 236
    1a86:	af 1a       	sub	r10, r31
    1a88:	fe ef       	ldi	r31, 0xFE	; 254
    1a8a:	bf 0a       	sbc	r11, r31
    1a8c:	0f 2e       	mov	r0, r31
    1a8e:	fa e0       	ldi	r31, 0x0A	; 10
    1a90:	cf 2e       	mov	r12, r31
    1a92:	d1 2c       	mov	r13, r1
    1a94:	f0 2d       	mov	r31, r0
    1a96:	f5 01       	movw	r30, r10
    1a98:	c0 82       	st	Z, r12
    1a9a:	d1 82       	std	Z+1, r13	; 0x01
	m_wMillSec = 0;
    1a9c:	34 97       	sbiw	r30, 0x04	; 4
    1a9e:	10 82       	st	Z, r1
    1aa0:	11 82       	std	Z+1, r1	; 0x01
	m_wMinutes = m_wSetMin;
    1aa2:	f4 01       	movw	r30, r8
    1aa4:	80 81       	ld	r24, Z
    1aa6:	91 81       	ldd	r25, Z+1	; 0x01
    1aa8:	36 97       	sbiw	r30, 0x06	; 6
    1aaa:	80 83       	st	Z, r24
    1aac:	91 83       	std	Z+1, r25	; 0x01
	m_wSeconds = m_wSetSec;
    1aae:	f5 01       	movw	r30, r10
    1ab0:	80 81       	ld	r24, Z
    1ab2:	91 81       	ldd	r25, Z+1	; 0x01
    1ab4:	36 97       	sbiw	r30, 0x06	; 6
    1ab6:	80 83       	st	Z, r24
    1ab8:	91 83       	std	Z+1, r25	; 0x01
	m_wDeadTime = 0;
    1aba:	3a 96       	adiw	r30, 0x0a	; 10
    1abc:	10 82       	st	Z, r1
    1abe:	11 82       	std	Z+1, r1	; 0x01
	//m_wMaxEnergy_ = 6; // J/cm2
	
	//m_wEnergyStep = 1;
	//m_wDurationStep = 1;
	
	uint16_t freq = 10;
    1ac0:	cd 82       	std	Y+5, r12	; 0x05
    1ac2:	de 82       	std	Y+6, r13	; 0x06
	uint16_t duration = 40;
    1ac4:	0f 2e       	mov	r0, r31
    1ac6:	f8 e2       	ldi	r31, 0x28	; 40
    1ac8:	6f 2e       	mov	r6, r31
    1aca:	71 2c       	mov	r7, r1
    1acc:	f0 2d       	mov	r31, r0
    1ace:	6b 82       	std	Y+3, r6	; 0x03
    1ad0:	7c 82       	std	Y+4, r7	; 0x04
	uint16_t energy = 14;
    1ad2:	0f 2e       	mov	r0, r31
    1ad4:	fe e0       	ldi	r31, 0x0E	; 14
    1ad6:	4f 2e       	mov	r4, r31
    1ad8:	51 2c       	mov	r5, r1
    1ada:	f0 2d       	mov	r31, r0
    1adc:	49 82       	std	Y+1, r4	; 0x01
    1ade:	5a 82       	std	Y+2, r5	; 0x02
	
	// Fast profile
	LaserPreset(freq, duration, energy, PROFILE_FAST);
    1ae0:	04 e0       	ldi	r16, 0x04	; 4
    1ae2:	9e 01       	movw	r18, r28
    1ae4:	2f 5f       	subi	r18, 0xFF	; 255
    1ae6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ae8:	ae 01       	movw	r20, r28
    1aea:	4d 5f       	subi	r20, 0xFD	; 253
    1aec:	5f 4f       	sbci	r21, 0xFF	; 255
    1aee:	be 01       	movw	r22, r28
    1af0:	6b 5f       	subi	r22, 0xFB	; 251
    1af2:	7f 4f       	sbci	r23, 0xFF	; 255
    1af4:	c7 01       	movw	r24, r14
    1af6:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16CLaserControlApp11LaserPresetERjS0_S0_16APP_PROFILE_ENUM>
	// Medium profile
	freq = 5; duration = 80; energy = 26;
    1afa:	85 e0       	ldi	r24, 0x05	; 5
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	8d 83       	std	Y+5, r24	; 0x05
    1b00:	9e 83       	std	Y+6, r25	; 0x06
    1b02:	80 e5       	ldi	r24, 0x50	; 80
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	8b 83       	std	Y+3, r24	; 0x03
    1b08:	9c 83       	std	Y+4, r25	; 0x04
    1b0a:	8a e1       	ldi	r24, 0x1A	; 26
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	89 83       	std	Y+1, r24	; 0x01
    1b10:	9a 83       	std	Y+2, r25	; 0x02
	LaserPreset(freq, duration, energy, PROFILE_MEDIUM);
    1b12:	03 e0       	ldi	r16, 0x03	; 3
    1b14:	9e 01       	movw	r18, r28
    1b16:	2f 5f       	subi	r18, 0xFF	; 255
    1b18:	3f 4f       	sbci	r19, 0xFF	; 255
    1b1a:	ae 01       	movw	r20, r28
    1b1c:	4d 5f       	subi	r20, 0xFD	; 253
    1b1e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b20:	be 01       	movw	r22, r28
    1b22:	6b 5f       	subi	r22, 0xFB	; 251
    1b24:	7f 4f       	sbci	r23, 0xFF	; 255
    1b26:	c7 01       	movw	r24, r14
    1b28:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16CLaserControlApp11LaserPresetERjS0_S0_16APP_PROFILE_ENUM>
	// Slow profile
	freq = 2; duration = 120; energy = 36;
    1b2c:	82 e0       	ldi	r24, 0x02	; 2
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	8d 83       	std	Y+5, r24	; 0x05
    1b32:	9e 83       	std	Y+6, r25	; 0x06
    1b34:	88 e7       	ldi	r24, 0x78	; 120
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	8b 83       	std	Y+3, r24	; 0x03
    1b3a:	9c 83       	std	Y+4, r25	; 0x04
    1b3c:	84 e2       	ldi	r24, 0x24	; 36
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	89 83       	std	Y+1, r24	; 0x01
    1b42:	9a 83       	std	Y+2, r25	; 0x02
	LaserPreset(freq, duration, energy, PROFILE_SLOW);
    1b44:	02 e0       	ldi	r16, 0x02	; 2
    1b46:	9e 01       	movw	r18, r28
    1b48:	2f 5f       	subi	r18, 0xFF	; 255
    1b4a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b4c:	ae 01       	movw	r20, r28
    1b4e:	4d 5f       	subi	r20, 0xFD	; 253
    1b50:	5f 4f       	sbci	r21, 0xFF	; 255
    1b52:	be 01       	movw	r22, r28
    1b54:	6b 5f       	subi	r22, 0xFB	; 251
    1b56:	7f 4f       	sbci	r23, 0xFF	; 255
    1b58:	c7 01       	movw	r24, r14
    1b5a:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16CLaserControlApp11LaserPresetERjS0_S0_16APP_PROFILE_ENUM>
	// Single profile
	freq = 10; duration = 100; energy = 38;
    1b5e:	cd 82       	std	Y+5, r12	; 0x05
    1b60:	de 82       	std	Y+6, r13	; 0x06
    1b62:	84 e6       	ldi	r24, 0x64	; 100
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	8b 83       	std	Y+3, r24	; 0x03
    1b68:	9c 83       	std	Y+4, r25	; 0x04
    1b6a:	86 e2       	ldi	r24, 0x26	; 38
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	89 83       	std	Y+1, r24	; 0x01
    1b70:	9a 83       	std	Y+2, r25	; 0x02
	LaserPreset(freq, duration, energy, PROFILE_SINGLE);
    1b72:	01 e0       	ldi	r16, 0x01	; 1
    1b74:	9e 01       	movw	r18, r28
    1b76:	2f 5f       	subi	r18, 0xFF	; 255
    1b78:	3f 4f       	sbci	r19, 0xFF	; 255
    1b7a:	ae 01       	movw	r20, r28
    1b7c:	4d 5f       	subi	r20, 0xFD	; 253
    1b7e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b80:	be 01       	movw	r22, r28
    1b82:	6b 5f       	subi	r22, 0xFB	; 251
    1b84:	7f 4f       	sbci	r23, 0xFF	; 255
    1b86:	c7 01       	movw	r24, r14
    1b88:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16CLaserControlApp11LaserPresetERjS0_S0_16APP_PROFILE_ENUM>
	
	// Current profile
	Profile = PROFILE_FAST;
    1b8c:	84 e0       	ldi	r24, 0x04	; 4
    1b8e:	f7 01       	movw	r30, r14
    1b90:	86 87       	std	Z+14, r24	; 0x0e
	
	// Set all laser settings
	laserCounter = eeprom_read_dword((uint32_t*)LASER_CNT_EEPROMADDR);
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	0e 94 04 3b 	call	0x7608	; 0x7608 <eeprom_read_dword>
    1b9a:	f7 01       	movw	r30, r14
    1b9c:	e6 52       	subi	r30, 0x26	; 38
    1b9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba0:	60 83       	st	Z, r22
    1ba2:	71 83       	std	Z+1, r23	; 0x01
    1ba4:	82 83       	std	Z+2, r24	; 0x02
    1ba6:	93 83       	std	Z+3, r25	; 0x03
	laserDiodeData.mode = Profile;
    1ba8:	38 96       	adiw	r30, 0x08	; 8
    1baa:	24 e0       	ldi	r18, 0x04	; 4
    1bac:	30 e0       	ldi	r19, 0x00	; 0
    1bae:	20 83       	st	Z, r18
    1bb0:	31 83       	std	Z+1, r19	; 0x01
	memcpy((void*)&laserDiodeData.laserprofile, (void*)&m_structLaserProfile[PROFILE_FAST], sizeof(DGUS_LASERPROFILE));
    1bb2:	d7 01       	movw	r26, r14
    1bb4:	ac 51       	subi	r26, 0x1C	; 28
    1bb6:	bf 4f       	sbci	r27, 0xFF	; 255
    1bb8:	f4 97       	sbiw	r30, 0x34	; 52
    1bba:	26 e0       	ldi	r18, 0x06	; 6
    1bbc:	01 90       	ld	r0, Z+
    1bbe:	0d 92       	st	X+, r0
    1bc0:	2a 95       	dec	r18
    1bc2:	e1 f7       	brne	.-8      	; 0x1bbc <_ZN16CLaserControlApp10InitializeEP9CMBSender+0x186>
	memcpy((void*)&laserDiodeData.lasersettings, (void*)&m_structLaserSettings[PROFILE_FAST], sizeof(DGUS_LASERSETTINGS));
    1bc4:	d7 01       	movw	r26, r14
    1bc6:	a6 51       	subi	r26, 0x16	; 22
    1bc8:	bf 4f       	sbci	r27, 0xFF	; 255
    1bca:	f7 01       	movw	r30, r14
    1bcc:	e4 53       	subi	r30, 0x34	; 52
    1bce:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd0:	26 e0       	ldi	r18, 0x06	; 6
    1bd2:	01 90       	ld	r0, Z+
    1bd4:	0d 92       	st	X+, r0
    1bd6:	2a 95       	dec	r18
    1bd8:	e1 f7       	brne	.-8      	; 0x1bd2 <_ZN16CLaserControlApp10InitializeEP9CMBSender+0x19c>
	//laserDiodeData.lasersettings = CalculateLaserSettings((DGUS_LASERPROFILE*)&m_structLaserProfile[PROFILE_FAST]);
	laserDiodeData.timer.timer_minutes = m_wSetMin;
    1bda:	f4 01       	movw	r30, r8
    1bdc:	20 81       	ld	r18, Z
    1bde:	31 81       	ldd	r19, Z+1	; 0x01
    1be0:	74 97       	sbiw	r30, 0x14	; 20
    1be2:	20 83       	st	Z, r18
    1be4:	31 83       	std	Z+1, r19	; 0x01
	laserDiodeData.timer.timer_seconds = m_wSetSec;
    1be6:	f5 01       	movw	r30, r10
    1be8:	20 81       	ld	r18, Z
    1bea:	31 81       	ldd	r19, Z+1	; 0x01
    1bec:	74 97       	sbiw	r30, 0x14	; 20
    1bee:	20 83       	st	Z, r18
    1bf0:	31 83       	std	Z+1, r19	; 0x01
	laserDiodeData.PulseCounter = swap32(laserCounter);
    1bf2:	0e 94 6f 16 	call	0x2cde	; 0x2cde <_Z6swap32m>
    1bf6:	f7 01       	movw	r30, r14
    1bf8:	e0 51       	subi	r30, 0x10	; 16
    1bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfc:	60 83       	st	Z, r22
    1bfe:	71 83       	std	Z+1, r23	; 0x01
    1c00:	82 83       	std	Z+2, r24	; 0x02
    1c02:	93 83       	std	Z+3, r25	; 0x03
	laserDiodeData.melanin = 0;
    1c04:	34 96       	adiw	r30, 0x04	; 4
    1c06:	10 82       	st	Z, r1
    1c08:	11 82       	std	Z+1, r1	; 0x01
	laserDiodeData.phototype = 1;
    1c0a:	32 96       	adiw	r30, 0x02	; 2
    1c0c:	81 e0       	ldi	r24, 0x01	; 1
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	80 83       	st	Z, r24
    1c12:	91 83       	std	Z+1, r25	; 0x01
	laserDiodeData.temperature = temperature;
    1c14:	32 96       	adiw	r30, 0x02	; 2
    1c16:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    1c1a:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    1c1e:	80 83       	st	Z, r24
    1c20:	91 83       	std	Z+1, r25	; 0x01
	laserDiodeData.cooling = 3;
    1c22:	32 96       	adiw	r30, 0x02	; 2
    1c24:	83 e0       	ldi	r24, 0x03	; 3
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	80 83       	st	Z, r24
    1c2a:	91 83       	std	Z+1, r25	; 0x01
	laserDiodeData.flow = 0;
    1c2c:	32 96       	adiw	r30, 0x02	; 2
    1c2e:	10 82       	st	Z, r1
    1c30:	11 82       	std	Z+1, r1	; 0x01
	laserDiodeData.DatabasePageOffset = 0;
    1c32:	36 96       	adiw	r30, 0x06	; 6
    1c34:	10 82       	st	Z, r1
    1c36:	11 82       	std	Z+1, r1	; 0x01
	laserDiodeData.DatabaseSelectionIndex = 13;
    1c38:	32 96       	adiw	r30, 0x02	; 2
    1c3a:	8d e0       	ldi	r24, 0x0D	; 13
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	80 83       	st	Z, r24
    1c40:	91 83       	std	Z+1, r25	; 0x01
	laserDiodeData.SessionPulseCounter = 0;
    1c42:	34 96       	adiw	r30, 0x04	; 4
    1c44:	10 82       	st	Z, r1
    1c46:	11 82       	std	Z+1, r1	; 0x01
    1c48:	12 82       	std	Z+2, r1	; 0x02
    1c4a:	13 82       	std	Z+3, r1	; 0x03
	
	// Preset hardware to FAST mode
	freq = 10;
    1c4c:	cd 82       	std	Y+5, r12	; 0x05
    1c4e:	de 82       	std	Y+6, r13	; 0x06
	duration = 40;
    1c50:	6b 82       	std	Y+3, r6	; 0x03
    1c52:	7c 82       	std	Y+4, r7	; 0x04
	energy = 14;
    1c54:	49 82       	std	Y+1, r4	; 0x01
    1c56:	5a 82       	std	Y+2, r5	; 0x02
	LaserPreset(freq, duration, energy, PROFILE_FAST);
    1c58:	04 e0       	ldi	r16, 0x04	; 4
    1c5a:	9e 01       	movw	r18, r28
    1c5c:	2f 5f       	subi	r18, 0xFF	; 255
    1c5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c60:	ae 01       	movw	r20, r28
    1c62:	4d 5f       	subi	r20, 0xFD	; 253
    1c64:	5f 4f       	sbci	r21, 0xFF	; 255
    1c66:	be 01       	movw	r22, r28
    1c68:	6b 5f       	subi	r22, 0xFB	; 251
    1c6a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c6c:	c7 01       	movw	r24, r14
    1c6e:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16CLaserControlApp11LaserPresetERjS0_S0_16APP_PROFILE_ENUM>
	
	// Initialize Laser timer
	laserTimer.Initialize(WGM_SingleSlopePWM, CS_DIV1024);
    1c72:	47 e0       	ldi	r20, 0x07	; 7
    1c74:	63 e0       	ldi	r22, 0x03	; 3
    1c76:	8a ee       	ldi	r24, 0xEA	; 234
    1c78:	96 e2       	ldi	r25, 0x26	; 38
    1c7a:	0e 94 31 37 	call	0x6e62	; 0x6e62 <_ZN7CTimerF10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
	laserTimer.SetPeriod(laserTimerPeriod);		// 10 Hz
    1c7e:	f7 01       	movw	r30, r14
    1c80:	ee 52       	subi	r30, 0x2E	; 46
    1c82:	ff 4f       	sbci	r31, 0xFF	; 255
    1c84:	60 81       	ld	r22, Z
    1c86:	71 81       	ldd	r23, Z+1	; 0x01
    1c88:	8a ee       	ldi	r24, 0xEA	; 234
    1c8a:	96 e2       	ldi	r25, 0x26	; 38
    1c8c:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN7CTimerF9SetPeriodEj>
	laserTimer.SetCOMPA(laserTimerDutyCycle);	// 50 ms, 50% duty cycle
    1c90:	67 01       	movw	r12, r14
    1c92:	f4 ed       	ldi	r31, 0xD4	; 212
    1c94:	cf 0e       	add	r12, r31
    1c96:	d1 1c       	adc	r13, r1
    1c98:	f6 01       	movw	r30, r12
    1c9a:	60 81       	ld	r22, Z
    1c9c:	71 81       	ldd	r23, Z+1	; 0x01
    1c9e:	8a ee       	ldi	r24, 0xEA	; 234
    1ca0:	96 e2       	ldi	r25, 0x26	; 38
    1ca2:	0e 94 84 37 	call	0x6f08	; 0x6f08 <_ZN7CTimerF8SetCOMPAEj>
	laserTimer.SetOVFCallback(OnLaserTimerStopStatic, this, TC_OVFINTLVL_LO_gc);
    1ca6:	21 e0       	ldi	r18, 0x01	; 1
    1ca8:	a7 01       	movw	r20, r14
    1caa:	65 ea       	ldi	r22, 0xA5	; 165
    1cac:	76 e0       	ldi	r23, 0x06	; 6
    1cae:	8a ee       	ldi	r24, 0xEA	; 234
    1cb0:	96 e2       	ldi	r25, 0x26	; 38
    1cb2:	0e 94 98 37 	call	0x6f30	; 0x6f30 <_ZN7CTimerF14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>
	laserTimer.SetCOMPACallback(OnLaserTimerStatic, this, TC_CCAINTLVL_LO_gc);
    1cb6:	21 e0       	ldi	r18, 0x01	; 1
    1cb8:	a7 01       	movw	r20, r14
    1cba:	6c ee       	ldi	r22, 0xEC	; 236
    1cbc:	7e e0       	ldi	r23, 0x0E	; 14
    1cbe:	8a ee       	ldi	r24, 0xEA	; 234
    1cc0:	96 e2       	ldi	r25, 0x26	; 38
    1cc2:	0e 94 ba 37 	call	0x6f74	; 0x6f74 <_ZN7CTimerF16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>
	laserTimer.EnableChannel(TIMER_CHANNEL_A);	// Enable Laser TTL Gate
    1cc6:	60 e1       	ldi	r22, 0x10	; 16
    1cc8:	8a ee       	ldi	r24, 0xEA	; 234
    1cca:	96 e2       	ldi	r25, 0x26	; 38
    1ccc:	0e 94 61 37 	call	0x6ec2	; 0x6ec2 <_ZN7CTimerF13EnableChannelE19TIMER_CHANNELS_ENUM>
	laserTimer.ChannelSet(TIMER_CHANNEL_A);
    1cd0:	60 e1       	ldi	r22, 0x10	; 16
    1cd2:	8a ee       	ldi	r24, 0xEA	; 234
    1cd4:	96 e2       	ldi	r25, 0x26	; 38
    1cd6:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
#ifdef LED_LASER_INDICATOR
	laserTimer.SetCOMPB(laserTimerDutyCycle);	// 50 ms, 50% duty cycle
    1cda:	f6 01       	movw	r30, r12
    1cdc:	60 81       	ld	r22, Z
    1cde:	71 81       	ldd	r23, Z+1	; 0x01
    1ce0:	8a ee       	ldi	r24, 0xEA	; 234
    1ce2:	96 e2       	ldi	r25, 0x26	; 38
    1ce4:	0e 94 89 37 	call	0x6f12	; 0x6f12 <_ZN7CTimerF8SetCOMPBEj>
	laserTimer.EnableChannel(TIMER_CHANNEL_B);	// Enable Laser TTL Gate
    1ce8:	60 e2       	ldi	r22, 0x20	; 32
    1cea:	8a ee       	ldi	r24, 0xEA	; 234
    1cec:	96 e2       	ldi	r25, 0x26	; 38
    1cee:	0e 94 61 37 	call	0x6ec2	; 0x6ec2 <_ZN7CTimerF13EnableChannelE19TIMER_CHANNELS_ENUM>
	laserTimer.ChannelSet(TIMER_CHANNEL_B);
    1cf2:	60 e2       	ldi	r22, 0x20	; 32
    1cf4:	8a ee       	ldi	r24, 0xEA	; 234
    1cf6:	96 e2       	ldi	r25, 0x26	; 38
    1cf8:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
#endif
}
    1cfc:	26 96       	adiw	r28, 0x06	; 6
    1cfe:	cd bf       	out	0x3d, r28	; 61
    1d00:	de bf       	out	0x3e, r29	; 62
    1d02:	df 91       	pop	r29
    1d04:	cf 91       	pop	r28
    1d06:	0f 91       	pop	r16
    1d08:	ff 90       	pop	r15
    1d0a:	ef 90       	pop	r14
    1d0c:	df 90       	pop	r13
    1d0e:	cf 90       	pop	r12
    1d10:	bf 90       	pop	r11
    1d12:	af 90       	pop	r10
    1d14:	9f 90       	pop	r9
    1d16:	8f 90       	pop	r8
    1d18:	7f 90       	pop	r7
    1d1a:	6f 90       	pop	r6
    1d1c:	5f 90       	pop	r5
    1d1e:	4f 90       	pop	r4
    1d20:	08 95       	ret

00001d22 <_ZN16CLaserControlApp5StartEv>:

void CLaserControlApp::Start()
{	
    1d22:	ef 92       	push	r14
    1d24:	ff 92       	push	r15
    1d26:	0f 93       	push	r16
    1d28:	1f 93       	push	r17
    1d2a:	cf 93       	push	r28
    1d2c:	df 93       	push	r29
    1d2e:	1f 92       	push	r1
    1d30:	1f 92       	push	r1
    1d32:	cd b7       	in	r28, 0x3d	; 61
    1d34:	de b7       	in	r29, 0x3e	; 62
    1d36:	7c 01       	movw	r14, r24
	// Startup DGUS initialization
	uint16_t pic_id = swap(PICID_MAINMENU);
    1d38:	83 e0       	ldi	r24, 0x03	; 3
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <_Z4swapj>
    1d40:	89 83       	std	Y+1, r24	; 0x01
    1d42:	9a 83       	std	Y+2, r25	; 0x02
	m_cpSender->WriteDataToRegisterAsync(REGISTER_ADDR_PICID, (uint8_t*)&pic_id, 2);
    1d44:	87 01       	movw	r16, r14
    1d46:	06 5e       	subi	r16, 0xE6	; 230
    1d48:	1e 4f       	sbci	r17, 0xFE	; 254
    1d4a:	22 e0       	ldi	r18, 0x02	; 2
    1d4c:	ae 01       	movw	r20, r28
    1d4e:	4f 5f       	subi	r20, 0xFF	; 255
    1d50:	5f 4f       	sbci	r21, 0xFF	; 255
    1d52:	63 e0       	ldi	r22, 0x03	; 3
    1d54:	f8 01       	movw	r30, r16
    1d56:	80 81       	ld	r24, Z
    1d58:	91 81       	ldd	r25, Z+1	; 0x01
    1d5a:	0e 94 74 30 	call	0x60e8	; 0x60e8 <_ZN9CMBSender24WriteDataToRegisterAsyncEhPhh>
	m_cpSender->WaitMODBUSTransmitter();
    1d5e:	f8 01       	movw	r30, r16
    1d60:	80 81       	ld	r24, Z
    1d62:	91 81       	ldd	r25, Z+1	; 0x01
    1d64:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
	
	// Setup variables
	m_cpSender->WriteDataToSRAMAsync(STRUCT_ADDR_LASERDIODE_DATA, (uint16_t*)&laserDiodeData, sizeof(DGUS_LASERDIODE));
    1d68:	a7 01       	movw	r20, r14
    1d6a:	4e 51       	subi	r20, 0x1E	; 30
    1d6c:	5f 4f       	sbci	r21, 0xFF	; 255
    1d6e:	2a e2       	ldi	r18, 0x2A	; 42
    1d70:	30 e0       	ldi	r19, 0x00	; 0
    1d72:	61 e0       	ldi	r22, 0x01	; 1
    1d74:	70 e0       	ldi	r23, 0x00	; 0
    1d76:	f8 01       	movw	r30, r16
    1d78:	80 81       	ld	r24, Z
    1d7a:	91 81       	ldd	r25, Z+1	; 0x01
    1d7c:	0e 94 83 30 	call	0x6106	; 0x6106 <_ZN9CMBSender20WriteDataToSRAMAsyncEjPjj>
	m_cpSender->WaitMODBUSTransmitter();
    1d80:	f8 01       	movw	r30, r16
    1d82:	80 81       	ld	r24, Z
    1d84:	91 81       	ldd	r25, Z+1	; 0x01
    1d86:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
	
	timer.Start(25000);
    1d8a:	68 ea       	ldi	r22, 0xA8	; 168
    1d8c:	71 e6       	ldi	r23, 0x61	; 97
    1d8e:	80 ef       	ldi	r24, 0xF0	; 240
    1d90:	96 e2       	ldi	r25, 0x26	; 38
    1d92:	0e 94 50 34 	call	0x68a0	; 0x68a0 <_ZN7CTimerC5StartEj>
	
	state = APP_WORKSETUP;
    1d96:	84 e0       	ldi	r24, 0x04	; 4
    1d98:	90 e0       	ldi	r25, 0x00	; 0
    1d9a:	f7 01       	movw	r30, r14
    1d9c:	84 87       	std	Z+12, r24	; 0x0c
    1d9e:	95 87       	std	Z+13, r25	; 0x0d
}
    1da0:	0f 90       	pop	r0
    1da2:	0f 90       	pop	r0
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	1f 91       	pop	r17
    1daa:	0f 91       	pop	r16
    1dac:	ff 90       	pop	r15
    1dae:	ef 90       	pop	r14
    1db0:	08 95       	ret

00001db2 <_ZN16CLaserControlApp16OnLaserTimerStopEv>:
	player.SoundStop();
}

void CLaserControlApp::OnLaserTimerStop()
{	
	if (Profile == PROFILE_SINGLE)
    1db2:	fc 01       	movw	r30, r24
    1db4:	86 85       	ldd	r24, Z+14	; 0x0e
    1db6:	81 30       	cpi	r24, 0x01	; 1
    1db8:	71 f4       	brne	.+28     	; 0x1dd6 <_ZN16CLaserControlApp16OnLaserTimerStopEv+0x24>
	{
		laserTimer.Stop();
    1dba:	8a ee       	ldi	r24, 0xEA	; 234
    1dbc:	96 e2       	ldi	r25, 0x26	; 38
    1dbe:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <_ZN7CTimerF4StopEv>
		laserTimer.ChannelSet(TIMER_CHANNEL_A);
    1dc2:	60 e1       	ldi	r22, 0x10	; 16
    1dc4:	8a ee       	ldi	r24, 0xEA	; 234
    1dc6:	96 e2       	ldi	r25, 0x26	; 38
    1dc8:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
		laserTimer.ChannelSet(TIMER_CHANNEL_B);
    1dcc:	60 e2       	ldi	r22, 0x20	; 32
    1dce:	8a ee       	ldi	r24, 0xEA	; 234
    1dd0:	96 e2       	ldi	r25, 0x26	; 38
    1dd2:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
    1dd6:	08 95       	ret

00001dd8 <_ZN16CLaserControlApp18OnLaserTimerStaticEPv>:
}

void CLaserControlApp::OnLaserTimerStatic(void* sender)
{
	CLaserControlApp* app = (CLaserControlApp*)sender;
	app->OnLaserTimerStop();
    1dd8:	0e 94 d9 0e 	call	0x1db2	; 0x1db2 <_ZN16CLaserControlApp16OnLaserTimerStopEv>
    1ddc:	08 95       	ret

00001dde <_ZN16CLaserControlApp3RunEv>:
	uint16_t data = ((uint16_t)((laserPower * 1024) / MAX_LASER_POWER)) << 2;  // (laserPower * 640) / 63)
	dacSPI.Send((uint8_t*)&data, sizeof(data));
}

void CLaserControlApp::Run()
{	
    1dde:	6f 92       	push	r6
    1de0:	7f 92       	push	r7
    1de2:	8f 92       	push	r8
    1de4:	9f 92       	push	r9
    1de6:	af 92       	push	r10
    1de8:	bf 92       	push	r11
    1dea:	cf 92       	push	r12
    1dec:	df 92       	push	r13
    1dee:	ef 92       	push	r14
    1df0:	ff 92       	push	r15
    1df2:	0f 93       	push	r16
    1df4:	1f 93       	push	r17
    1df6:	cf 93       	push	r28
    1df8:	df 93       	push	r29
    1dfa:	cd b7       	in	r28, 0x3d	; 61
    1dfc:	de b7       	in	r29, 0x3e	; 62
    1dfe:	2e 97       	sbiw	r28, 0x0e	; 14
    1e00:	cd bf       	out	0x3d, r28	; 61
    1e02:	de bf       	out	0x3e, r29	; 62
    1e04:	7c 01       	movw	r14, r24
	// Get PIC ID
	m_cpSender->StartMODBUSRegisterTransaction(REGISTER_ADDR_PICID, 2);
    1e06:	8c 01       	movw	r16, r24
    1e08:	06 5e       	subi	r16, 0xE6	; 230
    1e0a:	1e 4f       	sbci	r17, 0xFE	; 254
    1e0c:	42 e0       	ldi	r20, 0x02	; 2
    1e0e:	63 e0       	ldi	r22, 0x03	; 3
    1e10:	d8 01       	movw	r26, r16
    1e12:	8d 91       	ld	r24, X+
    1e14:	9c 91       	ld	r25, X
    1e16:	0e 94 c2 30 	call	0x6184	; 0x6184 <_ZN9CMBSender30StartMODBUSRegisterTransactionEhh>
	m_cpSender->WaitMODBUSTransmitter();
    1e1a:	f8 01       	movw	r30, r16
    1e1c:	80 81       	ld	r24, Z
    1e1e:	91 81       	ldd	r25, Z+1	; 0x01
    1e20:	0e 94 b1 30 	call	0x6162	; 0x6162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>
	m_cpSender->WaitMODBUSListener();
    1e24:	d8 01       	movw	r26, r16
    1e26:	8d 91       	ld	r24, X+
    1e28:	9c 91       	ld	r25, X
    1e2a:	0e 94 4e 30 	call	0x609c	; 0x609c <_ZN9CMBSender18WaitMODBUSListenerEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1e2e:	bf ef       	ldi	r27, 0xFF	; 255
    1e30:	e9 ef       	ldi	r30, 0xF9	; 249
    1e32:	f0 e0       	ldi	r31, 0x00	; 0
    1e34:	b1 50       	subi	r27, 0x01	; 1
    1e36:	e0 40       	sbci	r30, 0x00	; 0
    1e38:	f0 40       	sbci	r31, 0x00	; 0
    1e3a:	e1 f7       	brne	.-8      	; 0x1e34 <_ZN16CLaserControlApp3RunEv+0x56>
    1e3c:	00 c0       	rjmp	.+0      	; 0x1e3e <_ZN16CLaserControlApp3RunEv+0x60>
    1e3e:	00 00       	nop
	
	_delay_ms(10);
	
	// show sensors
	if ((state & 0xFFF) != 0)
    1e40:	d7 01       	movw	r26, r14
    1e42:	1c 96       	adiw	r26, 0x0c	; 12
    1e44:	8d 91       	ld	r24, X+
    1e46:	9c 91       	ld	r25, X
    1e48:	1d 97       	sbiw	r26, 0x0d	; 13
    1e4a:	9f 70       	andi	r25, 0x0F	; 15
    1e4c:	89 2b       	or	r24, r25
    1e4e:	09 f4       	brne	.+2      	; 0x1e52 <_ZN16CLaserControlApp3RunEv+0x74>
    1e50:	41 c0       	rjmp	.+130    	; 0x1ed4 <_ZN16CLaserControlApp3RunEv+0xf6>
	{
		SetVariable(VARIABLE_ADDR_TEMPER, (uint16_t*)&temperature, 2);
    1e52:	22 e0       	ldi	r18, 0x02	; 2
    1e54:	30 e0       	ldi	r19, 0x00	; 0
    1e56:	40 e9       	ldi	r20, 0x90	; 144
    1e58:	55 e2       	ldi	r21, 0x25	; 37
    1e5a:	6c e0       	ldi	r22, 0x0C	; 12
    1e5c:	70 e0       	ldi	r23, 0x00	; 0
    1e5e:	c7 01       	movw	r24, r14
    1e60:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
		if (m_wFlow < 20) laserDiodeData.coolIcon = 1;
    1e64:	f7 01       	movw	r30, r14
    1e66:	ea 5e       	subi	r30, 0xEA	; 234
    1e68:	fe 4f       	sbci	r31, 0xFE	; 254
    1e6a:	80 81       	ld	r24, Z
    1e6c:	91 81       	ldd	r25, Z+1	; 0x01
    1e6e:	44 97       	sbiw	r24, 0x14	; 20
    1e70:	28 f4       	brcc	.+10     	; 0x1e7c <_ZN16CLaserControlApp3RunEv+0x9e>
    1e72:	81 e0       	ldi	r24, 0x01	; 1
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	70 97       	sbiw	r30, 0x10	; 16
    1e78:	80 83       	st	Z, r24
    1e7a:	91 83       	std	Z+1, r25	; 0x01
		if (m_wFlow >= 20 && m_wFlow <= 40) laserDiodeData.coolIcon = 2;
    1e7c:	f7 01       	movw	r30, r14
    1e7e:	ea 5e       	subi	r30, 0xEA	; 234
    1e80:	fe 4f       	sbci	r31, 0xFE	; 254
    1e82:	80 81       	ld	r24, Z
    1e84:	91 81       	ldd	r25, Z+1	; 0x01
    1e86:	44 97       	sbiw	r24, 0x14	; 20
    1e88:	28 f0       	brcs	.+10     	; 0x1e94 <_ZN16CLaserControlApp3RunEv+0xb6>
    1e8a:	80 81       	ld	r24, Z
    1e8c:	91 81       	ldd	r25, Z+1	; 0x01
    1e8e:	89 97       	sbiw	r24, 0x29	; 41
    1e90:	08 f4       	brcc	.+2      	; 0x1e94 <_ZN16CLaserControlApp3RunEv+0xb6>
    1e92:	13 c5       	rjmp	.+2598   	; 0x28ba <_ZN16CLaserControlApp3RunEv+0xadc>
		if (m_wFlow > 40) laserDiodeData.coolIcon = 3;
    1e94:	f7 01       	movw	r30, r14
    1e96:	ea 5e       	subi	r30, 0xEA	; 234
    1e98:	fe 4f       	sbci	r31, 0xFE	; 254
    1e9a:	80 81       	ld	r24, Z
    1e9c:	91 81       	ldd	r25, Z+1	; 0x01
    1e9e:	89 97       	sbiw	r24, 0x29	; 41
    1ea0:	28 f0       	brcs	.+10     	; 0x1eac <_ZN16CLaserControlApp3RunEv+0xce>
    1ea2:	83 e0       	ldi	r24, 0x03	; 3
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	70 97       	sbiw	r30, 0x10	; 16
    1ea8:	80 83       	st	Z, r24
    1eaa:	91 83       	std	Z+1, r25	; 0x01
		SetVariable(VARIABLE_ADDR_COOLICON, (uint16_t*)&laserDiodeData.coolIcon, 2);
    1eac:	22 e0       	ldi	r18, 0x02	; 2
    1eae:	30 e0       	ldi	r19, 0x00	; 0
    1eb0:	a7 01       	movw	r20, r14
    1eb2:	4a 5f       	subi	r20, 0xFA	; 250
    1eb4:	5e 4f       	sbci	r21, 0xFE	; 254
    1eb6:	63 e1       	ldi	r22, 0x13	; 19
    1eb8:	70 e0       	ldi	r23, 0x00	; 0
    1eba:	c7 01       	movw	r24, r14
    1ebc:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
		SetVariable(VARIABLE_ADDR_FLOW, (uint16_t*)&m_wFlow, 2);
    1ec0:	22 e0       	ldi	r18, 0x02	; 2
    1ec2:	30 e0       	ldi	r19, 0x00	; 0
    1ec4:	a7 01       	movw	r20, r14
    1ec6:	4a 5e       	subi	r20, 0xEA	; 234
    1ec8:	5e 4f       	sbci	r21, 0xFE	; 254
    1eca:	6e e0       	ldi	r22, 0x0E	; 14
    1ecc:	70 e0       	ldi	r23, 0x00	; 0
    1ece:	c7 01       	movw	r24, r14
    1ed0:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
	}
	
	// temperature check
	if ((state & (APP_WORKPOWERON | APP_WORKLIGHT | APP_WORKREADY)) != 0)
    1ed4:	f7 01       	movw	r30, r14
    1ed6:	84 85       	ldd	r24, Z+12	; 0x0c
    1ed8:	95 85       	ldd	r25, Z+13	; 0x0d
    1eda:	88 73       	andi	r24, 0x38	; 56
    1edc:	99 27       	eor	r25, r25
    1ede:	89 2b       	or	r24, r25
    1ee0:	39 f1       	breq	.+78     	; 0x1f30 <_ZN16CLaserControlApp3RunEv+0x152>
	{
		if (temperature > 300)
    1ee2:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    1ee6:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    1eea:	8d 32       	cpi	r24, 0x2D	; 45
    1eec:	91 40       	sbci	r25, 0x01	; 1
    1eee:	04 f1       	brlt	.+64     	; 0x1f30 <_ZN16CLaserControlApp3RunEv+0x152>
		{
			SetPictureId(PICID_WORK_ERRORHEATING);
    1ef0:	69 e2       	ldi	r22, 0x29	; 41
    1ef2:	70 e0       	ldi	r23, 0x00	; 0
    1ef4:	c7 01       	movw	r24, r14
    1ef6:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
			PIC_ID_last = PIC_ID;
    1efa:	d7 01       	movw	r26, r14
    1efc:	1f 96       	adiw	r26, 0x0f	; 15
    1efe:	8c 91       	ld	r24, X
    1f00:	1f 97       	sbiw	r26, 0x0f	; 15
    1f02:	50 96       	adiw	r26, 0x10	; 16
    1f04:	8c 93       	st	X, r24
			
			//if (isstarted)
			{
				laserTimer.Stop();
    1f06:	8a ee       	ldi	r24, 0xEA	; 234
    1f08:	96 e2       	ldi	r25, 0x26	; 38
    1f0a:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <_ZN7CTimerF4StopEv>
				laserTimer.ChannelSet(TIMER_CHANNEL_A);
    1f0e:	60 e1       	ldi	r22, 0x10	; 16
    1f10:	8a ee       	ldi	r24, 0xEA	; 234
    1f12:	96 e2       	ldi	r25, 0x26	; 38
    1f14:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
				laserTimer.ChannelSet(TIMER_CHANNEL_B);
    1f18:	60 e2       	ldi	r22, 0x20	; 32
    1f1a:	8a ee       	ldi	r24, 0xEA	; 234
    1f1c:	96 e2       	ldi	r25, 0x26	; 38
    1f1e:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
				laserBoard.LaserPowerOff();
    1f22:	83 eb       	ldi	r24, 0xB3	; 179
    1f24:	96 e2       	ldi	r25, 0x26	; 38
    1f26:	0e 94 6a 33 	call	0x66d4	; 0x66d4 <_ZN11CLaserBoard13LaserPowerOffEv>
				PIC_ID_last = PICID_WORK_PREPARE;
    1f2a:	87 e0       	ldi	r24, 0x07	; 7
    1f2c:	f7 01       	movw	r30, r14
    1f2e:	80 8b       	std	Z+16, r24	; 0x10
	}
	
	/*if ((state & (APP_WORKPOWERON | APP_WORKLIGHT)) == 0)
		isstarted = false;*/
	
	switch (state)
    1f30:	d7 01       	movw	r26, r14
    1f32:	1c 96       	adiw	r26, 0x0c	; 12
    1f34:	8d 91       	ld	r24, X+
    1f36:	9c 91       	ld	r25, X
    1f38:	1d 97       	sbiw	r26, 0x0d	; 13
    1f3a:	81 15       	cp	r24, r1
    1f3c:	b2 e0       	ldi	r27, 0x02	; 2
    1f3e:	9b 07       	cpc	r25, r27
    1f40:	09 f4       	brne	.+2      	; 0x1f44 <_ZN16CLaserControlApp3RunEv+0x166>
    1f42:	db c3       	rjmp	.+1974   	; 0x26fa <_ZN16CLaserControlApp3RunEv+0x91c>
    1f44:	1c f5       	brge	.+70     	; 0x1f8c <_ZN16CLaserControlApp3RunEv+0x1ae>
    1f46:	88 30       	cpi	r24, 0x08	; 8
    1f48:	91 05       	cpc	r25, r1
    1f4a:	09 f4       	brne	.+2      	; 0x1f4e <_ZN16CLaserControlApp3RunEv+0x170>
    1f4c:	ea c2       	rjmp	.+1492   	; 0x2522 <_ZN16CLaserControlApp3RunEv+0x744>
    1f4e:	64 f4       	brge	.+24     	; 0x1f68 <_ZN16CLaserControlApp3RunEv+0x18a>
    1f50:	82 30       	cpi	r24, 0x02	; 2
    1f52:	91 05       	cpc	r25, r1
    1f54:	09 f4       	brne	.+2      	; 0x1f58 <_ZN16CLaserControlApp3RunEv+0x17a>
    1f56:	77 c2       	rjmp	.+1262   	; 0x2446 <_ZN16CLaserControlApp3RunEv+0x668>
    1f58:	84 30       	cpi	r24, 0x04	; 4
    1f5a:	91 05       	cpc	r25, r1
    1f5c:	09 f4       	brne	.+2      	; 0x1f60 <_ZN16CLaserControlApp3RunEv+0x182>
    1f5e:	51 c0       	rjmp	.+162    	; 0x2002 <_ZN16CLaserControlApp3RunEv+0x224>
    1f60:	89 2b       	or	r24, r25
    1f62:	09 f0       	breq	.+2      	; 0x1f66 <_ZN16CLaserControlApp3RunEv+0x188>
    1f64:	94 c4       	rjmp	.+2344   	; 0x288e <_ZN16CLaserControlApp3RunEv+0xab0>
    1f66:	42 c0       	rjmp	.+132    	; 0x1fec <_ZN16CLaserControlApp3RunEv+0x20e>
    1f68:	80 32       	cpi	r24, 0x20	; 32
    1f6a:	91 05       	cpc	r25, r1
    1f6c:	09 f4       	brne	.+2      	; 0x1f70 <_ZN16CLaserControlApp3RunEv+0x192>
    1f6e:	ed c2       	rjmp	.+1498   	; 0x254a <_ZN16CLaserControlApp3RunEv+0x76c>
    1f70:	24 f4       	brge	.+8      	; 0x1f7a <_ZN16CLaserControlApp3RunEv+0x19c>
    1f72:	40 97       	sbiw	r24, 0x10	; 16
    1f74:	09 f4       	brne	.+2      	; 0x1f78 <_ZN16CLaserControlApp3RunEv+0x19a>
    1f76:	e9 c2       	rjmp	.+1490   	; 0x254a <_ZN16CLaserControlApp3RunEv+0x76c>
    1f78:	8a c4       	rjmp	.+2324   	; 0x288e <_ZN16CLaserControlApp3RunEv+0xab0>
    1f7a:	80 34       	cpi	r24, 0x40	; 64
    1f7c:	91 05       	cpc	r25, r1
    1f7e:	09 f4       	brne	.+2      	; 0x1f82 <_ZN16CLaserControlApp3RunEv+0x1a4>
    1f80:	9a c2       	rjmp	.+1332   	; 0x24b6 <_ZN16CLaserControlApp3RunEv+0x6d8>
    1f82:	81 15       	cp	r24, r1
    1f84:	91 40       	sbci	r25, 0x01	; 1
    1f86:	09 f4       	brne	.+2      	; 0x1f8a <_ZN16CLaserControlApp3RunEv+0x1ac>
    1f88:	76 c3       	rjmp	.+1772   	; 0x2676 <_ZN16CLaserControlApp3RunEv+0x898>
    1f8a:	81 c4       	rjmp	.+2306   	; 0x288e <_ZN16CLaserControlApp3RunEv+0xab0>
    1f8c:	81 15       	cp	r24, r1
    1f8e:	27 e0       	ldi	r18, 0x07	; 7
    1f90:	92 07       	cpc	r25, r18
    1f92:	09 f4       	brne	.+2      	; 0x1f96 <_ZN16CLaserControlApp3RunEv+0x1b8>
    1f94:	47 c3       	rjmp	.+1678   	; 0x2624 <_ZN16CLaserControlApp3RunEv+0x846>
    1f96:	ac f4       	brge	.+42     	; 0x1fc2 <_ZN16CLaserControlApp3RunEv+0x1e4>
    1f98:	81 15       	cp	r24, r1
    1f9a:	b4 e0       	ldi	r27, 0x04	; 4
    1f9c:	9b 07       	cpc	r25, r27
    1f9e:	09 f4       	brne	.+2      	; 0x1fa2 <_ZN16CLaserControlApp3RunEv+0x1c4>
    1fa0:	e9 c3       	rjmp	.+2002   	; 0x2774 <_ZN16CLaserControlApp3RunEv+0x996>
    1fa2:	2c f4       	brge	.+10     	; 0x1fae <_ZN16CLaserControlApp3RunEv+0x1d0>
    1fa4:	81 15       	cp	r24, r1
    1fa6:	93 40       	sbci	r25, 0x03	; 3
    1fa8:	09 f4       	brne	.+2      	; 0x1fac <_ZN16CLaserControlApp3RunEv+0x1ce>
    1faa:	b0 c3       	rjmp	.+1888   	; 0x270c <_ZN16CLaserControlApp3RunEv+0x92e>
    1fac:	70 c4       	rjmp	.+2272   	; 0x288e <_ZN16CLaserControlApp3RunEv+0xab0>
    1fae:	81 15       	cp	r24, r1
    1fb0:	25 e0       	ldi	r18, 0x05	; 5
    1fb2:	92 07       	cpc	r25, r18
    1fb4:	09 f4       	brne	.+2      	; 0x1fb8 <_ZN16CLaserControlApp3RunEv+0x1da>
    1fb6:	50 c3       	rjmp	.+1696   	; 0x2658 <_ZN16CLaserControlApp3RunEv+0x87a>
    1fb8:	81 15       	cp	r24, r1
    1fba:	96 40       	sbci	r25, 0x06	; 6
    1fbc:	09 f4       	brne	.+2      	; 0x1fc0 <_ZN16CLaserControlApp3RunEv+0x1e2>
    1fbe:	20 c3       	rjmp	.+1600   	; 0x2600 <_ZN16CLaserControlApp3RunEv+0x822>
    1fc0:	66 c4       	rjmp	.+2252   	; 0x288e <_ZN16CLaserControlApp3RunEv+0xab0>
    1fc2:	81 15       	cp	r24, r1
    1fc4:	b0 e2       	ldi	r27, 0x20	; 32
    1fc6:	9b 07       	cpc	r25, r27
    1fc8:	09 f4       	brne	.+2      	; 0x1fcc <_ZN16CLaserControlApp3RunEv+0x1ee>
    1fca:	12 c4       	rjmp	.+2084   	; 0x27f0 <_ZN16CLaserControlApp3RunEv+0xa12>
    1fcc:	2c f4       	brge	.+10     	; 0x1fd8 <_ZN16CLaserControlApp3RunEv+0x1fa>
    1fce:	81 15       	cp	r24, r1
    1fd0:	90 41       	sbci	r25, 0x10	; 16
    1fd2:	09 f4       	brne	.+2      	; 0x1fd6 <_ZN16CLaserControlApp3RunEv+0x1f8>
    1fd4:	d5 c3       	rjmp	.+1962   	; 0x2780 <_ZN16CLaserControlApp3RunEv+0x9a2>
    1fd6:	5b c4       	rjmp	.+2230   	; 0x288e <_ZN16CLaserControlApp3RunEv+0xab0>
    1fd8:	81 15       	cp	r24, r1
    1fda:	20 e3       	ldi	r18, 0x30	; 48
    1fdc:	92 07       	cpc	r25, r18
    1fde:	09 f4       	brne	.+2      	; 0x1fe2 <_ZN16CLaserControlApp3RunEv+0x204>
    1fe0:	34 c4       	rjmp	.+2152   	; 0x284a <_ZN16CLaserControlApp3RunEv+0xa6c>
    1fe2:	81 15       	cp	r24, r1
    1fe4:	90 44       	sbci	r25, 0x40	; 64
    1fe6:	09 f4       	brne	.+2      	; 0x1fea <_ZN16CLaserControlApp3RunEv+0x20c>
    1fe8:	4d c4       	rjmp	.+2202   	; 0x2884 <_ZN16CLaserControlApp3RunEv+0xaa6>
    1fea:	51 c4       	rjmp	.+2210   	; 0x288e <_ZN16CLaserControlApp3RunEv+0xab0>
	{		
		// DGUS State
		case APP_LOGO:
			{
				SetPictureId(PICID_MAINMENU);
    1fec:	63 e0       	ldi	r22, 0x03	; 3
    1fee:	70 e0       	ldi	r23, 0x00	; 0
    1ff0:	c7 01       	movw	r24, r14
    1ff2:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
				state = APP_WORKIDLE;
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	f7 01       	movw	r30, r14
    1ffc:	84 87       	std	Z+12, r24	; 0x0c
    1ffe:	95 87       	std	Z+13, r25	; 0x0d
			}
		break;
    2000:	4a c4       	rjmp	.+2196   	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_WORKSETUP:
			{
				uint16_t melanin     = laserDiodeData.melanin;
    2002:	f7 01       	movw	r30, r14
    2004:	ec 50       	subi	r30, 0x0C	; 12
    2006:	ff 4f       	sbci	r31, 0xFF	; 255
    2008:	60 80       	ld	r6, Z
    200a:	71 80       	ldd	r7, Z+1	; 0x01
				uint16_t phototype   = laserDiodeData.phototype;
    200c:	87 01       	movw	r16, r14
    200e:	0a 50       	subi	r16, 0x0A	; 10
    2010:	1f 4f       	sbci	r17, 0xFF	; 255
    2012:	d8 01       	movw	r26, r16
    2014:	8d 90       	ld	r8, X+
    2016:	9c 90       	ld	r9, X
				uint16_t freq        = laserDiodeData.laserprofile.Frequency;
    2018:	70 97       	sbiw	r30, 0x10	; 16
    201a:	80 81       	ld	r24, Z
    201c:	91 81       	ldd	r25, Z+1	; 0x01
    201e:	8d 87       	std	Y+13, r24	; 0x0d
    2020:	9e 87       	std	Y+14, r25	; 0x0e
				uint16_t durationCnt = laserDiodeData.laserprofile.DurationCnt;
    2022:	32 96       	adiw	r30, 0x02	; 2
    2024:	a0 80       	ld	r10, Z
    2026:	b1 80       	ldd	r11, Z+1	; 0x01
				uint16_t energyCnt   = laserDiodeData.laserprofile.EnergyCnt;
    2028:	32 96       	adiw	r30, 0x02	; 2
    202a:	c0 80       	ld	r12, Z
    202c:	d1 80       	ldd	r13, Z+1	; 0x01
				
				GetVariable(STRUCT_ADDR_LASERPROFILE_DATA, sizeof(DGUS_LASERPROFILE));
    202e:	46 e0       	ldi	r20, 0x06	; 6
    2030:	50 e0       	ldi	r21, 0x00	; 0
    2032:	62 e0       	ldi	r22, 0x02	; 2
    2034:	70 e0       	ldi	r23, 0x00	; 0
    2036:	c7 01       	movw	r24, r14
    2038:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
    203c:	bf ef       	ldi	r27, 0xFF	; 255
    203e:	e9 ef       	ldi	r30, 0xF9	; 249
    2040:	f0 e0       	ldi	r31, 0x00	; 0
    2042:	b1 50       	subi	r27, 0x01	; 1
    2044:	e0 40       	sbci	r30, 0x00	; 0
    2046:	f0 40       	sbci	r31, 0x00	; 0
    2048:	e1 f7       	brne	.-8      	; 0x2042 <_ZN16CLaserControlApp3RunEv+0x264>
    204a:	00 c0       	rjmp	.+0      	; 0x204c <_ZN16CLaserControlApp3RunEv+0x26e>
    204c:	00 00       	nop
				_delay_ms(10);
				GetVariable(STRUCT_ADDR_LASERPROSETTINGS_DATA, sizeof(DGUS_LASERSETTINGS));
    204e:	46 e0       	ldi	r20, 0x06	; 6
    2050:	50 e0       	ldi	r21, 0x00	; 0
    2052:	65 e0       	ldi	r22, 0x05	; 5
    2054:	70 e0       	ldi	r23, 0x00	; 0
    2056:	c7 01       	movw	r24, r14
    2058:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
    205c:	2f ef       	ldi	r18, 0xFF	; 255
    205e:	89 ef       	ldi	r24, 0xF9	; 249
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	21 50       	subi	r18, 0x01	; 1
    2064:	80 40       	sbci	r24, 0x00	; 0
    2066:	90 40       	sbci	r25, 0x00	; 0
    2068:	e1 f7       	brne	.-8      	; 0x2062 <_ZN16CLaserControlApp3RunEv+0x284>
    206a:	00 c0       	rjmp	.+0      	; 0x206c <_ZN16CLaserControlApp3RunEv+0x28e>
    206c:	00 00       	nop
				_delay_ms(10);
				GetVariable(VARIABLE_ADDR_COOLING, 2);
    206e:	42 e0       	ldi	r20, 0x02	; 2
    2070:	50 e0       	ldi	r21, 0x00	; 0
    2072:	6d e0       	ldi	r22, 0x0D	; 13
    2074:	70 e0       	ldi	r23, 0x00	; 0
    2076:	c7 01       	movw	r24, r14
    2078:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
    207c:	af ef       	ldi	r26, 0xFF	; 255
    207e:	b9 ef       	ldi	r27, 0xF9	; 249
    2080:	e0 e0       	ldi	r30, 0x00	; 0
    2082:	a1 50       	subi	r26, 0x01	; 1
    2084:	b0 40       	sbci	r27, 0x00	; 0
    2086:	e0 40       	sbci	r30, 0x00	; 0
    2088:	e1 f7       	brne	.-8      	; 0x2082 <_ZN16CLaserControlApp3RunEv+0x2a4>
    208a:	00 c0       	rjmp	.+0      	; 0x208c <_ZN16CLaserControlApp3RunEv+0x2ae>
    208c:	00 00       	nop
				_delay_ms(10);
				GetVariable(VARIABLE_ADDR_MODE, 2);
    208e:	42 e0       	ldi	r20, 0x02	; 2
    2090:	50 e0       	ldi	r21, 0x00	; 0
    2092:	61 e0       	ldi	r22, 0x01	; 1
    2094:	70 e0       	ldi	r23, 0x00	; 0
    2096:	c7 01       	movw	r24, r14
    2098:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
    209c:	ff ef       	ldi	r31, 0xFF	; 255
    209e:	29 ef       	ldi	r18, 0xF9	; 249
    20a0:	80 e0       	ldi	r24, 0x00	; 0
    20a2:	f1 50       	subi	r31, 0x01	; 1
    20a4:	20 40       	sbci	r18, 0x00	; 0
    20a6:	80 40       	sbci	r24, 0x00	; 0
    20a8:	e1 f7       	brne	.-8      	; 0x20a2 <_ZN16CLaserControlApp3RunEv+0x2c4>
    20aa:	00 c0       	rjmp	.+0      	; 0x20ac <_ZN16CLaserControlApp3RunEv+0x2ce>
    20ac:	00 00       	nop
				_delay_ms(10);
				GetVariable(VARIABLE_ADDR_MELANIN, 2);
    20ae:	42 e0       	ldi	r20, 0x02	; 2
    20b0:	50 e0       	ldi	r21, 0x00	; 0
    20b2:	6a e0       	ldi	r22, 0x0A	; 10
    20b4:	70 e0       	ldi	r23, 0x00	; 0
    20b6:	c7 01       	movw	r24, r14
    20b8:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
    20bc:	9f ef       	ldi	r25, 0xFF	; 255
    20be:	a9 ef       	ldi	r26, 0xF9	; 249
    20c0:	b0 e0       	ldi	r27, 0x00	; 0
    20c2:	91 50       	subi	r25, 0x01	; 1
    20c4:	a0 40       	sbci	r26, 0x00	; 0
    20c6:	b0 40       	sbci	r27, 0x00	; 0
    20c8:	e1 f7       	brne	.-8      	; 0x20c2 <_ZN16CLaserControlApp3RunEv+0x2e4>
    20ca:	00 c0       	rjmp	.+0      	; 0x20cc <_ZN16CLaserControlApp3RunEv+0x2ee>
    20cc:	00 00       	nop
				_delay_ms(10);
				GetVariable(VARIABLE_ADDR_PHOTOTYPE, 2);
    20ce:	42 e0       	ldi	r20, 0x02	; 2
    20d0:	50 e0       	ldi	r21, 0x00	; 0
    20d2:	6b e0       	ldi	r22, 0x0B	; 11
    20d4:	70 e0       	ldi	r23, 0x00	; 0
    20d6:	c7 01       	movw	r24, r14
    20d8:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
    20dc:	ef ef       	ldi	r30, 0xFF	; 255
    20de:	f9 ef       	ldi	r31, 0xF9	; 249
    20e0:	20 e0       	ldi	r18, 0x00	; 0
    20e2:	e1 50       	subi	r30, 0x01	; 1
    20e4:	f0 40       	sbci	r31, 0x00	; 0
    20e6:	20 40       	sbci	r18, 0x00	; 0
    20e8:	e1 f7       	brne	.-8      	; 0x20e2 <_ZN16CLaserControlApp3RunEv+0x304>
    20ea:	00 c0       	rjmp	.+0      	; 0x20ec <_ZN16CLaserControlApp3RunEv+0x30e>
    20ec:	00 00       	nop
				_delay_ms(10);
				
				laserDiodeData.PulseCounter = swap32(laserCounter);
    20ee:	f7 01       	movw	r30, r14
    20f0:	e6 52       	subi	r30, 0x26	; 38
    20f2:	ff 4f       	sbci	r31, 0xFF	; 255
    20f4:	60 81       	ld	r22, Z
    20f6:	71 81       	ldd	r23, Z+1	; 0x01
    20f8:	82 81       	ldd	r24, Z+2	; 0x02
    20fa:	93 81       	ldd	r25, Z+3	; 0x03
    20fc:	0e 94 6f 16 	call	0x2cde	; 0x2cde <_Z6swap32m>
    2100:	f7 01       	movw	r30, r14
    2102:	e0 51       	subi	r30, 0x10	; 16
    2104:	ff 4f       	sbci	r31, 0xFF	; 255
    2106:	60 83       	st	Z, r22
    2108:	71 83       	std	Z+1, r23	; 0x01
    210a:	82 83       	std	Z+2, r24	; 0x02
    210c:	93 83       	std	Z+3, r25	; 0x03
				laserDiodeData.temperature  = temperature;
    210e:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    2112:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    2116:	38 96       	adiw	r30, 0x08	; 8
    2118:	80 83       	st	Z, r24
    211a:	91 83       	std	Z+1, r25	; 0x01
				laserDiodeData.flow         = m_wFlow;
    211c:	7e 96       	adiw	r30, 0x1e	; 30
    211e:	80 81       	ld	r24, Z
    2120:	91 81       	ldd	r25, Z+1	; 0x01
    2122:	7a 97       	sbiw	r30, 0x1a	; 26
    2124:	80 83       	st	Z, r24
    2126:	91 83       	std	Z+1, r25	; 0x01
				
				if (phototype != laserDiodeData.phototype)
    2128:	d8 01       	movw	r26, r16
    212a:	6d 91       	ld	r22, X+
    212c:	7c 91       	ld	r23, X
    212e:	68 15       	cp	r22, r8
    2130:	79 05       	cpc	r23, r9
    2132:	39 f0       	breq	.+14     	; 0x2142 <_ZN16CLaserControlApp3RunEv+0x364>
				{
					PhototypePreset(laserDiodeData.phototype);
    2134:	c7 01       	movw	r24, r14
    2136:	0e 94 8a 07 	call	0xf14	; 0xf14 <_ZN16CLaserControlApp15PhototypePresetEj>
					update = true;
    213a:	81 e0       	ldi	r24, 0x01	; 1
    213c:	f7 01       	movw	r30, r14
    213e:	81 8b       	std	Z+17, r24	; 0x11
    2140:	4a c0       	rjmp	.+148    	; 0x21d6 <_ZN16CLaserControlApp3RunEv+0x3f8>
				}
				else
				if (melanin != laserDiodeData.melanin)
    2142:	f7 01       	movw	r30, r14
    2144:	ec 50       	subi	r30, 0x0C	; 12
    2146:	ff 4f       	sbci	r31, 0xFF	; 255
    2148:	60 81       	ld	r22, Z
    214a:	71 81       	ldd	r23, Z+1	; 0x01
    214c:	66 15       	cp	r22, r6
    214e:	77 05       	cpc	r23, r7
    2150:	41 f0       	breq	.+16     	; 0x2162 <_ZN16CLaserControlApp3RunEv+0x384>
				{
					MelaninPreset(laserDiodeData.melanin);
    2152:	c7 01       	movw	r24, r14
    2154:	0e 94 c3 06 	call	0xd86	; 0xd86 <_ZN16CLaserControlApp13MelaninPresetEj>
					update = true;
    2158:	81 e0       	ldi	r24, 0x01	; 1
    215a:	d7 01       	movw	r26, r14
    215c:	51 96       	adiw	r26, 0x11	; 17
    215e:	8c 93       	st	X, r24
    2160:	3a c0       	rjmp	.+116    	; 0x21d6 <_ZN16CLaserControlApp3RunEv+0x3f8>
				}
				else
				if (Profile != (APP_PROFILE)laserDiodeData.mode)
    2162:	f7 01       	movw	r30, r14
    2164:	ee 51       	subi	r30, 0x1E	; 30
    2166:	ff 4f       	sbci	r31, 0xFF	; 255
    2168:	01 90       	ld	r0, Z+
    216a:	f0 81       	ld	r31, Z
    216c:	e0 2d       	mov	r30, r0
    216e:	d7 01       	movw	r26, r14
    2170:	1e 96       	adiw	r26, 0x0e	; 14
    2172:	8c 91       	ld	r24, X
    2174:	1e 97       	sbiw	r26, 0x0e	; 14
    2176:	8e 17       	cp	r24, r30
    2178:	71 f1       	breq	.+92     	; 0x21d6 <_ZN16CLaserControlApp3RunEv+0x3f8>
				{
					Profile = (APP_PROFILE)laserDiodeData.mode;
    217a:	1e 96       	adiw	r26, 0x0e	; 14
    217c:	ec 93       	st	X, r30
    217e:	1e 97       	sbiw	r26, 0x0e	; 14
    2180:	9f 01       	movw	r18, r30
    2182:	33 27       	eor	r19, r19
					// Update profile
					memcpy((void*)&laserDiodeData.laserprofile , (void*)&m_structLaserProfile [Profile], sizeof(laserDiodeData.laserprofile));
    2184:	a9 01       	movw	r20, r18
    2186:	44 0f       	add	r20, r20
    2188:	55 1f       	adc	r21, r21
    218a:	ca 01       	movw	r24, r20
    218c:	82 0f       	add	r24, r18
    218e:	93 1f       	adc	r25, r19
    2190:	88 0f       	add	r24, r24
    2192:	99 1f       	adc	r25, r25
    2194:	8a 56       	subi	r24, 0x6A	; 106
    2196:	9f 4f       	sbci	r25, 0xFF	; 255
    2198:	f7 01       	movw	r30, r14
    219a:	e8 0f       	add	r30, r24
    219c:	f9 1f       	adc	r31, r25
    219e:	66 e0       	ldi	r22, 0x06	; 6
    21a0:	ac 51       	subi	r26, 0x1C	; 28
    21a2:	bf 4f       	sbci	r27, 0xFF	; 255
    21a4:	01 90       	ld	r0, Z+
    21a6:	0d 92       	st	X+, r0
    21a8:	6a 95       	dec	r22
    21aa:	e1 f7       	brne	.-8      	; 0x21a4 <_ZN16CLaserControlApp3RunEv+0x3c6>
					memcpy((void*)&laserDiodeData.lasersettings, (void*)&m_structLaserSettings[Profile], sizeof(laserDiodeData.lasersettings));
    21ac:	fa 01       	movw	r30, r20
    21ae:	e2 0f       	add	r30, r18
    21b0:	f3 1f       	adc	r31, r19
    21b2:	ee 0f       	add	r30, r30
    21b4:	ff 1f       	adc	r31, r31
    21b6:	ec 54       	subi	r30, 0x4C	; 76
    21b8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ba:	ee 0d       	add	r30, r14
    21bc:	ff 1d       	adc	r31, r15
    21be:	86 e0       	ldi	r24, 0x06	; 6
    21c0:	d7 01       	movw	r26, r14
    21c2:	a6 51       	subi	r26, 0x16	; 22
    21c4:	bf 4f       	sbci	r27, 0xFF	; 255
    21c6:	01 90       	ld	r0, Z+
    21c8:	0d 92       	st	X+, r0
    21ca:	8a 95       	dec	r24
    21cc:	e1 f7       	brne	.-8      	; 0x21c6 <_ZN16CLaserControlApp3RunEv+0x3e8>
					
					update = true;
    21ce:	81 e0       	ldi	r24, 0x01	; 1
    21d0:	f7 01       	movw	r30, r14
    21d2:	81 8b       	std	Z+17, r24	; 0x11
    21d4:	60 c3       	rjmp	.+1728   	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
					break;
				}
				
				uint16_t duration = durationCnt * pstGUI[Profile].m_wDurationStep + pstGUI[Profile].m_wDurationOffset;
    21d6:	d7 01       	movw	r26, r14
    21d8:	1e 96       	adiw	r26, 0x0e	; 14
    21da:	8c 91       	ld	r24, X
    21dc:	f7 01       	movw	r30, r14
    21de:	ba e1       	ldi	r27, 0x1A	; 26
    21e0:	8b 9f       	mul	r24, r27
    21e2:	e0 0d       	add	r30, r0
    21e4:	f1 1d       	adc	r31, r1
    21e6:	11 24       	eor	r1, r1
    21e8:	82 a5       	ldd	r24, Z+42	; 0x2a
    21ea:	93 a5       	ldd	r25, Z+43	; 0x2b
    21ec:	a8 9e       	mul	r10, r24
    21ee:	90 01       	movw	r18, r0
    21f0:	a9 9e       	mul	r10, r25
    21f2:	30 0d       	add	r19, r0
    21f4:	b8 9e       	mul	r11, r24
    21f6:	30 0d       	add	r19, r0
    21f8:	11 24       	eor	r1, r1
    21fa:	80 a5       	ldd	r24, Z+40	; 0x28
    21fc:	91 a5       	ldd	r25, Z+41	; 0x29
    21fe:	82 0f       	add	r24, r18
    2200:	93 1f       	adc	r25, r19
    2202:	8b 87       	std	Y+11, r24	; 0x0b
    2204:	9c 87       	std	Y+12, r25	; 0x0c
				uint16_t energy   = energyCnt   * pstGUI[Profile].m_wEnergyStep   + pstGUI[Profile].m_wEnergyOffset;
    2206:	84 a1       	ldd	r24, Z+36	; 0x24
    2208:	95 a1       	ldd	r25, Z+37	; 0x25
    220a:	c8 9e       	mul	r12, r24
    220c:	90 01       	movw	r18, r0
    220e:	c9 9e       	mul	r12, r25
    2210:	30 0d       	add	r19, r0
    2212:	d8 9e       	mul	r13, r24
    2214:	30 0d       	add	r19, r0
    2216:	11 24       	eor	r1, r1
    2218:	82 a1       	ldd	r24, Z+34	; 0x22
    221a:	93 a1       	ldd	r25, Z+35	; 0x23
    221c:	82 0f       	add	r24, r18
    221e:	93 1f       	adc	r25, r19
    2220:	8f 83       	std	Y+7, r24	; 0x07
    2222:	98 87       	std	Y+8, r25	; 0x08
				
				if (freq != laserDiodeData.laserprofile.Frequency)
    2224:	f7 01       	movw	r30, r14
    2226:	ec 51       	subi	r30, 0x1C	; 28
    2228:	ff 4f       	sbci	r31, 0xFF	; 255
    222a:	80 81       	ld	r24, Z
    222c:	91 81       	ldd	r25, Z+1	; 0x01
    222e:	2d 85       	ldd	r18, Y+13	; 0x0d
    2230:	3e 85       	ldd	r19, Y+14	; 0x0e
    2232:	82 17       	cp	r24, r18
    2234:	93 07       	cpc	r25, r19
    2236:	79 f0       	breq	.+30     	; 0x2256 <_ZN16CLaserControlApp3RunEv+0x478>
				{
					freq = laserDiodeData.laserprofile.Frequency;
    2238:	8d 87       	std	Y+13, r24	; 0x0d
    223a:	9e 87       	std	Y+14, r25	; 0x0e
					
					if (FreqLimits(freq, (APP_PROFILE)laserDiodeData.mode))
    223c:	32 97       	sbiw	r30, 0x02	; 2
    223e:	40 81       	ld	r20, Z
    2240:	be 01       	movw	r22, r28
    2242:	63 5f       	subi	r22, 0xF3	; 243
    2244:	7f 4f       	sbci	r23, 0xFF	; 255
    2246:	c7 01       	movw	r24, r14
    2248:	0e 94 b9 0c 	call	0x1972	; 0x1972 <_ZN16CLaserControlApp10FreqLimitsERj16APP_PROFILE_ENUM>
    224c:	88 23       	and	r24, r24
    224e:	19 f0       	breq	.+6      	; 0x2256 <_ZN16CLaserControlApp3RunEv+0x478>
					{
						//laserDiodeData.laserprofile.Frequency = freq;
						update = true;
    2250:	81 e0       	ldi	r24, 0x01	; 1
    2252:	f7 01       	movw	r30, r14
    2254:	81 8b       	std	Z+17, r24	; 0x11
					}
				}
				
				UpdateLimits(freq, duration, energy, Profile);
    2256:	2f 81       	ldd	r18, Y+7	; 0x07
    2258:	38 85       	ldd	r19, Y+8	; 0x08
    225a:	4b 85       	ldd	r20, Y+11	; 0x0b
    225c:	5c 85       	ldd	r21, Y+12	; 0x0c
    225e:	6d 85       	ldd	r22, Y+13	; 0x0d
    2260:	7e 85       	ldd	r23, Y+14	; 0x0e
    2262:	d7 01       	movw	r26, r14
    2264:	1e 96       	adiw	r26, 0x0e	; 14
    2266:	0c 91       	ld	r16, X
    2268:	c7 01       	movw	r24, r14
    226a:	0e 94 45 08 	call	0x108a	; 0x108a <_ZN16CLaserControlApp12UpdateLimitsEjjj16APP_PROFILE_ENUM>
				
				if (durationCnt != laserDiodeData.laserprofile.DurationCnt)
    226e:	f7 01       	movw	r30, r14
    2270:	ea 51       	subi	r30, 0x1A	; 26
    2272:	ff 4f       	sbci	r31, 0xFF	; 255
    2274:	80 81       	ld	r24, Z
    2276:	91 81       	ldd	r25, Z+1	; 0x01
    2278:	8a 15       	cp	r24, r10
    227a:	9b 05       	cpc	r25, r11
    227c:	09 f4       	brne	.+2      	; 0x2280 <_ZN16CLaserControlApp3RunEv+0x4a2>
    227e:	43 c0       	rjmp	.+134    	; 0x2306 <_ZN16CLaserControlApp3RunEv+0x528>
				{
					duration = laserDiodeData.laserprofile.DurationCnt * pstGUI[Profile].m_wDurationStep + pstGUI[Profile].m_wDurationOffset;
    2280:	f7 01       	movw	r30, r14
    2282:	36 85       	ldd	r19, Z+14	; 0x0e
    2284:	2a e1       	ldi	r18, 0x1A	; 26
    2286:	43 2f       	mov	r20, r19
    2288:	50 e0       	ldi	r21, 0x00	; 0
    228a:	23 9f       	mul	r18, r19
    228c:	e0 0d       	add	r30, r0
    228e:	f1 1d       	adc	r31, r1
    2290:	11 24       	eor	r1, r1
    2292:	a2 a5       	ldd	r26, Z+42	; 0x2a
    2294:	b3 a5       	ldd	r27, Z+43	; 0x2b
    2296:	8a 9f       	mul	r24, r26
    2298:	b0 01       	movw	r22, r0
    229a:	8b 9f       	mul	r24, r27
    229c:	70 0d       	add	r23, r0
    229e:	9a 9f       	mul	r25, r26
    22a0:	70 0d       	add	r23, r0
    22a2:	11 24       	eor	r1, r1
    22a4:	80 a5       	ldd	r24, Z+40	; 0x28
    22a6:	91 a5       	ldd	r25, Z+41	; 0x29
    22a8:	86 0f       	add	r24, r22
    22aa:	97 1f       	adc	r25, r23
    22ac:	8b 87       	std	Y+11, r24	; 0x0b
    22ae:	9c 87       	std	Y+12, r25	; 0x0c
					
					// Check limit
					if ((duration <= pstGUI[Profile].m_wMaxDuration) && (duration >= pstGUI[Profile].m_wMinDuration))
    22b0:	ba 01       	movw	r22, r20
    22b2:	6f 5f       	subi	r22, 0xFF	; 255
    22b4:	7f 4f       	sbci	r23, 0xFF	; 255
    22b6:	26 9f       	mul	r18, r22
    22b8:	f0 01       	movw	r30, r0
    22ba:	27 9f       	mul	r18, r23
    22bc:	f0 0d       	add	r31, r0
    22be:	11 24       	eor	r1, r1
    22c0:	ee 0d       	add	r30, r14
    22c2:	ff 1d       	adc	r31, r15
    22c4:	20 81       	ld	r18, Z
    22c6:	31 81       	ldd	r19, Z+1	; 0x01
    22c8:	28 17       	cp	r18, r24
    22ca:	39 07       	cpc	r19, r25
    22cc:	98 f0       	brcs	.+38     	; 0x22f4 <_ZN16CLaserControlApp3RunEv+0x516>
    22ce:	2a e1       	ldi	r18, 0x1A	; 26
    22d0:	24 9f       	mul	r18, r20
    22d2:	f0 01       	movw	r30, r0
    22d4:	25 9f       	mul	r18, r21
    22d6:	f0 0d       	add	r31, r0
    22d8:	11 24       	eor	r1, r1
    22da:	ee 0d       	add	r30, r14
    22dc:	ff 1d       	adc	r31, r15
    22de:	24 8d       	ldd	r18, Z+28	; 0x1c
    22e0:	35 8d       	ldd	r19, Z+29	; 0x1d
    22e2:	82 17       	cp	r24, r18
    22e4:	93 07       	cpc	r25, r19
    22e6:	30 f0       	brcs	.+12     	; 0x22f4 <_ZN16CLaserControlApp3RunEv+0x516>
						laserDiodeData.lasersettings.Duration = duration;
    22e8:	f7 01       	movw	r30, r14
    22ea:	e4 51       	subi	r30, 0x14	; 20
    22ec:	ff 4f       	sbci	r31, 0xFF	; 255
    22ee:	80 83       	st	Z, r24
    22f0:	91 83       	std	Z+1, r25	; 0x01
    22f2:	05 c0       	rjmp	.+10     	; 0x22fe <_ZN16CLaserControlApp3RunEv+0x520>
					else
						laserDiodeData.laserprofile.DurationCnt = durationCnt; // Cancel change if out
    22f4:	f7 01       	movw	r30, r14
    22f6:	ea 51       	subi	r30, 0x1A	; 26
    22f8:	ff 4f       	sbci	r31, 0xFF	; 255
    22fa:	a0 82       	st	Z, r10
    22fc:	b1 82       	std	Z+1, r11	; 0x01
					update = true;
    22fe:	81 e0       	ldi	r24, 0x01	; 1
    2300:	d7 01       	movw	r26, r14
    2302:	51 96       	adiw	r26, 0x11	; 17
    2304:	8c 93       	st	X, r24
				}
				if (energyCnt != laserDiodeData.laserprofile.EnergyCnt)
    2306:	f7 01       	movw	r30, r14
    2308:	e8 51       	subi	r30, 0x18	; 24
    230a:	ff 4f       	sbci	r31, 0xFF	; 255
    230c:	20 81       	ld	r18, Z
    230e:	31 81       	ldd	r19, Z+1	; 0x01
    2310:	2c 15       	cp	r18, r12
    2312:	3d 05       	cpc	r19, r13
    2314:	c9 f1       	breq	.+114    	; 0x2388 <_ZN16CLaserControlApp3RunEv+0x5aa>
				{
					energy = laserDiodeData.laserprofile.EnergyCnt * pstGUI[Profile].m_wEnergyStep + pstGUI[Profile].m_wEnergyOffset;
    2316:	f7 01       	movw	r30, r14
    2318:	86 85       	ldd	r24, Z+14	; 0x0e
    231a:	68 2f       	mov	r22, r24
    231c:	70 e0       	ldi	r23, 0x00	; 0
    231e:	9a e1       	ldi	r25, 0x1A	; 26
    2320:	89 9f       	mul	r24, r25
    2322:	e0 0d       	add	r30, r0
    2324:	f1 1d       	adc	r31, r1
    2326:	11 24       	eor	r1, r1
    2328:	84 a1       	ldd	r24, Z+36	; 0x24
    232a:	95 a1       	ldd	r25, Z+37	; 0x25
    232c:	28 9f       	mul	r18, r24
    232e:	a0 01       	movw	r20, r0
    2330:	29 9f       	mul	r18, r25
    2332:	50 0d       	add	r21, r0
    2334:	38 9f       	mul	r19, r24
    2336:	50 0d       	add	r21, r0
    2338:	11 24       	eor	r1, r1
    233a:	82 a1       	ldd	r24, Z+34	; 0x22
    233c:	93 a1       	ldd	r25, Z+35	; 0x23
    233e:	84 0f       	add	r24, r20
    2340:	95 1f       	adc	r25, r21
    2342:	8f 83       	std	Y+7, r24	; 0x07
    2344:	98 87       	std	Y+8, r25	; 0x08
					
					// Check limit
					if ((energy <= pstGUI[Profile].m_wMaxEnergy_) && (energy >= pstGUI[Profile].m_wMinEnergy_))
    2346:	26 89       	ldd	r18, Z+22	; 0x16
    2348:	37 89       	ldd	r19, Z+23	; 0x17
    234a:	28 17       	cp	r18, r24
    234c:	39 07       	cpc	r19, r25
    234e:	98 f0       	brcs	.+38     	; 0x2376 <_ZN16CLaserControlApp3RunEv+0x598>
    2350:	2a e1       	ldi	r18, 0x1A	; 26
    2352:	26 9f       	mul	r18, r22
    2354:	f0 01       	movw	r30, r0
    2356:	27 9f       	mul	r18, r23
    2358:	f0 0d       	add	r31, r0
    235a:	11 24       	eor	r1, r1
    235c:	ee 0d       	add	r30, r14
    235e:	ff 1d       	adc	r31, r15
    2360:	20 8d       	ldd	r18, Z+24	; 0x18
    2362:	31 8d       	ldd	r19, Z+25	; 0x19
    2364:	82 17       	cp	r24, r18
    2366:	93 07       	cpc	r25, r19
    2368:	30 f0       	brcs	.+12     	; 0x2376 <_ZN16CLaserControlApp3RunEv+0x598>
						laserDiodeData.lasersettings.Energy = energy;
    236a:	f7 01       	movw	r30, r14
    236c:	e2 51       	subi	r30, 0x12	; 18
    236e:	ff 4f       	sbci	r31, 0xFF	; 255
    2370:	80 83       	st	Z, r24
    2372:	91 83       	std	Z+1, r25	; 0x01
    2374:	05 c0       	rjmp	.+10     	; 0x2380 <_ZN16CLaserControlApp3RunEv+0x5a2>
					else
						laserDiodeData.laserprofile.EnergyCnt = energyCnt; // Cancel change if out
    2376:	f7 01       	movw	r30, r14
    2378:	e8 51       	subi	r30, 0x18	; 24
    237a:	ff 4f       	sbci	r31, 0xFF	; 255
    237c:	c0 82       	st	Z, r12
    237e:	d1 82       	std	Z+1, r13	; 0x01
					update = true;
    2380:	81 e0       	ldi	r24, 0x01	; 1
    2382:	d7 01       	movw	r26, r14
    2384:	51 96       	adiw	r26, 0x11	; 17
    2386:	8c 93       	st	X, r24
				}
				
				//if (update)
					CheckLimits(freq, duration, energy, Profile);
    2388:	f7 01       	movw	r30, r14
    238a:	06 85       	ldd	r16, Z+14	; 0x0e
    238c:	9e 01       	movw	r18, r28
    238e:	29 5f       	subi	r18, 0xF9	; 249
    2390:	3f 4f       	sbci	r19, 0xFF	; 255
    2392:	ae 01       	movw	r20, r28
    2394:	45 5f       	subi	r20, 0xF5	; 245
    2396:	5f 4f       	sbci	r21, 0xFF	; 255
    2398:	be 01       	movw	r22, r28
    239a:	63 5f       	subi	r22, 0xF3	; 243
    239c:	7f 4f       	sbci	r23, 0xFF	; 255
    239e:	c7 01       	movw	r24, r14
    23a0:	0e 94 20 09 	call	0x1240	; 0x1240 <_ZN16CLaserControlApp11CheckLimitsERjS0_S0_16APP_PROFILE_ENUM>
				
				CalculateLaserSettings(&laserDiodeData.laserprofile);
    23a4:	87 01       	movw	r16, r14
    23a6:	0c 51       	subi	r16, 0x1C	; 28
    23a8:	1f 4f       	sbci	r17, 0xFF	; 255
    23aa:	b8 01       	movw	r22, r16
    23ac:	c7 01       	movw	r24, r14
    23ae:	0e 94 a7 05 	call	0xb4e	; 0xb4e <_ZN16CLaserControlApp22CalculateLaserSettingsEP24DGUS_LASERPROFILE_STRUCT>
    23b2:	29 83       	std	Y+1, r18	; 0x01
    23b4:	3a 83       	std	Y+2, r19	; 0x02
    23b6:	4b 83       	std	Y+3, r20	; 0x03
    23b8:	5c 83       	std	Y+4, r21	; 0x04
    23ba:	6d 83       	std	Y+5, r22	; 0x05
    23bc:	7e 83       	std	Y+6, r23	; 0x06
				laserPower = (uint32_t)(energy * 1440ul) / (uint32_t)duration; // Convert Energy J/cm2 to Power in Watts
    23be:	2f 81       	ldd	r18, Y+7	; 0x07
    23c0:	38 85       	ldd	r19, Y+8	; 0x08
    23c2:	a0 ea       	ldi	r26, 0xA0	; 160
    23c4:	b5 e0       	ldi	r27, 0x05	; 5
    23c6:	0e 94 b4 39 	call	0x7368	; 0x7368 <__umulhisi3>
    23ca:	2b 85       	ldd	r18, Y+11	; 0x0b
    23cc:	3c 85       	ldd	r19, Y+12	; 0x0c
    23ce:	40 e0       	ldi	r20, 0x00	; 0
    23d0:	50 e0       	ldi	r21, 0x00	; 0
    23d2:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <__udivmodsi4>
    23d6:	d7 01       	movw	r26, r14
    23d8:	a8 52       	subi	r26, 0x28	; 40
    23da:	bf 4f       	sbci	r27, 0xFF	; 255
    23dc:	2d 93       	st	X+, r18
    23de:	3c 93       	st	X, r19
				
				// Copy data to profiles
				if (update)
    23e0:	d7 01       	movw	r26, r14
    23e2:	51 96       	adiw	r26, 0x11	; 17
    23e4:	8c 91       	ld	r24, X
    23e6:	51 97       	sbiw	r26, 0x11	; 17
    23e8:	88 23       	and	r24, r24
    23ea:	09 f4       	brne	.+2      	; 0x23ee <_ZN16CLaserControlApp3RunEv+0x610>
    23ec:	54 c2       	rjmp	.+1192   	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
				{
					memcpy((void*)&m_structLaserProfile [Profile], (void*)&laserDiodeData.laserprofile , sizeof(laserDiodeData.laserprofile));
    23ee:	1e 96       	adiw	r26, 0x0e	; 14
    23f0:	8c 91       	ld	r24, X
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	dc 01       	movw	r26, r24
    23f6:	aa 0f       	add	r26, r26
    23f8:	bb 1f       	adc	r27, r27
    23fa:	8a 0f       	add	r24, r26
    23fc:	9b 1f       	adc	r25, r27
    23fe:	88 0f       	add	r24, r24
    2400:	99 1f       	adc	r25, r25
    2402:	dc 01       	movw	r26, r24
    2404:	aa 56       	subi	r26, 0x6A	; 106
    2406:	bf 4f       	sbci	r27, 0xFF	; 255
    2408:	ae 0d       	add	r26, r14
    240a:	bf 1d       	adc	r27, r15
    240c:	86 e0       	ldi	r24, 0x06	; 6
    240e:	f8 01       	movw	r30, r16
    2410:	01 90       	ld	r0, Z+
    2412:	0d 92       	st	X+, r0
    2414:	8a 95       	dec	r24
    2416:	e1 f7       	brne	.-8      	; 0x2410 <_ZN16CLaserControlApp3RunEv+0x632>
					memcpy((void*)&m_structLaserSettings[Profile], (void*)&laserDiodeData.lasersettings, sizeof(laserDiodeData.lasersettings));
    2418:	f7 01       	movw	r30, r14
    241a:	86 85       	ldd	r24, Z+14	; 0x0e
    241c:	90 e0       	ldi	r25, 0x00	; 0
    241e:	dc 01       	movw	r26, r24
    2420:	aa 0f       	add	r26, r26
    2422:	bb 1f       	adc	r27, r27
    2424:	8a 0f       	add	r24, r26
    2426:	9b 1f       	adc	r25, r27
    2428:	88 0f       	add	r24, r24
    242a:	99 1f       	adc	r25, r25
    242c:	dc 01       	movw	r26, r24
    242e:	ac 54       	subi	r26, 0x4C	; 76
    2430:	bf 4f       	sbci	r27, 0xFF	; 255
    2432:	ae 0d       	add	r26, r14
    2434:	bf 1d       	adc	r27, r15
    2436:	86 e0       	ldi	r24, 0x06	; 6
    2438:	e6 51       	subi	r30, 0x16	; 22
    243a:	ff 4f       	sbci	r31, 0xFF	; 255
    243c:	01 90       	ld	r0, Z+
    243e:	0d 92       	st	X+, r0
    2440:	8a 95       	dec	r24
    2442:	e1 f7       	brne	.-8      	; 0x243c <_ZN16CLaserControlApp3RunEv+0x65e>
				}
			}
		break;
    2444:	28 c2       	rjmp	.+1104   	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_WORKPREPARE:
			{
				DGUS_PREPARETIMER timervar;
				
				if (prepare)
    2446:	d7 01       	movw	r26, r14
    2448:	52 96       	adiw	r26, 0x12	; 18
    244a:	8c 91       	ld	r24, X
    244c:	88 23       	and	r24, r24
    244e:	b9 f0       	breq	.+46     	; 0x247e <_ZN16CLaserControlApp3RunEv+0x6a0>
				{
					timervar.timer_minutes = m_wMinutes;
    2450:	f7 01       	movw	r30, r14
    2452:	e4 5f       	subi	r30, 0xF4	; 244
    2454:	fe 4f       	sbci	r31, 0xFE	; 254
    2456:	80 81       	ld	r24, Z
    2458:	91 81       	ldd	r25, Z+1	; 0x01
    245a:	8f 83       	std	Y+7, r24	; 0x07
    245c:	98 87       	std	Y+8, r25	; 0x08
					timervar.timer_seconds = m_wSeconds;
    245e:	32 96       	adiw	r30, 0x02	; 2
    2460:	80 81       	ld	r24, Z
    2462:	91 81       	ldd	r25, Z+1	; 0x01
    2464:	89 87       	std	Y+9, r24	; 0x09
    2466:	9a 87       	std	Y+10, r25	; 0x0a
					SetVariable(STRUCT_ADDR_PREPARETIMER_DATA, (uint16_t*)&timervar, sizeof(timervar));
    2468:	24 e0       	ldi	r18, 0x04	; 4
    246a:	30 e0       	ldi	r19, 0x00	; 0
    246c:	ae 01       	movw	r20, r28
    246e:	49 5f       	subi	r20, 0xF9	; 249
    2470:	5f 4f       	sbci	r21, 0xFF	; 255
    2472:	6f e0       	ldi	r22, 0x0F	; 15
    2474:	70 e0       	ldi	r23, 0x00	; 0
    2476:	c7 01       	movw	r24, r14
    2478:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
    247c:	0c c2       	rjmp	.+1048   	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
				}
				else
				{
					SetVariable(STRUCT_ADDR_LASERPROFILE_DATA, (uint16_t*)&m_structLaserProfile[Profile], sizeof(DGUS_LASERPROFILE));
    247e:	f7 01       	movw	r30, r14
    2480:	86 85       	ldd	r24, Z+14	; 0x0e
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	ac 01       	movw	r20, r24
    2486:	44 0f       	add	r20, r20
    2488:	55 1f       	adc	r21, r21
    248a:	84 0f       	add	r24, r20
    248c:	95 1f       	adc	r25, r21
    248e:	88 0f       	add	r24, r24
    2490:	99 1f       	adc	r25, r25
    2492:	ac 01       	movw	r20, r24
    2494:	4a 56       	subi	r20, 0x6A	; 106
    2496:	5f 4f       	sbci	r21, 0xFF	; 255
    2498:	4e 0d       	add	r20, r14
    249a:	5f 1d       	adc	r21, r15
    249c:	26 e0       	ldi	r18, 0x06	; 6
    249e:	30 e0       	ldi	r19, 0x00	; 0
    24a0:	62 e0       	ldi	r22, 0x02	; 2
    24a2:	70 e0       	ldi	r23, 0x00	; 0
    24a4:	c7 01       	movw	r24, r14
    24a6:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
					SetPictureId(PICID_WORK_READY);	
    24aa:	6c e0       	ldi	r22, 0x0C	; 12
    24ac:	70 e0       	ldi	r23, 0x00	; 0
    24ae:	c7 01       	movw	r24, r14
    24b0:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
				}
			}
		break;
    24b4:	f0 c1       	rjmp	.+992    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_WORKTEMPERWAIT:
			{
				DGUS_PREPARETIMER timervar;
				timervar.timer_minutes = temperature / 10;
    24b6:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    24ba:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    24be:	6a e0       	ldi	r22, 0x0A	; 10
    24c0:	70 e0       	ldi	r23, 0x00	; 0
    24c2:	0e 94 57 39 	call	0x72ae	; 0x72ae <__divmodhi4>
    24c6:	6f 83       	std	Y+7, r22	; 0x07
    24c8:	78 87       	std	Y+8, r23	; 0x08
				timervar.timer_seconds = temperature % 10;
    24ca:	89 87       	std	Y+9, r24	; 0x09
    24cc:	9a 87       	std	Y+10, r25	; 0x0a
				SetVariable(STRUCT_ADDR_PREPARETIMER_DATA, (uint16_t*)&timervar, sizeof(timervar));
    24ce:	24 e0       	ldi	r18, 0x04	; 4
    24d0:	30 e0       	ldi	r19, 0x00	; 0
    24d2:	ae 01       	movw	r20, r28
    24d4:	49 5f       	subi	r20, 0xF9	; 249
    24d6:	5f 4f       	sbci	r21, 0xFF	; 255
    24d8:	6f e0       	ldi	r22, 0x0F	; 15
    24da:	70 e0       	ldi	r23, 0x00	; 0
    24dc:	c7 01       	movw	r24, r14
    24de:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
				
				m_wMinutes = m_wSetMin;
    24e2:	f7 01       	movw	r30, r14
    24e4:	ee 5e       	subi	r30, 0xEE	; 238
    24e6:	fe 4f       	sbci	r31, 0xFE	; 254
    24e8:	80 81       	ld	r24, Z
    24ea:	91 81       	ldd	r25, Z+1	; 0x01
    24ec:	36 97       	sbiw	r30, 0x06	; 6
    24ee:	80 83       	st	Z, r24
    24f0:	91 83       	std	Z+1, r25	; 0x01
				m_wSeconds = m_wSetSec;
    24f2:	38 96       	adiw	r30, 0x08	; 8
    24f4:	80 81       	ld	r24, Z
    24f6:	91 81       	ldd	r25, Z+1	; 0x01
    24f8:	36 97       	sbiw	r30, 0x06	; 6
    24fa:	80 83       	st	Z, r24
    24fc:	91 83       	std	Z+1, r25	; 0x01
				prepare = true;
    24fe:	81 e0       	ldi	r24, 0x01	; 1
    2500:	d7 01       	movw	r26, r14
    2502:	52 96       	adiw	r26, 0x12	; 18
    2504:	8c 93       	st	X, r24
				
				if (temperature < 290)
    2506:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    250a:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    250e:	82 32       	cpi	r24, 0x22	; 34
    2510:	91 40       	sbci	r25, 0x01	; 1
    2512:	0c f0       	brlt	.+2      	; 0x2516 <_ZN16CLaserControlApp3RunEv+0x738>
    2514:	c0 c1       	rjmp	.+896    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
					SetPictureId(PICID_WORK_PREPARE);
    2516:	67 e0       	ldi	r22, 0x07	; 7
    2518:	70 e0       	ldi	r23, 0x00	; 0
    251a:	c7 01       	movw	r24, r14
    251c:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
			}
		break;
    2520:	ba c1       	rjmp	.+884    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_WORKREADY:
			{				
				if (temperature > 300)
    2522:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    2526:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    252a:	8d 32       	cpi	r24, 0x2D	; 45
    252c:	91 40       	sbci	r25, 0x01	; 1
    252e:	0c f4       	brge	.+2      	; 0x2532 <_ZN16CLaserControlApp3RunEv+0x754>
    2530:	b2 c1       	rjmp	.+868    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
				{
					SetPictureId(PICID_WORK_ERRORHEATING);
    2532:	69 e2       	ldi	r22, 0x29	; 41
    2534:	70 e0       	ldi	r23, 0x00	; 0
    2536:	c7 01       	movw	r24, r14
    2538:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
					PIC_ID_last = PIC_ID;
    253c:	d7 01       	movw	r26, r14
    253e:	1f 96       	adiw	r26, 0x0f	; 15
    2540:	8c 91       	ld	r24, X
    2542:	1f 97       	sbiw	r26, 0x0f	; 15
    2544:	50 96       	adiw	r26, 0x10	; 16
    2546:	8c 93       	st	X, r24
    2548:	a6 c1       	rjmp	.+844    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
			}
		break;
		case APP_WORKLIGHT:
		case APP_WORKPOWERON:
			{				
				SetLaserDiodePower();
    254a:	c7 01       	movw	r24, r14
    254c:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN16CLaserControlApp18SetLaserDiodePowerEv>
							
				if (!laserBoard.Footswitch())
    2550:	83 eb       	ldi	r24, 0xB3	; 179
    2552:	96 e2       	ldi	r25, 0x26	; 38
    2554:	0e 94 b5 33 	call	0x676a	; 0x676a <_ZN11CLaserBoard10FootswitchEv>
    2558:	81 11       	cpse	r24, r1
    255a:	12 c0       	rjmp	.+36     	; 0x2580 <_ZN16CLaserControlApp3RunEv+0x7a2>
				{
					//isstarted = true;
					if (state != APP_WORKLIGHT)
    255c:	f7 01       	movw	r30, r14
    255e:	84 85       	ldd	r24, Z+12	; 0x0c
    2560:	95 85       	ldd	r25, Z+13	; 0x0d
    2562:	80 97       	sbiw	r24, 0x20	; 32
    2564:	f1 f0       	breq	.+60     	; 0x25a2 <_ZN16CLaserControlApp3RunEv+0x7c4>
					{
						SetPictureId(PICID_WORK_STARTED);
    2566:	60 e1       	ldi	r22, 0x10	; 16
    2568:	70 e0       	ldi	r23, 0x00	; 0
    256a:	c7 01       	movw	r24, r14
    256c:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
						state = APP_WORKLIGHT;
    2570:	80 e2       	ldi	r24, 0x20	; 32
    2572:	90 e0       	ldi	r25, 0x00	; 0
    2574:	d7 01       	movw	r26, r14
    2576:	1c 96       	adiw	r26, 0x0c	; 12
    2578:	8d 93       	st	X+, r24
    257a:	9c 93       	st	X, r25
    257c:	1d 97       	sbiw	r26, 0x0d	; 13
    257e:	11 c0       	rjmp	.+34     	; 0x25a2 <_ZN16CLaserControlApp3RunEv+0x7c4>
					}
				}
				else
				{
					if (state != APP_WORKPOWERON)
    2580:	f7 01       	movw	r30, r14
    2582:	84 85       	ldd	r24, Z+12	; 0x0c
    2584:	95 85       	ldd	r25, Z+13	; 0x0d
    2586:	40 97       	sbiw	r24, 0x10	; 16
    2588:	61 f0       	breq	.+24     	; 0x25a2 <_ZN16CLaserControlApp3RunEv+0x7c4>
					{
						SetPictureId(PICID_WORK_POWERON);
    258a:	6e e0       	ldi	r22, 0x0E	; 14
    258c:	70 e0       	ldi	r23, 0x00	; 0
    258e:	c7 01       	movw	r24, r14
    2590:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
						state = APP_WORKPOWERON;
    2594:	80 e1       	ldi	r24, 0x10	; 16
    2596:	90 e0       	ldi	r25, 0x00	; 0
    2598:	d7 01       	movw	r26, r14
    259a:	1c 96       	adiw	r26, 0x0c	; 12
    259c:	8d 93       	st	X+, r24
    259e:	9c 93       	st	X, r25
    25a0:	1d 97       	sbiw	r26, 0x0d	; 13
					/*laserTimer.Stop();
					laserTimer.ChannelSet(TIMER_CHANNEL_A);
					laserTimer.ChannelSet(TIMER_CHANNEL_B);*/
				}
			
				uint32_t cnt = swap32(laserCounter);
    25a2:	f7 01       	movw	r30, r14
    25a4:	e6 52       	subi	r30, 0x26	; 38
    25a6:	ff 4f       	sbci	r31, 0xFF	; 255
    25a8:	60 81       	ld	r22, Z
    25aa:	71 81       	ldd	r23, Z+1	; 0x01
    25ac:	82 81       	ldd	r24, Z+2	; 0x02
    25ae:	93 81       	ldd	r25, Z+3	; 0x03
    25b0:	0e 94 6f 16 	call	0x2cde	; 0x2cde <_Z6swap32m>
    25b4:	6f 83       	std	Y+7, r22	; 0x07
    25b6:	78 87       	std	Y+8, r23	; 0x08
    25b8:	89 87       	std	Y+9, r24	; 0x09
    25ba:	9a 87       	std	Y+10, r25	; 0x0a
				SetVariable(VARIABLE_ADDR_LASERCNT, (uint16_t*)&cnt,  4);
    25bc:	24 e0       	ldi	r18, 0x04	; 4
    25be:	30 e0       	ldi	r19, 0x00	; 0
    25c0:	ae 01       	movw	r20, r28
    25c2:	49 5f       	subi	r20, 0xF9	; 249
    25c4:	5f 4f       	sbci	r21, 0xFF	; 255
    25c6:	68 e0       	ldi	r22, 0x08	; 8
    25c8:	70 e0       	ldi	r23, 0x00	; 0
    25ca:	c7 01       	movw	r24, r14
    25cc:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
				cnt = swap32(laserCounterSession);
    25d0:	f7 01       	movw	r30, r14
    25d2:	e2 52       	subi	r30, 0x22	; 34
    25d4:	ff 4f       	sbci	r31, 0xFF	; 255
    25d6:	60 81       	ld	r22, Z
    25d8:	71 81       	ldd	r23, Z+1	; 0x01
    25da:	82 81       	ldd	r24, Z+2	; 0x02
    25dc:	93 81       	ldd	r25, Z+3	; 0x03
    25de:	0e 94 6f 16 	call	0x2cde	; 0x2cde <_Z6swap32m>
    25e2:	6f 83       	std	Y+7, r22	; 0x07
    25e4:	78 87       	std	Y+8, r23	; 0x08
    25e6:	89 87       	std	Y+9, r24	; 0x09
    25e8:	9a 87       	std	Y+10, r25	; 0x0a
				SetVariable(VARIABLE_ADDR_SESSNCNT, (uint16_t*)&cnt,  4);
    25ea:	24 e0       	ldi	r18, 0x04	; 4
    25ec:	30 e0       	ldi	r19, 0x00	; 0
    25ee:	ae 01       	movw	r20, r28
    25f0:	49 5f       	subi	r20, 0xF9	; 249
    25f2:	5f 4f       	sbci	r21, 0xFF	; 255
    25f4:	64 e1       	ldi	r22, 0x14	; 20
    25f6:	70 e0       	ldi	r23, 0x00	; 0
    25f8:	c7 01       	movw	r24, r14
    25fa:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
					SetPictureId(PICID_WORK_ERRORFLOW);
					PIC_ID_last = PIC_ID;
				}
#endif
			}
		break;
    25fe:	4b c1       	rjmp	.+662    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_FLOWERR:			
			laserBoard.LaserPowerOff();
    2600:	83 eb       	ldi	r24, 0xB3	; 179
    2602:	96 e2       	ldi	r25, 0x26	; 38
    2604:	0e 94 6a 33 	call	0x66d4	; 0x66d4 <_ZN11CLaserBoard13LaserPowerOffEv>
			
			if (m_wFlow > 60)
    2608:	f7 01       	movw	r30, r14
    260a:	ea 5e       	subi	r30, 0xEA	; 234
    260c:	fe 4f       	sbci	r31, 0xFE	; 254
    260e:	80 81       	ld	r24, Z
    2610:	91 81       	ldd	r25, Z+1	; 0x01
    2612:	cd 97       	sbiw	r24, 0x3d	; 61
    2614:	08 f4       	brcc	.+2      	; 0x2618 <_ZN16CLaserControlApp3RunEv+0x83a>
    2616:	3f c1       	rjmp	.+638    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
				SetPictureId(PICID_WORKOnReady);
    2618:	69 e1       	ldi	r22, 0x19	; 25
    261a:	70 e0       	ldi	r23, 0x00	; 0
    261c:	c7 01       	movw	r24, r14
    261e:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
    2622:	39 c1       	rjmp	.+626    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		break;
		case APP_TEMPERERR:			
			laserBoard.LaserPowerOff();
    2624:	83 eb       	ldi	r24, 0xB3	; 179
    2626:	96 e2       	ldi	r25, 0x26	; 38
    2628:	0e 94 6a 33 	call	0x66d4	; 0x66d4 <_ZN11CLaserBoard13LaserPowerOffEv>
			
			prepare = false;
    262c:	f7 01       	movw	r30, r14
    262e:	12 8a       	std	Z+18, r1	; 0x12
			if (temperature < 290)
    2630:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    2634:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    2638:	82 32       	cpi	r24, 0x22	; 34
    263a:	91 40       	sbci	r25, 0x01	; 1
    263c:	0c f0       	brlt	.+2      	; 0x2640 <_ZN16CLaserControlApp3RunEv+0x862>
    263e:	2b c1       	rjmp	.+598    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
			{
				prepare = true;
    2640:	81 e0       	ldi	r24, 0x01	; 1
    2642:	d7 01       	movw	r26, r14
    2644:	52 96       	adiw	r26, 0x12	; 18
    2646:	8c 93       	st	X, r24
    2648:	52 97       	sbiw	r26, 0x12	; 18
				SetPictureId(PIC_ID_last);
    264a:	50 96       	adiw	r26, 0x10	; 16
    264c:	6c 91       	ld	r22, X
    264e:	70 e0       	ldi	r23, 0x00	; 0
    2650:	c7 01       	movw	r24, r14
    2652:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
    2656:	1f c1       	rjmp	.+574    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
			}
		break;
		case APP_POWERERR:			
			laserBoard.LaserPowerOff();
    2658:	83 eb       	ldi	r24, 0xB3	; 179
    265a:	96 e2       	ldi	r25, 0x26	; 38
    265c:	0e 94 6a 33 	call	0x66d4	; 0x66d4 <_ZN11CLaserBoard13LaserPowerOffEv>
			
			if ((PORTD.IN & PIN5_bm) != 0)
    2660:	80 91 68 06 	lds	r24, 0x0668	; 0x800668 <__TEXT_REGION_LENGTH__+0x700668>
    2664:	85 ff       	sbrs	r24, 5
    2666:	17 c1       	rjmp	.+558    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
				SetPictureId(PIC_ID_last);
    2668:	f7 01       	movw	r30, r14
    266a:	60 89       	ldd	r22, Z+16	; 0x10
    266c:	70 e0       	ldi	r23, 0x00	; 0
    266e:	c7 01       	movw	r24, r14
    2670:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
    2674:	10 c1       	rjmp	.+544    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		break;
		
		// Commands
		case APP_WORKOnReady:
			{
				laserCounterSession = 0;
    2676:	f7 01       	movw	r30, r14
    2678:	e2 52       	subi	r30, 0x22	; 34
    267a:	ff 4f       	sbci	r31, 0xFF	; 255
    267c:	10 82       	st	Z, r1
    267e:	11 82       	std	Z+1, r1	; 0x01
    2680:	12 82       	std	Z+2, r1	; 0x02
    2682:	13 82       	std	Z+3, r1	; 0x03
				
				//laserBoard.Relay2On();
				laserBoard.LaserPowerOn();
    2684:	83 eb       	ldi	r24, 0xB3	; 179
    2686:	96 e2       	ldi	r25, 0x26	; 38
    2688:	0e 94 66 33 	call	0x66cc	; 0x66cc <_ZN11CLaserBoard12LaserPowerOnEv>
				
				uint16_t coolpwm = laserDiodeData.cooling * 204;
    268c:	f7 01       	movw	r30, r14
    268e:	e6 50       	subi	r30, 0x06	; 6
    2690:	ff 4f       	sbci	r31, 0xFF	; 255
    2692:	80 81       	ld	r24, Z
    2694:	91 81       	ldd	r25, Z+1	; 0x01
    2696:	2c ec       	ldi	r18, 0xCC	; 204
    2698:	28 9f       	mul	r18, r24
    269a:	b0 01       	movw	r22, r0
    269c:	29 9f       	mul	r18, r25
    269e:	70 0d       	add	r23, r0
    26a0:	11 24       	eor	r1, r1
				pwmtimer.SetCOMPA(coolpwm);
    26a2:	84 ee       	ldi	r24, 0xE4	; 228
    26a4:	96 e2       	ldi	r25, 0x26	; 38
    26a6:	0e 94 f8 35 	call	0x6bf0	; 0x6bf0 <_ZN7CTimerD8SetCOMPAEj>
				//pwmtimer.Start(1024);
				peltier_en = true;
    26aa:	81 e0       	ldi	r24, 0x01	; 1
    26ac:	d7 01       	movw	r26, r14
    26ae:	53 96       	adiw	r26, 0x13	; 19
    26b0:	8c 93       	st	X, r24
    26b2:	53 97       	sbiw	r26, 0x13	; 19
				
				prepare = true;
    26b4:	52 96       	adiw	r26, 0x12	; 18
    26b6:	8c 93       	st	X, r24
				m_wMinutes = m_wSetMin;
    26b8:	f7 01       	movw	r30, r14
    26ba:	ee 5e       	subi	r30, 0xEE	; 238
    26bc:	fe 4f       	sbci	r31, 0xFE	; 254
    26be:	80 81       	ld	r24, Z
    26c0:	91 81       	ldd	r25, Z+1	; 0x01
    26c2:	36 97       	sbiw	r30, 0x06	; 6
    26c4:	80 83       	st	Z, r24
    26c6:	91 83       	std	Z+1, r25	; 0x01
				m_wSeconds = m_wSetSec;
    26c8:	38 96       	adiw	r30, 0x08	; 8
    26ca:	80 81       	ld	r24, Z
    26cc:	91 81       	ldd	r25, Z+1	; 0x01
    26ce:	36 97       	sbiw	r30, 0x06	; 6
    26d0:	80 83       	st	Z, r24
    26d2:	91 83       	std	Z+1, r25	; 0x01
				{
					SetPictureId(PICID_WORK_ERRORFLOW);
				}
				else				
#endif
				if (temperature > 290)
    26d4:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    26d8:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    26dc:	83 32       	cpi	r24, 0x23	; 35
    26de:	91 40       	sbci	r25, 0x01	; 1
    26e0:	34 f0       	brlt	.+12     	; 0x26ee <_ZN16CLaserControlApp3RunEv+0x910>
				{
					SetPictureId(PICID_WORK_TEMPERWAIT);
    26e2:	67 e2       	ldi	r22, 0x27	; 39
    26e4:	70 e0       	ldi	r23, 0x00	; 0
    26e6:	c7 01       	movw	r24, r14
    26e8:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
    26ec:	d4 c0       	rjmp	.+424    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
				}
				else
					SetPictureId(PICID_WORK_PREPARE);
    26ee:	67 e0       	ldi	r22, 0x07	; 7
    26f0:	70 e0       	ldi	r23, 0x00	; 0
    26f2:	c7 01       	movw	r24, r14
    26f4:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
    26f8:	ce c0       	rjmp	.+412    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
			}
		break;
		case APP_WORKOnPowerOn:
			{
				SetLaserDiodePower();
    26fa:	c7 01       	movw	r24, r14
    26fc:	0e 94 78 05 	call	0xaf0	; 0xaf0 <_ZN16CLaserControlApp18SetLaserDiodePowerEv>
				
				SetPictureId(PICID_WORK_POWERON);
    2700:	6e e0       	ldi	r22, 0x0E	; 14
    2702:	70 e0       	ldi	r23, 0x00	; 0
    2704:	c7 01       	movw	r24, r14
    2706:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
			}
		break;
    270a:	c5 c0       	rjmp	.+394    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_WORKOnPowerOff:
			{
				SetPictureId(PICID_WORK_IDLE);
    270c:	6a e0       	ldi	r22, 0x0A	; 10
    270e:	70 e0       	ldi	r23, 0x00	; 0
    2710:	c7 01       	movw	r24, r14
    2712:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
				
				laserTimer.Stop();
    2716:	8a ee       	ldi	r24, 0xEA	; 234
    2718:	96 e2       	ldi	r25, 0x26	; 38
    271a:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <_ZN7CTimerF4StopEv>
				laserTimer.ChannelSet(TIMER_CHANNEL_A);
    271e:	60 e1       	ldi	r22, 0x10	; 16
    2720:	8a ee       	ldi	r24, 0xEA	; 234
    2722:	96 e2       	ldi	r25, 0x26	; 38
    2724:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
				laserTimer.ChannelSet(TIMER_CHANNEL_B);
    2728:	60 e2       	ldi	r22, 0x20	; 32
    272a:	8a ee       	ldi	r24, 0xEA	; 234
    272c:	96 e2       	ldi	r25, 0x26	; 38
    272e:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
				laserBoard.LaserPowerOff();
    2732:	83 eb       	ldi	r24, 0xB3	; 179
    2734:	96 e2       	ldi	r25, 0x26	; 38
    2736:	0e 94 6a 33 	call	0x66d4	; 0x66d4 <_ZN11CLaserBoard13LaserPowerOffEv>
				//pwmtimer.Stop();
				peltier_en = false;
    273a:	f7 01       	movw	r30, r14
    273c:	13 8a       	std	Z+19, r1	; 0x13
				laserBoard.PWMOn(); // Cooling off
    273e:	83 eb       	ldi	r24, 0xB3	; 179
    2740:	96 e2       	ldi	r25, 0x26	; 38
    2742:	0e 94 46 33 	call	0x668c	; 0x668c <_ZN11CLaserBoard5PWMOnEv>
				eeprom_write_dword((uint32_t*)LASER_CNT_EEPROMADDR, laserCounter);
    2746:	f7 01       	movw	r30, r14
    2748:	e6 52       	subi	r30, 0x26	; 38
    274a:	ff 4f       	sbci	r31, 0xFF	; 255
    274c:	40 81       	ld	r20, Z
    274e:	51 81       	ldd	r21, Z+1	; 0x01
    2750:	62 81       	ldd	r22, Z+2	; 0x02
    2752:	73 81       	ldd	r23, Z+3	; 0x03
    2754:	81 e0       	ldi	r24, 0x01	; 1
    2756:	90 e0       	ldi	r25, 0x00	; 0
    2758:	0e 94 0b 3b 	call	0x7616	; 0x7616 <eeprom_write_dword>
				//laserBoard.Relay2Off();
				
				uint16_t data = 0;
    275c:	1f 82       	std	Y+7, r1	; 0x07
    275e:	18 86       	std	Y+8, r1	; 0x08
				dacSPI.Send((uint8_t*)&data, sizeof(data));
    2760:	42 e0       	ldi	r20, 0x02	; 2
    2762:	50 e0       	ldi	r21, 0x00	; 0
    2764:	be 01       	movw	r22, r28
    2766:	69 5f       	subi	r22, 0xF9	; 249
    2768:	7f 4f       	sbci	r23, 0xFF	; 255
    276a:	83 ef       	ldi	r24, 0xF3	; 243
    276c:	96 e2       	ldi	r25, 0x26	; 38
    276e:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <_ZN4CSPI4SendEPhj>
			}
		break;
    2772:	91 c0       	rjmp	.+290    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_OnPhototypeSelect:
			{
				SetPictureId(PICID_WORK_IDLE);
    2774:	6a e0       	ldi	r22, 0x0A	; 10
    2776:	70 e0       	ldi	r23, 0x00	; 0
    2778:	c7 01       	movw	r24, r14
    277a:	0e 94 45 06 	call	0xc8a	; 0xc8a <_ZN16CLaserControlApp12SetPictureIdEj>
			}
		break;
    277e:	8b c0       	rjmp	.+278    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		
		// Database
		case APP_DATABASE:
			GetVariable(VARIABLE_ADDR_DATAOFFS, 2);
    2780:	42 e0       	ldi	r20, 0x02	; 2
    2782:	50 e0       	ldi	r21, 0x00	; 0
    2784:	61 e1       	ldi	r22, 0x11	; 17
    2786:	70 e0       	ldi	r23, 0x00	; 0
    2788:	c7 01       	movw	r24, r14
    278a:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
    278e:	ff ef       	ldi	r31, 0xFF	; 255
    2790:	21 ee       	ldi	r18, 0xE1	; 225
    2792:	84 e0       	ldi	r24, 0x04	; 4
    2794:	f1 50       	subi	r31, 0x01	; 1
    2796:	20 40       	sbci	r18, 0x00	; 0
    2798:	80 40       	sbci	r24, 0x00	; 0
    279a:	e1 f7       	brne	.-8      	; 0x2794 <_ZN16CLaserControlApp3RunEv+0x9b6>
    279c:	00 c0       	rjmp	.+0      	; 0x279e <_ZN16CLaserControlApp3RunEv+0x9c0>
    279e:	00 00       	nop
			_delay_ms(50);
			GetVariable(VARIABLE_ADDR_DATAINDEX, 2);
    27a0:	42 e0       	ldi	r20, 0x02	; 2
    27a2:	50 e0       	ldi	r21, 0x00	; 0
    27a4:	62 e1       	ldi	r22, 0x12	; 18
    27a6:	70 e0       	ldi	r23, 0x00	; 0
    27a8:	c7 01       	movw	r24, r14
    27aa:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
    27ae:	9f ef       	ldi	r25, 0xFF	; 255
    27b0:	a1 ee       	ldi	r26, 0xE1	; 225
    27b2:	b4 e0       	ldi	r27, 0x04	; 4
    27b4:	91 50       	subi	r25, 0x01	; 1
    27b6:	a0 40       	sbci	r26, 0x00	; 0
    27b8:	b0 40       	sbci	r27, 0x00	; 0
    27ba:	e1 f7       	brne	.-8      	; 0x27b4 <_ZN16CLaserControlApp3RunEv+0x9d6>
    27bc:	00 c0       	rjmp	.+0      	; 0x27be <_ZN16CLaserControlApp3RunEv+0x9e0>
    27be:	00 00       	nop
			_delay_ms(50);
			
			Database.MapDatabaseToRead(VARIABLE_ADDR_DATABASE, DGUS_DATABASE_ADDR + (uint32_t)laserDiodeData.DatabasePageOffset * (uint32_t)PROFILE_SIZE, 0x0C00);
    27c0:	f7 01       	movw	r30, r14
    27c2:	ee 5f       	subi	r30, 0xFE	; 254
    27c4:	fe 4f       	sbci	r31, 0xFE	; 254
    27c6:	20 81       	ld	r18, Z
    27c8:	31 81       	ldd	r19, Z+1	; 0x01
    27ca:	c9 01       	movw	r24, r18
    27cc:	a0 e0       	ldi	r26, 0x00	; 0
    27ce:	b0 e0       	ldi	r27, 0x00	; 0
    27d0:	90 51       	subi	r25, 0x10	; 16
    27d2:	af 4f       	sbci	r26, 0xFF	; 255
    27d4:	bf 4f       	sbci	r27, 0xFF	; 255
    27d6:	22 27       	eor	r18, r18
    27d8:	38 2f       	mov	r19, r24
    27da:	49 2f       	mov	r20, r25
    27dc:	5a 2f       	mov	r21, r26
    27de:	00 e0       	ldi	r16, 0x00	; 0
    27e0:	1c e0       	ldi	r17, 0x0C	; 12
    27e2:	60 e0       	ldi	r22, 0x00	; 0
    27e4:	71 e0       	ldi	r23, 0x01	; 1
    27e6:	8a ed       	ldi	r24, 0xDA	; 218
    27e8:	96 e2       	ldi	r25, 0x26	; 38
    27ea:	0e 94 33 03 	call	0x666	; 0x666 <_ZN13CDGUSDatabase17MapDatabaseToReadEjmj>
				_delay_ms(500);
				
				uint16_t index = 13;
				SetVariable(VARIABLE_ADDR_DATAINDEX, &index, 2);
			}*/
		break;
    27ee:	53 c0       	rjmp	.+166    	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
    27f0:	ef ef       	ldi	r30, 0xFF	; 255
    27f2:	f7 ea       	ldi	r31, 0xA7	; 167
    27f4:	21 e6       	ldi	r18, 0x61	; 97
    27f6:	e1 50       	subi	r30, 0x01	; 1
    27f8:	f0 40       	sbci	r31, 0x00	; 0
    27fa:	20 40       	sbci	r18, 0x00	; 0
    27fc:	e1 f7       	brne	.-8      	; 0x27f6 <_ZN16CLaserControlApp3RunEv+0xa18>
    27fe:	00 c0       	rjmp	.+0      	; 0x2800 <_ZN16CLaserControlApp3RunEv+0xa22>
    2800:	00 00       	nop
		case APP_READPROFILE:
			_delay_ms(1000);
			
			GetVariable(VARIABLE_ADDR_DATAINDEX, 2);
    2802:	42 e0       	ldi	r20, 0x02	; 2
    2804:	50 e0       	ldi	r21, 0x00	; 0
    2806:	62 e1       	ldi	r22, 0x12	; 18
    2808:	70 e0       	ldi	r23, 0x00	; 0
    280a:	c7 01       	movw	r24, r14
    280c:	0e 94 21 06 	call	0xc42	; 0xc42 <_ZN16CLaserControlApp11GetVariableEjj>
			
			Database.MapDatabaseToRead(
				VARIABLE_ADDR_PROFILE, 
				DGUS_DATABASE_ADDR + (uint32_t)(laserDiodeData.DatabasePageOffset + laserDiodeData.DatabaseSelectionIndex) * (uint32_t)PROFILE_SIZE, 0x0100);
    2810:	f7 01       	movw	r30, r14
    2812:	ec 5f       	subi	r30, 0xFC	; 252
    2814:	fe 4f       	sbci	r31, 0xFE	; 254
    2816:	20 81       	ld	r18, Z
    2818:	31 81       	ldd	r19, Z+1	; 0x01
    281a:	32 97       	sbiw	r30, 0x02	; 2
    281c:	80 81       	ld	r24, Z
    281e:	91 81       	ldd	r25, Z+1	; 0x01
    2820:	28 0f       	add	r18, r24
    2822:	39 1f       	adc	r19, r25
    2824:	c9 01       	movw	r24, r18
    2826:	a0 e0       	ldi	r26, 0x00	; 0
    2828:	b0 e0       	ldi	r27, 0x00	; 0
    282a:	90 51       	subi	r25, 0x10	; 16
    282c:	af 4f       	sbci	r26, 0xFF	; 255
    282e:	bf 4f       	sbci	r27, 0xFF	; 255
    2830:	22 27       	eor	r18, r18
    2832:	38 2f       	mov	r19, r24
    2834:	49 2f       	mov	r20, r25
    2836:	5a 2f       	mov	r21, r26
    2838:	00 e0       	ldi	r16, 0x00	; 0
    283a:	11 e0       	ldi	r17, 0x01	; 1
    283c:	60 e0       	ldi	r22, 0x00	; 0
    283e:	7d e0       	ldi	r23, 0x0D	; 13
    2840:	8a ed       	ldi	r24, 0xDA	; 218
    2842:	96 e2       	ldi	r25, 0x26	; 38
    2844:	0e 94 33 03 	call	0x666	; 0x666 <_ZN13CDGUSDatabase17MapDatabaseToReadEjmj>
		break;
    2848:	26 c0       	rjmp	.+76     	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_SAVEPROFILE:
			Database.MapDatabaseToWrite(
				VARIABLE_ADDR_PROFILE,
				DGUS_DATABASE_ADDR + (uint32_t)(laserDiodeData.DatabasePageOffset + laserDiodeData.DatabaseSelectionIndex) * (uint32_t)PROFILE_SIZE, 0x0100);
    284a:	f7 01       	movw	r30, r14
    284c:	ec 5f       	subi	r30, 0xFC	; 252
    284e:	fe 4f       	sbci	r31, 0xFE	; 254
    2850:	20 81       	ld	r18, Z
    2852:	31 81       	ldd	r19, Z+1	; 0x01
    2854:	32 97       	sbiw	r30, 0x02	; 2
    2856:	80 81       	ld	r24, Z
    2858:	91 81       	ldd	r25, Z+1	; 0x01
    285a:	28 0f       	add	r18, r24
    285c:	39 1f       	adc	r19, r25
    285e:	c9 01       	movw	r24, r18
    2860:	a0 e0       	ldi	r26, 0x00	; 0
    2862:	b0 e0       	ldi	r27, 0x00	; 0
    2864:	90 51       	subi	r25, 0x10	; 16
    2866:	af 4f       	sbci	r26, 0xFF	; 255
    2868:	bf 4f       	sbci	r27, 0xFF	; 255
    286a:	22 27       	eor	r18, r18
    286c:	38 2f       	mov	r19, r24
    286e:	49 2f       	mov	r20, r25
    2870:	5a 2f       	mov	r21, r26
    2872:	00 e0       	ldi	r16, 0x00	; 0
    2874:	11 e0       	ldi	r17, 0x01	; 1
    2876:	60 e0       	ldi	r22, 0x00	; 0
    2878:	7d e0       	ldi	r23, 0x0D	; 13
    287a:	8a ed       	ldi	r24, 0xDA	; 218
    287c:	96 e2       	ldi	r25, 0x26	; 38
    287e:	0e 94 ce 02 	call	0x59c	; 0x59c <_ZN13CDGUSDatabase18MapDatabaseToWriteEjmj>
		break;
    2882:	09 c0       	rjmp	.+18     	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		case APP_UNMAPDATABASE:
			Database.UnMap();
    2884:	8a ed       	ldi	r24, 0xDA	; 218
    2886:	96 e2       	ldi	r25, 0x26	; 38
    2888:	0e 94 98 03 	call	0x730	; 0x730 <_ZN13CDGUSDatabase5UnMapEv>
		break;
    288c:	04 c0       	rjmp	.+8      	; 0x2896 <_ZN16CLaserControlApp3RunEv+0xab8>
		default:
			Database.UnMap();
    288e:	8a ed       	ldi	r24, 0xDA	; 218
    2890:	96 e2       	ldi	r25, 0x26	; 38
    2892:	0e 94 98 03 	call	0x730	; 0x730 <_ZN13CDGUSDatabase5UnMapEv>
			PIC_ID_last = PIC_ID;
			SetPictureId(PICID_WORK_ERROR1);
		}
#endif
	
	if (update)
    2896:	d7 01       	movw	r26, r14
    2898:	51 96       	adiw	r26, 0x11	; 17
    289a:	8c 91       	ld	r24, X
    289c:	88 23       	and	r24, r24
    289e:	a9 f0       	breq	.+42     	; 0x28ca <_ZN16CLaserControlApp3RunEv+0xaec>
	{		
		SetVariable(STRUCT_ADDR_LASERDIODE_DATA, (uint16_t*)&laserDiodeData, sizeof(DGUS_LASERDIODE));
    28a0:	a7 01       	movw	r20, r14
    28a2:	4e 51       	subi	r20, 0x1E	; 30
    28a4:	5f 4f       	sbci	r21, 0xFF	; 255
    28a6:	2a e2       	ldi	r18, 0x2A	; 42
    28a8:	30 e0       	ldi	r19, 0x00	; 0
    28aa:	61 e0       	ldi	r22, 0x01	; 1
    28ac:	70 e0       	ldi	r23, 0x00	; 0
    28ae:	c7 01       	movw	r24, r14
    28b0:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN16CLaserControlApp11SetVariableEjPjj>
		update = false;
    28b4:	f7 01       	movw	r30, r14
    28b6:	11 8a       	std	Z+17, r1	; 0x11
    28b8:	08 c0       	rjmp	.+16     	; 0x28ca <_ZN16CLaserControlApp3RunEv+0xaec>
	// show sensors
	if ((state & 0xFFF) != 0)
	{
		SetVariable(VARIABLE_ADDR_TEMPER, (uint16_t*)&temperature, 2);
		if (m_wFlow < 20) laserDiodeData.coolIcon = 1;
		if (m_wFlow >= 20 && m_wFlow <= 40) laserDiodeData.coolIcon = 2;
    28ba:	82 e0       	ldi	r24, 0x02	; 2
    28bc:	90 e0       	ldi	r25, 0x00	; 0
    28be:	f7 01       	movw	r30, r14
    28c0:	ea 5f       	subi	r30, 0xFA	; 250
    28c2:	fe 4f       	sbci	r31, 0xFE	; 254
    28c4:	80 83       	st	Z, r24
    28c6:	91 83       	std	Z+1, r25	; 0x01
    28c8:	e5 ca       	rjmp	.-2614   	; 0x1e94 <_ZN16CLaserControlApp3RunEv+0xb6>
	if (update)
	{		
		SetVariable(STRUCT_ADDR_LASERDIODE_DATA, (uint16_t*)&laserDiodeData, sizeof(DGUS_LASERDIODE));
		update = false;
	}
}
    28ca:	2e 96       	adiw	r28, 0x0e	; 14
    28cc:	cd bf       	out	0x3d, r28	; 61
    28ce:	de bf       	out	0x3e, r29	; 62
    28d0:	df 91       	pop	r29
    28d2:	cf 91       	pop	r28
    28d4:	1f 91       	pop	r17
    28d6:	0f 91       	pop	r16
    28d8:	ff 90       	pop	r15
    28da:	ef 90       	pop	r14
    28dc:	df 90       	pop	r13
    28de:	cf 90       	pop	r12
    28e0:	bf 90       	pop	r11
    28e2:	af 90       	pop	r10
    28e4:	9f 90       	pop	r9
    28e6:	8f 90       	pop	r8
    28e8:	7f 90       	pop	r7
    28ea:	6f 90       	pop	r6
    28ec:	08 95       	ret

000028ee <_ZN16CLaserControlApp7OnTimerEv>:
	m_cpSender->WriteDataToRegisterAsync(REGISTER_ADDR_PICID, (uint8_t*)&pic, 2);
	m_cpSender->WaitMODBUSTransmitter();
}

void CLaserControlApp::OnTimer()
{
    28ee:	cf 93       	push	r28
    28f0:	df 93       	push	r29
    28f2:	ec 01       	movw	r28, r24
	if (m_wDeadTime != 0)
    28f4:	fc 01       	movw	r30, r24
    28f6:	e8 5e       	subi	r30, 0xE8	; 232
    28f8:	fe 4f       	sbci	r31, 0xFE	; 254
    28fa:	80 81       	ld	r24, Z
    28fc:	91 81       	ldd	r25, Z+1	; 0x01
    28fe:	89 2b       	or	r24, r25
    2900:	29 f0       	breq	.+10     	; 0x290c <_ZN16CLaserControlApp7OnTimerEv+0x1e>
		m_wDeadTime--;
    2902:	80 81       	ld	r24, Z
    2904:	91 81       	ldd	r25, Z+1	; 0x01
    2906:	01 97       	sbiw	r24, 0x01	; 1
    2908:	80 83       	st	Z, r24
    290a:	91 83       	std	Z+1, r25	; 0x01
		
	if (prepare)
    290c:	8a 89       	ldd	r24, Y+18	; 0x12
    290e:	88 23       	and	r24, r24
    2910:	09 f4       	brne	.+2      	; 0x2914 <_ZN16CLaserControlApp7OnTimerEv+0x26>
    2912:	89 c0       	rjmp	.+274    	; 0x2a26 <_ZN16CLaserControlApp7OnTimerEv+0x138>
	{
		if (m_wMillSec == 0)
    2914:	fe 01       	movw	r30, r28
    2916:	e0 5f       	subi	r30, 0xF0	; 240
    2918:	fe 4f       	sbci	r31, 0xFE	; 254
    291a:	80 81       	ld	r24, Z
    291c:	91 81       	ldd	r25, Z+1	; 0x01
    291e:	89 2b       	or	r24, r25
    2920:	09 f0       	breq	.+2      	; 0x2924 <_ZN16CLaserControlApp7OnTimerEv+0x36>
    2922:	79 c0       	rjmp	.+242    	; 0x2a16 <_ZN16CLaserControlApp7OnTimerEv+0x128>
		{			
			if (m_wSeconds == 0)
    2924:	32 97       	sbiw	r30, 0x02	; 2
    2926:	80 81       	ld	r24, Z
    2928:	91 81       	ldd	r25, Z+1	; 0x01
    292a:	89 2b       	or	r24, r25
    292c:	09 f0       	breq	.+2      	; 0x2930 <_ZN16CLaserControlApp7OnTimerEv+0x42>
    292e:	4c c0       	rjmp	.+152    	; 0x29c8 <_ZN16CLaserControlApp7OnTimerEv+0xda>
			{
				if (m_wMinutes == 0)
    2930:	32 97       	sbiw	r30, 0x02	; 2
    2932:	80 81       	ld	r24, Z
    2934:	91 81       	ldd	r25, Z+1	; 0x01
    2936:	89 2b       	or	r24, r25
    2938:	d1 f5       	brne	.+116    	; 0x29ae <_ZN16CLaserControlApp7OnTimerEv+0xc0>
				{
					if (state == APP_WORKPREPARE)
    293a:	8c 85       	ldd	r24, Y+12	; 0x0c
    293c:	9d 85       	ldd	r25, Y+13	; 0x0d
    293e:	02 97       	sbiw	r24, 0x02	; 2
    2940:	a1 f5       	brne	.+104    	; 0x29aa <_ZN16CLaserControlApp7OnTimerEv+0xbc>
					{
						/*player.SoundStart(1000, 1000, 2);
						player.SoundStop();*/
						player.SoundStart(261, 100, 2);
    2942:	22 e0       	ldi	r18, 0x02	; 2
    2944:	44 e6       	ldi	r20, 0x64	; 100
    2946:	50 e0       	ldi	r21, 0x00	; 0
    2948:	65 e0       	ldi	r22, 0x05	; 5
    294a:	71 e0       	ldi	r23, 0x01	; 1
    294c:	82 eb       	ldi	r24, 0xB2	; 178
    294e:	96 e2       	ldi	r25, 0x26	; 38
    2950:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
						player.SoundStop();
    2954:	82 eb       	ldi	r24, 0xB2	; 178
    2956:	96 e2       	ldi	r25, 0x26	; 38
    2958:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
						player.SoundStart(294, 100, 2);
    295c:	22 e0       	ldi	r18, 0x02	; 2
    295e:	44 e6       	ldi	r20, 0x64	; 100
    2960:	50 e0       	ldi	r21, 0x00	; 0
    2962:	66 e2       	ldi	r22, 0x26	; 38
    2964:	71 e0       	ldi	r23, 0x01	; 1
    2966:	82 eb       	ldi	r24, 0xB2	; 178
    2968:	96 e2       	ldi	r25, 0x26	; 38
    296a:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
						player.SoundStop();
    296e:	82 eb       	ldi	r24, 0xB2	; 178
    2970:	96 e2       	ldi	r25, 0x26	; 38
    2972:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
						player.SoundStart(329, 100, 2);
    2976:	22 e0       	ldi	r18, 0x02	; 2
    2978:	44 e6       	ldi	r20, 0x64	; 100
    297a:	50 e0       	ldi	r21, 0x00	; 0
    297c:	69 e4       	ldi	r22, 0x49	; 73
    297e:	71 e0       	ldi	r23, 0x01	; 1
    2980:	82 eb       	ldi	r24, 0xB2	; 178
    2982:	96 e2       	ldi	r25, 0x26	; 38
    2984:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
						player.SoundStop();
    2988:	82 eb       	ldi	r24, 0xB2	; 178
    298a:	96 e2       	ldi	r25, 0x26	; 38
    298c:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
						player.SoundStart(349, 100, 2);
    2990:	22 e0       	ldi	r18, 0x02	; 2
    2992:	44 e6       	ldi	r20, 0x64	; 100
    2994:	50 e0       	ldi	r21, 0x00	; 0
    2996:	6d e5       	ldi	r22, 0x5D	; 93
    2998:	71 e0       	ldi	r23, 0x01	; 1
    299a:	82 eb       	ldi	r24, 0xB2	; 178
    299c:	96 e2       	ldi	r25, 0x26	; 38
    299e:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
						player.SoundStop();
    29a2:	82 eb       	ldi	r24, 0xB2	; 178
    29a4:	96 e2       	ldi	r25, 0x26	; 38
    29a6:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
}

void CLaserControlApp::OnTimeout()
{
	//timer.Stop();
	prepare = false;
    29aa:	1a 8a       	std	Y+18, r1	; 0x12
    29ac:	a3 c0       	rjmp	.+326    	; 0x2af4 <_ZN16CLaserControlApp7OnTimerEv+0x206>
					OnTimeout();
					
					//player.beep(1000, 1000);
					return;
				}
				m_wSeconds = 60;
    29ae:	8c e3       	ldi	r24, 0x3C	; 60
    29b0:	90 e0       	ldi	r25, 0x00	; 0
    29b2:	fe 01       	movw	r30, r28
    29b4:	e2 5f       	subi	r30, 0xF2	; 242
    29b6:	fe 4f       	sbci	r31, 0xFE	; 254
    29b8:	80 83       	st	Z, r24
    29ba:	91 83       	std	Z+1, r25	; 0x01
				m_wMinutes--;
    29bc:	32 97       	sbiw	r30, 0x02	; 2
    29be:	80 81       	ld	r24, Z
    29c0:	91 81       	ldd	r25, Z+1	; 0x01
    29c2:	01 97       	sbiw	r24, 0x01	; 1
    29c4:	80 83       	st	Z, r24
    29c6:	91 83       	std	Z+1, r25	; 0x01
			}
			m_wMillSec = 100; // Every 10 ms
    29c8:	84 e6       	ldi	r24, 0x64	; 100
    29ca:	90 e0       	ldi	r25, 0x00	; 0
    29cc:	fe 01       	movw	r30, r28
    29ce:	e0 5f       	subi	r30, 0xF0	; 240
    29d0:	fe 4f       	sbci	r31, 0xFE	; 254
    29d2:	80 83       	st	Z, r24
    29d4:	91 83       	std	Z+1, r25	; 0x01
			m_wSeconds--;
    29d6:	32 97       	sbiw	r30, 0x02	; 2
    29d8:	80 81       	ld	r24, Z
    29da:	91 81       	ldd	r25, Z+1	; 0x01
    29dc:	01 97       	sbiw	r24, 0x01	; 1
    29de:	80 83       	st	Z, r24
    29e0:	91 83       	std	Z+1, r25	; 0x01
			
			// ****************** Tick sound
			if (state == APP_WORKPREPARE)
    29e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    29e4:	9d 85       	ldd	r25, Y+13	; 0x0d
    29e6:	02 97       	sbiw	r24, 0x02	; 2
    29e8:	b1 f4       	brne	.+44     	; 0x2a16 <_ZN16CLaserControlApp7OnTimerEv+0x128>
			{
				if (m_wMinutes == 0 && m_wSeconds < 10 && state == APP_WORKPREPARE)
    29ea:	32 97       	sbiw	r30, 0x02	; 2
    29ec:	80 81       	ld	r24, Z
    29ee:	91 81       	ldd	r25, Z+1	; 0x01
    29f0:	89 2b       	or	r24, r25
    29f2:	09 f0       	breq	.+2      	; 0x29f6 <_ZN16CLaserControlApp7OnTimerEv+0x108>
    29f4:	4c c0       	rjmp	.+152    	; 0x2a8e <_ZN16CLaserControlApp7OnTimerEv+0x1a0>
    29f6:	32 96       	adiw	r30, 0x02	; 2
    29f8:	80 81       	ld	r24, Z
    29fa:	91 81       	ldd	r25, Z+1	; 0x01
    29fc:	0a 97       	sbiw	r24, 0x0a	; 10
    29fe:	08 f4       	brcc	.+2      	; 0x2a02 <_ZN16CLaserControlApp7OnTimerEv+0x114>
    2a00:	54 c0       	rjmp	.+168    	; 0x2aaa <_ZN16CLaserControlApp7OnTimerEv+0x1bc>
    2a02:	45 c0       	rjmp	.+138    	; 0x2a8e <_ZN16CLaserControlApp7OnTimerEv+0x1a0>
				{
					if (m_wMinutes == 0 && m_wSeconds < 5)
    2a04:	fe 01       	movw	r30, r28
    2a06:	e2 5f       	subi	r30, 0xF2	; 242
    2a08:	fe 4f       	sbci	r31, 0xFE	; 254
    2a0a:	80 81       	ld	r24, Z
    2a0c:	91 81       	ldd	r25, Z+1	; 0x01
    2a0e:	05 97       	sbiw	r24, 0x05	; 5
    2a10:	08 f4       	brcc	.+2      	; 0x2a14 <_ZN16CLaserControlApp7OnTimerEv+0x126>
    2a12:	54 c0       	rjmp	.+168    	; 0x2abc <_ZN16CLaserControlApp7OnTimerEv+0x1ce>
    2a14:	61 c0       	rjmp	.+194    	; 0x2ad8 <_ZN16CLaserControlApp7OnTimerEv+0x1ea>
					//player.beep(1000, 25);
					}
			}
			// ************************************
		}
		m_wMillSec-=10;
    2a16:	fe 01       	movw	r30, r28
    2a18:	e0 5f       	subi	r30, 0xF0	; 240
    2a1a:	fe 4f       	sbci	r31, 0xFE	; 254
    2a1c:	80 81       	ld	r24, Z
    2a1e:	91 81       	ldd	r25, Z+1	; 0x01
    2a20:	0a 97       	sbiw	r24, 0x0a	; 10
    2a22:	80 83       	st	Z, r24
    2a24:	91 83       	std	Z+1, r25	; 0x01
	}
	
	// Flow sensor
	{
		static uint16_t millsec = 100;
		if (millsec == 0)
    2a26:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <_ZZN16CLaserControlApp7OnTimerEvE7millsec>
    2a2a:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <_ZZN16CLaserControlApp7OnTimerEvE7millsec+0x1>
    2a2e:	89 2b       	or	r24, r25
    2a30:	21 f5       	brne	.+72     	; 0x2a7a <_ZN16CLaserControlApp7OnTimerEv+0x18c>
		{
			millsec = 100;
    2a32:	84 e6       	ldi	r24, 0x64	; 100
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <_ZZN16CLaserControlApp7OnTimerEvE7millsec>
    2a3a:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <_ZZN16CLaserControlApp7OnTimerEvE7millsec+0x1>
			
			m_wFlow = (TCC1.CNT * 73) / 104; // ((cnt * 10) / 8) * (7,3 / 13)
    2a3e:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x700860>
    2a42:	90 91 61 08 	lds	r25, 0x0861	; 0x800861 <__TEXT_REGION_LENGTH__+0x700861>
    2a46:	49 e4       	ldi	r20, 0x49	; 73
    2a48:	48 9f       	mul	r20, r24
    2a4a:	90 01       	movw	r18, r0
    2a4c:	49 9f       	mul	r20, r25
    2a4e:	30 0d       	add	r19, r0
    2a50:	11 24       	eor	r1, r1
    2a52:	a5 ec       	ldi	r26, 0xC5	; 197
    2a54:	be e4       	ldi	r27, 0x4E	; 78
    2a56:	0e 94 b4 39 	call	0x7368	; 0x7368 <__umulhisi3>
    2a5a:	96 95       	lsr	r25
    2a5c:	87 95       	ror	r24
    2a5e:	92 95       	swap	r25
    2a60:	82 95       	swap	r24
    2a62:	8f 70       	andi	r24, 0x0F	; 15
    2a64:	89 27       	eor	r24, r25
    2a66:	9f 70       	andi	r25, 0x0F	; 15
    2a68:	89 27       	eor	r24, r25
    2a6a:	ca 5e       	subi	r28, 0xEA	; 234
    2a6c:	de 4f       	sbci	r29, 0xFE	; 254
    2a6e:	88 83       	st	Y, r24
    2a70:	99 83       	std	Y+1, r25	; 0x01
			flowtimer.Reset();
    2a72:	87 ee       	ldi	r24, 0xE7	; 231
    2a74:	96 e2       	ldi	r25, 0x26	; 38
    2a76:	0e 94 32 35 	call	0x6a64	; 0x6a64 <_ZN8CTimerC15ResetEv>
		}
		millsec-=10;
    2a7a:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <_ZZN16CLaserControlApp7OnTimerEvE7millsec>
    2a7e:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <_ZZN16CLaserControlApp7OnTimerEvE7millsec+0x1>
    2a82:	0a 97       	sbiw	r24, 0x0a	; 10
    2a84:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <_ZZN16CLaserControlApp7OnTimerEvE7millsec>
    2a88:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <_ZZN16CLaserControlApp7OnTimerEvE7millsec+0x1>
    2a8c:	33 c0       	rjmp	.+102    	; 0x2af4 <_ZN16CLaserControlApp7OnTimerEv+0x206>
						//player.beep(1000, 50);
					}
				}
				else
				{
					player.SoundStart(1000, 25, 2);
    2a8e:	22 e0       	ldi	r18, 0x02	; 2
    2a90:	49 e1       	ldi	r20, 0x19	; 25
    2a92:	50 e0       	ldi	r21, 0x00	; 0
    2a94:	68 ee       	ldi	r22, 0xE8	; 232
    2a96:	73 e0       	ldi	r23, 0x03	; 3
    2a98:	82 eb       	ldi	r24, 0xB2	; 178
    2a9a:	96 e2       	ldi	r25, 0x26	; 38
    2a9c:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
					player.SoundStop();
    2aa0:	82 eb       	ldi	r24, 0xB2	; 178
    2aa2:	96 e2       	ldi	r25, 0x26	; 38
    2aa4:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
    2aa8:	b6 cf       	rjmp	.-148    	; 0x2a16 <_ZN16CLaserControlApp7OnTimerEv+0x128>
			// ****************** Tick sound
			if (state == APP_WORKPREPARE)
			{
				if (m_wMinutes == 0 && m_wSeconds < 10 && state == APP_WORKPREPARE)
				{
					if (m_wMinutes == 0 && m_wSeconds < 5)
    2aaa:	fe 01       	movw	r30, r28
    2aac:	e4 5f       	subi	r30, 0xF4	; 244
    2aae:	fe 4f       	sbci	r31, 0xFE	; 254
    2ab0:	80 81       	ld	r24, Z
    2ab2:	91 81       	ldd	r25, Z+1	; 0x01
    2ab4:	89 2b       	or	r24, r25
    2ab6:	09 f4       	brne	.+2      	; 0x2aba <_ZN16CLaserControlApp7OnTimerEv+0x1cc>
    2ab8:	a5 cf       	rjmp	.-182    	; 0x2a04 <_ZN16CLaserControlApp7OnTimerEv+0x116>
    2aba:	0e c0       	rjmp	.+28     	; 0x2ad8 <_ZN16CLaserControlApp7OnTimerEv+0x1ea>
					{
						player.SoundStart(1000, 100, 2);
    2abc:	22 e0       	ldi	r18, 0x02	; 2
    2abe:	44 e6       	ldi	r20, 0x64	; 100
    2ac0:	50 e0       	ldi	r21, 0x00	; 0
    2ac2:	68 ee       	ldi	r22, 0xE8	; 232
    2ac4:	73 e0       	ldi	r23, 0x03	; 3
    2ac6:	82 eb       	ldi	r24, 0xB2	; 178
    2ac8:	96 e2       	ldi	r25, 0x26	; 38
    2aca:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
						player.SoundStop();
    2ace:	82 eb       	ldi	r24, 0xB2	; 178
    2ad0:	96 e2       	ldi	r25, 0x26	; 38
    2ad2:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
    2ad6:	9f cf       	rjmp	.-194    	; 0x2a16 <_ZN16CLaserControlApp7OnTimerEv+0x128>
						//player.beep(1000, 100);
					}
					else
					{
						player.SoundStart(1000, 50, 2);
    2ad8:	22 e0       	ldi	r18, 0x02	; 2
    2ada:	42 e3       	ldi	r20, 0x32	; 50
    2adc:	50 e0       	ldi	r21, 0x00	; 0
    2ade:	68 ee       	ldi	r22, 0xE8	; 232
    2ae0:	73 e0       	ldi	r23, 0x03	; 3
    2ae2:	82 eb       	ldi	r24, 0xB2	; 178
    2ae4:	96 e2       	ldi	r25, 0x26	; 38
    2ae6:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
						player.SoundStop();
    2aea:	82 eb       	ldi	r24, 0xB2	; 178
    2aec:	96 e2       	ldi	r25, 0x26	; 38
    2aee:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
    2af2:	91 cf       	rjmp	.-222    	; 0x2a16 <_ZN16CLaserControlApp7OnTimerEv+0x128>
			m_wFlow = (TCC1.CNT * 73) / 104; // ((cnt * 10) / 8) * (7,3 / 13)
			flowtimer.Reset();
		}
		millsec-=10;
	}
}
    2af4:	df 91       	pop	r29
    2af6:	cf 91       	pop	r28
    2af8:	08 95       	ret

00002afa <_ZN16CLaserControlApp13OnTimerStaticEPv>:
}

void CLaserControlApp::OnTimerStatic(void* sender)
{
	CLaserControlApp* app = (CLaserControlApp*)sender;
	app->OnTimer();
    2afa:	0e 94 77 14 	call	0x28ee	; 0x28ee <_ZN16CLaserControlApp7OnTimerEv>
    2afe:	08 95       	ret

00002b00 <_ZN16CLaserControlApp6OnINT0Ev>:
	laserBoard.BLUOn();
#endif
}

void CLaserControlApp::OnINT0()
{
    2b00:	0f 93       	push	r16
    2b02:	1f 93       	push	r17
    2b04:	cf 93       	push	r28
    2b06:	df 93       	push	r29
	static bool isstarted = false;
	
	switch (state)
    2b08:	fc 01       	movw	r30, r24
    2b0a:	24 85       	ldd	r18, Z+12	; 0x0c
    2b0c:	35 85       	ldd	r19, Z+13	; 0x0d
    2b0e:	20 31       	cpi	r18, 0x10	; 16
    2b10:	31 05       	cpc	r19, r1
    2b12:	21 f0       	breq	.+8      	; 0x2b1c <_ZN16CLaserControlApp6OnINT0Ev+0x1c>
    2b14:	20 32       	cpi	r18, 0x20	; 32
    2b16:	31 05       	cpc	r19, r1
    2b18:	09 f0       	breq	.+2      	; 0x2b1c <_ZN16CLaserControlApp6OnINT0Ev+0x1c>
    2b1a:	9f c0       	rjmp	.+318    	; 0x2c5a <_ZN16CLaserControlApp6OnINT0Ev+0x15a>
    2b1c:	ec 01       	movw	r28, r24
	{
		case APP_WORKLIGHT:
		case APP_WORKPOWERON:
		{
			if ((PORTC.IN & 0x01) == 0)
    2b1e:	80 91 48 06 	lds	r24, 0x0648	; 0x800648 <__TEXT_REGION_LENGTH__+0x700648>
    2b22:	80 fd       	sbrc	r24, 0
    2b24:	84 c0       	rjmp	.+264    	; 0x2c2e <_ZN16CLaserControlApp6OnINT0Ev+0x12e>
			{				
				if ((!isstarted) && (m_wDeadTime == 0))
    2b26:	80 91 a0 23 	lds	r24, 0x23A0	; 0x8023a0 <__data_end>
    2b2a:	81 11       	cpse	r24, r1
    2b2c:	96 c0       	rjmp	.+300    	; 0x2c5a <_ZN16CLaserControlApp6OnINT0Ev+0x15a>
    2b2e:	fe 01       	movw	r30, r28
    2b30:	e8 5e       	subi	r30, 0xE8	; 232
    2b32:	fe 4f       	sbci	r31, 0xFE	; 254
    2b34:	80 81       	ld	r24, Z
    2b36:	91 81       	ldd	r25, Z+1	; 0x01
    2b38:	89 2b       	or	r24, r25
    2b3a:	09 f4       	brne	.+2      	; 0x2b3e <_ZN16CLaserControlApp6OnINT0Ev+0x3e>
    2b3c:	89 c0       	rjmp	.+274    	; 0x2c50 <_ZN16CLaserControlApp6OnINT0Ev+0x150>
    2b3e:	8d c0       	rjmp	.+282    	; 0x2c5a <_ZN16CLaserControlApp6OnINT0Ev+0x15a>
				{
					if (Profile == PROFILE_SINGLE)
					{
						m_wDeadTime = 10;
    2b40:	8a e0       	ldi	r24, 0x0A	; 10
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	fe 01       	movw	r30, r28
    2b46:	e8 5e       	subi	r30, 0xE8	; 232
    2b48:	fe 4f       	sbci	r31, 0xFE	; 254
    2b4a:	80 83       	st	Z, r24
    2b4c:	91 83       	std	Z+1, r25	; 0x01
						
						laserCounter++;
    2b4e:	fe 97       	sbiw	r30, 0x3e	; 62
    2b50:	80 81       	ld	r24, Z
    2b52:	91 81       	ldd	r25, Z+1	; 0x01
    2b54:	a2 81       	ldd	r26, Z+2	; 0x02
    2b56:	b3 81       	ldd	r27, Z+3	; 0x03
    2b58:	01 96       	adiw	r24, 0x01	; 1
    2b5a:	a1 1d       	adc	r26, r1
    2b5c:	b1 1d       	adc	r27, r1
    2b5e:	80 83       	st	Z, r24
    2b60:	91 83       	std	Z+1, r25	; 0x01
    2b62:	a2 83       	std	Z+2, r26	; 0x02
    2b64:	b3 83       	std	Z+3, r27	; 0x03
						laserCounterSession++;
    2b66:	34 96       	adiw	r30, 0x04	; 4
    2b68:	80 81       	ld	r24, Z
    2b6a:	91 81       	ldd	r25, Z+1	; 0x01
    2b6c:	a2 81       	ldd	r26, Z+2	; 0x02
    2b6e:	b3 81       	ldd	r27, Z+3	; 0x03
    2b70:	01 96       	adiw	r24, 0x01	; 1
    2b72:	a1 1d       	adc	r26, r1
    2b74:	b1 1d       	adc	r27, r1
    2b76:	80 83       	st	Z, r24
    2b78:	91 83       	std	Z+1, r25	; 0x01
    2b7a:	a2 83       	std	Z+2, r26	; 0x02
    2b7c:	b3 83       	std	Z+3, r27	; 0x03
						
						if (laserTimerDutyCyclems > 100)
    2b7e:	38 97       	sbiw	r30, 0x08	; 8
    2b80:	40 81       	ld	r20, Z
    2b82:	51 81       	ldd	r21, Z+1	; 0x01
    2b84:	45 36       	cpi	r20, 0x65	; 101
    2b86:	51 05       	cpc	r21, r1
    2b88:	50 f0       	brcs	.+20     	; 0x2b9e <_ZN16CLaserControlApp6OnINT0Ev+0x9e>
							player.SoundStart(500, 50, 0);
    2b8a:	20 e0       	ldi	r18, 0x00	; 0
    2b8c:	42 e3       	ldi	r20, 0x32	; 50
    2b8e:	50 e0       	ldi	r21, 0x00	; 0
    2b90:	64 ef       	ldi	r22, 0xF4	; 244
    2b92:	71 e0       	ldi	r23, 0x01	; 1
    2b94:	82 eb       	ldi	r24, 0xB2	; 178
    2b96:	96 e2       	ldi	r25, 0x26	; 38
    2b98:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
    2b9c:	09 c0       	rjmp	.+18     	; 0x2bb0 <_ZN16CLaserControlApp6OnINT0Ev+0xb0>
						else
							player.SoundStart(500, laserTimerDutyCyclems/2, 0);
    2b9e:	56 95       	lsr	r21
    2ba0:	47 95       	ror	r20
    2ba2:	20 e0       	ldi	r18, 0x00	; 0
    2ba4:	64 ef       	ldi	r22, 0xF4	; 244
    2ba6:	71 e0       	ldi	r23, 0x01	; 1
    2ba8:	82 eb       	ldi	r24, 0xB2	; 178
    2baa:	96 e2       	ldi	r25, 0x26	; 38
    2bac:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN12CSoundPlayer10SoundStartEjjh>
						player.SoundStop();
    2bb0:	82 eb       	ldi	r24, 0xB2	; 178
    2bb2:	96 e2       	ldi	r25, 0x26	; 38
    2bb4:	0e 94 0c 34 	call	0x6818	; 0x6818 <_ZN12CSoundPlayer9SoundStopEv>
					}
						
					if (laserTimerDutyCycle != 0)
    2bb8:	fe 01       	movw	r30, r28
    2bba:	ec 52       	subi	r30, 0x2C	; 44
    2bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbe:	80 81       	ld	r24, Z
    2bc0:	91 81       	ldd	r25, Z+1	; 0x01
    2bc2:	00 97       	sbiw	r24, 0x00	; 0
    2bc4:	29 f0       	breq	.+10     	; 0x2bd0 <_ZN16CLaserControlApp6OnINT0Ev+0xd0>
						TCF0.CNT = laserTimerDutyCycle - 1;
    2bc6:	01 97       	sbiw	r24, 0x01	; 1
    2bc8:	80 93 20 0b 	sts	0x0B20, r24	; 0x800b20 <__TEXT_REGION_LENGTH__+0x700b20>
    2bcc:	90 93 21 0b 	sts	0x0B21, r25	; 0x800b21 <__TEXT_REGION_LENGTH__+0x700b21>
						
					laserTimer.SetCOMPA(laserTimerDutyCycle);
    2bd0:	8e 01       	movw	r16, r28
    2bd2:	0c 52       	subi	r16, 0x2C	; 44
    2bd4:	1f 4f       	sbci	r17, 0xFF	; 255
    2bd6:	f8 01       	movw	r30, r16
    2bd8:	60 81       	ld	r22, Z
    2bda:	71 81       	ldd	r23, Z+1	; 0x01
    2bdc:	8a ee       	ldi	r24, 0xEA	; 234
    2bde:	96 e2       	ldi	r25, 0x26	; 38
    2be0:	0e 94 84 37 	call	0x6f08	; 0x6f08 <_ZN7CTimerF8SetCOMPAEj>
					laserTimer.SetCOMPB(laserTimerDutyCycle);
    2be4:	f8 01       	movw	r30, r16
    2be6:	60 81       	ld	r22, Z
    2be8:	71 81       	ldd	r23, Z+1	; 0x01
    2bea:	8a ee       	ldi	r24, 0xEA	; 234
    2bec:	96 e2       	ldi	r25, 0x26	; 38
    2bee:	0e 94 89 37 	call	0x6f12	; 0x6f12 <_ZN7CTimerF8SetCOMPBEj>
					laserTimer.Start(laserTimerPeriod);
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	ee 52       	subi	r30, 0x2E	; 46
    2bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf8:	60 81       	ld	r22, Z
    2bfa:	71 81       	ldd	r23, Z+1	; 0x01
    2bfc:	8a ee       	ldi	r24, 0xEA	; 234
    2bfe:	96 e2       	ldi	r25, 0x26	; 38
    2c00:	0e 94 4c 37 	call	0x6e98	; 0x6e98 <_ZN7CTimerF5StartEj>
					
					if (Profile == PROFILE_SINGLE)
    2c04:	8e 85       	ldd	r24, Y+14	; 0x0e
    2c06:	81 30       	cpi	r24, 0x01	; 1
    2c08:	49 f4       	brne	.+18     	; 0x2c1c <_ZN16CLaserControlApp6OnINT0Ev+0x11c>
    2c0a:	ff ef       	ldi	r31, 0xFF	; 255
    2c0c:	27 e8       	ldi	r18, 0x87	; 135
    2c0e:	83 e1       	ldi	r24, 0x13	; 19
    2c10:	f1 50       	subi	r31, 0x01	; 1
    2c12:	20 40       	sbci	r18, 0x00	; 0
    2c14:	80 40       	sbci	r24, 0x00	; 0
    2c16:	e1 f7       	brne	.-8      	; 0x2c10 <_ZN16CLaserControlApp6OnINT0Ev+0x110>
    2c18:	00 c0       	rjmp	.+0      	; 0x2c1a <_ZN16CLaserControlApp6OnINT0Ev+0x11a>
    2c1a:	00 00       	nop
						_delay_ms(200);
					
					PORTC.INTFLAGS &= ~0x01;
    2c1c:	e0 e4       	ldi	r30, 0x40	; 64
    2c1e:	f6 e0       	ldi	r31, 0x06	; 6
    2c20:	84 85       	ldd	r24, Z+12	; 0x0c
    2c22:	8e 7f       	andi	r24, 0xFE	; 254
    2c24:	84 87       	std	Z+12, r24	; 0x0c
					
					isstarted = true;
    2c26:	81 e0       	ldi	r24, 0x01	; 1
    2c28:	80 93 a0 23 	sts	0x23A0, r24	; 0x8023a0 <__data_end>
    2c2c:	16 c0       	rjmp	.+44     	; 0x2c5a <_ZN16CLaserControlApp6OnINT0Ev+0x15a>
					state = APP_WORKLIGHT;
				}*/
			}
			else
			{
				isstarted = false;
    2c2e:	10 92 a0 23 	sts	0x23A0, r1	; 0x8023a0 <__data_end>
				
				laserTimer.Stop();
    2c32:	8a ee       	ldi	r24, 0xEA	; 234
    2c34:	96 e2       	ldi	r25, 0x26	; 38
    2c36:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <_ZN7CTimerF4StopEv>
				laserTimer.ChannelSet(TIMER_CHANNEL_A);
    2c3a:	60 e1       	ldi	r22, 0x10	; 16
    2c3c:	8a ee       	ldi	r24, 0xEA	; 234
    2c3e:	96 e2       	ldi	r25, 0x26	; 38
    2c40:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
				laserTimer.ChannelSet(TIMER_CHANNEL_B);
    2c44:	60 e2       	ldi	r22, 0x20	; 32
    2c46:	8a ee       	ldi	r24, 0xEA	; 234
    2c48:	96 e2       	ldi	r25, 0x26	; 38
    2c4a:	0e 94 6e 37 	call	0x6edc	; 0x6edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>
    2c4e:	05 c0       	rjmp	.+10     	; 0x2c5a <_ZN16CLaserControlApp6OnINT0Ev+0x15a>
		{
			if ((PORTC.IN & 0x01) == 0)
			{				
				if ((!isstarted) && (m_wDeadTime == 0))
				{
					if (Profile == PROFILE_SINGLE)
    2c50:	8e 85       	ldd	r24, Y+14	; 0x0e
    2c52:	81 30       	cpi	r24, 0x01	; 1
    2c54:	09 f0       	breq	.+2      	; 0x2c58 <_ZN16CLaserControlApp6OnINT0Ev+0x158>
    2c56:	b0 cf       	rjmp	.-160    	; 0x2bb8 <_ZN16CLaserControlApp6OnINT0Ev+0xb8>
    2c58:	73 cf       	rjmp	.-282    	; 0x2b40 <_ZN16CLaserControlApp6OnINT0Ev+0x40>
		}
		break;
		default:
		break;
	}
}
    2c5a:	df 91       	pop	r29
    2c5c:	cf 91       	pop	r28
    2c5e:	1f 91       	pop	r17
    2c60:	0f 91       	pop	r16
    2c62:	08 95       	ret

00002c64 <_ZN16CLaserControlApp12OnINT0StaticEPv>:
}

void CLaserControlApp::OnINT0Static(void* sender)
{
	CLaserControlApp* app = (CLaserControlApp*)sender;
	app->OnINT0();
    2c64:	0e 94 80 15 	call	0x2b00	; 0x2b00 <_ZN16CLaserControlApp6OnINT0Ev>
    2c68:	08 95       	ret

00002c6a <_Z11ConvertDataPvS_jj>:
 */ 

#include <stdint.h>

void ConvertData(void* dst, void* src, uint16_t size, uint16_t offset = 0)
{
    2c6a:	cf 92       	push	r12
    2c6c:	df 92       	push	r13
    2c6e:	ef 92       	push	r14
    2c70:	ff 92       	push	r15
    2c72:	0f 93       	push	r16
    2c74:	1f 93       	push	r17
    2c76:	cf 93       	push	r28
    2c78:	df 93       	push	r29
    2c7a:	7c 01       	movw	r14, r24
    2c7c:	8a 01       	movw	r16, r20
	
	// swap bytes in words
	/*for (uint16_t i = 0; i < length; i++)
		dest[(i + offset) % length] = swap(source[i]);*/
		
	for (uint16_t i = 0; i < size; i++)
    2c7e:	41 15       	cp	r20, r1
    2c80:	51 05       	cpc	r21, r1
    2c82:	b1 f0       	breq	.+44     	; 0x2cb0 <_Z11ConvertDataPvS_jj+0x46>
    2c84:	6b 01       	movw	r12, r22
    2c86:	c4 0e       	add	r12, r20
    2c88:	d5 1e       	adc	r13, r21
    2c8a:	eb 01       	movw	r28, r22
    2c8c:	26 1b       	sub	r18, r22
    2c8e:	37 0b       	sbc	r19, r23
    2c90:	c9 01       	movw	r24, r18
    2c92:	8c 0f       	add	r24, r28
    2c94:	9d 1f       	adc	r25, r29
		((uint8_t*)dst)[((i + offset) % size) ^ 1] = ((uint8_t*)src)[i];
    2c96:	b8 01       	movw	r22, r16
    2c98:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    2c9c:	fc 01       	movw	r30, r24
    2c9e:	41 e0       	ldi	r20, 0x01	; 1
    2ca0:	e4 27       	eor	r30, r20
    2ca2:	ee 0d       	add	r30, r14
    2ca4:	ff 1d       	adc	r31, r15
    2ca6:	89 91       	ld	r24, Y+
    2ca8:	80 83       	st	Z, r24
	
	// swap bytes in words
	/*for (uint16_t i = 0; i < length; i++)
		dest[(i + offset) % length] = swap(source[i]);*/
		
	for (uint16_t i = 0; i < size; i++)
    2caa:	cc 15       	cp	r28, r12
    2cac:	dd 05       	cpc	r29, r13
    2cae:	81 f7       	brne	.-32     	; 0x2c90 <_Z11ConvertDataPvS_jj+0x26>
		((uint8_t*)dst)[((i + offset) % size) ^ 1] = ((uint8_t*)src)[i];
}
    2cb0:	df 91       	pop	r29
    2cb2:	cf 91       	pop	r28
    2cb4:	1f 91       	pop	r17
    2cb6:	0f 91       	pop	r16
    2cb8:	ff 90       	pop	r15
    2cba:	ef 90       	pop	r14
    2cbc:	df 90       	pop	r13
    2cbe:	cf 90       	pop	r12
    2cc0:	08 95       	ret

00002cc2 <_Z3minjj>:

uint16_t min(uint16_t x, uint16_t y)
{
    2cc2:	68 17       	cp	r22, r24
    2cc4:	79 07       	cpc	r23, r25
    2cc6:	08 f4       	brcc	.+2      	; 0x2cca <_Z3minjj+0x8>
    2cc8:	cb 01       	movw	r24, r22
	if (x < y)
		return x;
	else
		return y;
}
    2cca:	08 95       	ret

00002ccc <_Z3maxjj>:

uint16_t max(uint16_t x, uint16_t y)
{
    2ccc:	86 17       	cp	r24, r22
    2cce:	97 07       	cpc	r25, r23
    2cd0:	08 f4       	brcc	.+2      	; 0x2cd4 <_Z3maxjj+0x8>
    2cd2:	cb 01       	movw	r24, r22
	if (x > y)
		return x;
	else
		return y;
}
    2cd4:	08 95       	ret

00002cd6 <_Z4swapj>:

uint16_t swap(uint16_t data)
{
	return (data >> 8) | (data << 8);
}
    2cd6:	98 27       	eor	r25, r24
    2cd8:	89 27       	eor	r24, r25
    2cda:	98 27       	eor	r25, r24
    2cdc:	08 95       	ret

00002cde <_Z6swap32m>:

uint32_t swap32(uint32_t data)
{
	return ((data & 0xffff) << 16) | ((data & 0xffff0000) >> 16);
    2cde:	9b 01       	movw	r18, r22
    2ce0:	bc 01       	movw	r22, r24
    2ce2:	c9 01       	movw	r24, r18
}
    2ce4:	08 95       	ret

00002ce6 <_ZN4CSPIC1Ev>:
	SPIE.DATA = buffer[--rx_pos];
}

void CSPI::SendByte(uint8_t data)
{
	SPIE.DATA = data;
    2ce6:	08 95       	ret

00002ce8 <_ZN4CSPID1Ev>:
    2ce8:	08 95       	ret

00002cea <_ZN4CSPI10InitializeEb19SPI_DATA_ORDER_ENUM13SPI_MODE_ENUMb18SPI_PRESCALER_enum>:
    2cea:	ef 92       	push	r14
    2cec:	0f 93       	push	r16
    2cee:	1f 93       	push	r17
    2cf0:	cf 93       	push	r28
    2cf2:	df 93       	push	r29
    2cf4:	ec 01       	movw	r28, r24
    2cf6:	e0 e8       	ldi	r30, 0x80	; 128
    2cf8:	f6 e0       	ldi	r31, 0x06	; 6
    2cfa:	90 eb       	ldi	r25, 0xB0	; 176
    2cfc:	91 83       	std	Z+1, r25	; 0x01
    2cfe:	80 ec       	ldi	r24, 0xC0	; 192
    2d00:	84 8b       	std	Z+20, r24	; 0x14
    2d02:	85 8b       	std	Z+21, r24	; 0x15
    2d04:	87 8b       	std	Z+23, r24	; 0x17
    2d06:	95 83       	std	Z+5, r25	; 0x05
    2d08:	61 11       	cpse	r22, r1
    2d0a:	02 c0       	rjmp	.+4      	; 0x2d10 <_ZN4CSPI10InitializeEb19SPI_DATA_ORDER_ENUM13SPI_MODE_ENUMb18SPI_PRESCALER_enum+0x26>
    2d0c:	80 e4       	ldi	r24, 0x40	; 64
    2d0e:	01 c0       	rjmp	.+2      	; 0x2d12 <_ZN4CSPI10InitializeEb19SPI_DATA_ORDER_ENUM13SPI_MODE_ENUMb18SPI_PRESCALER_enum+0x28>
    2d10:	80 e5       	ldi	r24, 0x50	; 80
    2d12:	01 11       	cpse	r16, r1
    2d14:	02 c0       	rjmp	.+4      	; 0x2d1a <_ZN4CSPI10InitializeEb19SPI_DATA_ORDER_ENUM13SPI_MODE_ENUMb18SPI_PRESCALER_enum+0x30>
    2d16:	30 e0       	ldi	r19, 0x00	; 0
    2d18:	01 c0       	rjmp	.+2      	; 0x2d1c <_ZN4CSPI10InitializeEb19SPI_DATA_ORDER_ENUM13SPI_MODE_ENUMb18SPI_PRESCALER_enum+0x32>
    2d1a:	30 e8       	ldi	r19, 0x80	; 128
    2d1c:	41 11       	cpse	r20, r1
    2d1e:	02 c0       	rjmp	.+4      	; 0x2d24 <_ZN4CSPI10InitializeEb19SPI_DATA_ORDER_ENUM13SPI_MODE_ENUMb18SPI_PRESCALER_enum+0x3a>
    2d20:	90 e0       	ldi	r25, 0x00	; 0
    2d22:	01 c0       	rjmp	.+2      	; 0x2d26 <_ZN4CSPI10InitializeEb19SPI_DATA_ORDER_ENUM13SPI_MODE_ENUMb18SPI_PRESCALER_enum+0x3c>
    2d24:	90 e2       	ldi	r25, 0x20	; 32
    2d26:	22 0f       	add	r18, r18
    2d28:	22 0f       	add	r18, r18
    2d2a:	e2 2a       	or	r14, r18
    2d2c:	e8 2a       	or	r14, r24
    2d2e:	e3 2a       	or	r14, r19
    2d30:	e9 2a       	or	r14, r25
    2d32:	00 ec       	ldi	r16, 0xC0	; 192
    2d34:	1a e0       	ldi	r17, 0x0A	; 10
    2d36:	f8 01       	movw	r30, r16
    2d38:	e0 82       	st	Z, r14
    2d3a:	80 e0       	ldi	r24, 0x00	; 0
    2d3c:	91 e0       	ldi	r25, 0x01	; 1
    2d3e:	0e 94 ce 39 	call	0x739c	; 0x739c <malloc>
    2d42:	88 83       	st	Y, r24
    2d44:	99 83       	std	Y+1, r25	; 0x01
    2d46:	81 e0       	ldi	r24, 0x01	; 1
    2d48:	f8 01       	movw	r30, r16
    2d4a:	81 83       	std	Z+1, r24	; 0x01
    2d4c:	8e ee       	ldi	r24, 0xEE	; 238
    2d4e:	96 e1       	ldi	r25, 0x16	; 22
    2d50:	80 93 14 24 	sts	0x2414, r24	; 0x802414 <InterruptFuncTable+0x72>
    2d54:	90 93 15 24 	sts	0x2415, r25	; 0x802415 <InterruptFuncTable+0x73>
    2d58:	c0 93 0a 25 	sts	0x250A, r28	; 0x80250a <InterruptSenderTable+0x72>
    2d5c:	d0 93 0b 25 	sts	0x250B, r29	; 0x80250b <InterruptSenderTable+0x73>
    2d60:	df 91       	pop	r29
    2d62:	cf 91       	pop	r28
    2d64:	1f 91       	pop	r17
    2d66:	0f 91       	pop	r16
    2d68:	ef 90       	pop	r14
    2d6a:	08 95       	ret

00002d6c <_ZN4CSPI4SendEPhj>:
    2d6c:	cf 93       	push	r28
    2d6e:	df 93       	push	r29
    2d70:	ec 01       	movw	r28, r24
    2d72:	4a 83       	std	Y+2, r20	; 0x02
    2d74:	5b 83       	std	Y+3, r21	; 0x03
    2d76:	4c 83       	std	Y+4, r20	; 0x04
    2d78:	5d 83       	std	Y+5, r21	; 0x05
    2d7a:	88 81       	ld	r24, Y
    2d7c:	99 81       	ldd	r25, Y+1	; 0x01
    2d7e:	0e 94 fb 3a 	call	0x75f6	; 0x75f6 <memcpy>
    2d82:	80 e1       	ldi	r24, 0x10	; 16
    2d84:	80 93 86 06 	sts	0x0686, r24	; 0x800686 <__TEXT_REGION_LENGTH__+0x700686>
    2d88:	88 81       	ld	r24, Y
    2d8a:	99 81       	ldd	r25, Y+1	; 0x01
    2d8c:	4a 81       	ldd	r20, Y+2	; 0x02
    2d8e:	5b 81       	ldd	r21, Y+3	; 0x03
    2d90:	9a 01       	movw	r18, r20
    2d92:	21 50       	subi	r18, 0x01	; 1
    2d94:	31 09       	sbc	r19, r1
    2d96:	2a 83       	std	Y+2, r18	; 0x02
    2d98:	3b 83       	std	Y+3, r19	; 0x03
    2d9a:	fc 01       	movw	r30, r24
    2d9c:	e2 0f       	add	r30, r18
    2d9e:	f3 1f       	adc	r31, r19
    2da0:	80 81       	ld	r24, Z
    2da2:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <__TEXT_REGION_LENGTH__+0x700ac3>
    2da6:	df 91       	pop	r29
    2da8:	cf 91       	pop	r28
    2daa:	08 95       	ret

00002dac <_ZN4CSPI10OnTransmitEv>:
	CSPI* spi = (CSPI*)sender;
	spi->OnTransmit();
}

void CSPI::OnTransmit()
{
    2dac:	fc 01       	movw	r30, r24
	if (rx_pos != 0)
    2dae:	82 81       	ldd	r24, Z+2	; 0x02
    2db0:	93 81       	ldd	r25, Z+3	; 0x03
    2db2:	89 2b       	or	r24, r25
    2db4:	79 f0       	breq	.+30     	; 0x2dd4 <_ZN4CSPI10OnTransmitEv+0x28>
		SPIE.DATA = buffer[--rx_pos];
    2db6:	40 81       	ld	r20, Z
    2db8:	51 81       	ldd	r21, Z+1	; 0x01
    2dba:	22 81       	ldd	r18, Z+2	; 0x02
    2dbc:	33 81       	ldd	r19, Z+3	; 0x03
    2dbe:	c9 01       	movw	r24, r18
    2dc0:	01 97       	sbiw	r24, 0x01	; 1
    2dc2:	82 83       	std	Z+2, r24	; 0x02
    2dc4:	93 83       	std	Z+3, r25	; 0x03
    2dc6:	fa 01       	movw	r30, r20
    2dc8:	e8 0f       	add	r30, r24
    2dca:	f9 1f       	adc	r31, r25
    2dcc:	80 81       	ld	r24, Z
    2dce:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <__TEXT_REGION_LENGTH__+0x700ac3>
    2dd2:	08 95       	ret
	else
		PORTE.OUTSET = PIN4_bm;
    2dd4:	80 e1       	ldi	r24, 0x10	; 16
    2dd6:	80 93 85 06 	sts	0x0685, r24	; 0x800685 <__TEXT_REGION_LENGTH__+0x700685>
    2dda:	08 95       	ret

00002ddc <_ZN4CSPI16StaticOnTransmitEPv>:
}

void CSPI::StaticOnTransmit(void* sender)
{
	CSPI* spi = (CSPI*)sender;
	spi->OnTransmit();
    2ddc:	0e 94 d6 16 	call	0x2dac	; 0x2dac <_ZN4CSPI10OnTransmitEv>
    2de0:	08 95       	ret

00002de2 <_ZN6CTimerC1Ev>:

#include "CTimer.h"
#include "sys_interrupts.h"

// default constructor
CTimer::CTimer()
    2de2:	20 e7       	ldi	r18, 0x70	; 112
    2de4:	32 e2       	ldi	r19, 0x22	; 34
    2de6:	fc 01       	movw	r30, r24
    2de8:	20 83       	st	Z, r18
    2dea:	31 83       	std	Z+1, r19	; 0x01
    2dec:	08 95       	ret

00002dee <_ZN6CTimerD1Ev>:
{

} //CTimer

// default destructor
CTimer::~CTimer()
    2dee:	08 95       	ret

00002df0 <_ZN7CTimer1C1Ev>:


#include "CTimer1.h"

// default constructor
CTimer1::CTimer1()
    2df0:	24 e9       	ldi	r18, 0x94	; 148
    2df2:	32 e2       	ldi	r19, 0x22	; 34
    2df4:	fc 01       	movw	r30, r24
    2df6:	20 83       	st	Z, r18
    2df8:	31 83       	std	Z+1, r19	; 0x01
    2dfa:	08 95       	ret

00002dfc <_ZN7CTimer1D1Ev>:
{
} //CTimer1

// default destructor
CTimer1::~CTimer1()
    2dfc:	08 95       	ret

00002dfe <_ZN6CUSARTC1Ev>:


#include "CUSART.h"

// default constructor
CUSART::CUSART()
    2dfe:	22 eb       	ldi	r18, 0xB2	; 178
    2e00:	32 e2       	ldi	r19, 0x22	; 34
    2e02:	fc 01       	movw	r30, r24
    2e04:	20 83       	st	Z, r18
    2e06:	31 83       	std	Z+1, r19	; 0x01
    2e08:	08 95       	ret

00002e0a <_ZN6CUSARTD1Ev>:
{
	
}

// default destructor
CUSART::~CUSART()
    2e0a:	08 95       	ret

00002e0c <__vector_1>:
		if (InterruptFuncTable[vector_id##_num] != 0)										\
		(*(InterruptFuncTable[vector_id##_num]))(InterruptSenderTable[vector_id##_num]);	\
	}

/* OSC interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(OSC_OSCF_vect)      /* External Oscillator Failure Interrupt (NMI) */
    2e0c:	1f 92       	push	r1
    2e0e:	0f 92       	push	r0
    2e10:	0f b6       	in	r0, 0x3f	; 63
    2e12:	0f 92       	push	r0
    2e14:	11 24       	eor	r1, r1
    2e16:	0b b6       	in	r0, 0x3b	; 59
    2e18:	0f 92       	push	r0
    2e1a:	2f 93       	push	r18
    2e1c:	3f 93       	push	r19
    2e1e:	4f 93       	push	r20
    2e20:	5f 93       	push	r21
    2e22:	6f 93       	push	r22
    2e24:	7f 93       	push	r23
    2e26:	8f 93       	push	r24
    2e28:	9f 93       	push	r25
    2e2a:	af 93       	push	r26
    2e2c:	bf 93       	push	r27
    2e2e:	ef 93       	push	r30
    2e30:	ff 93       	push	r31
    2e32:	e0 91 a4 23 	lds	r30, 0x23A4	; 0x8023a4 <InterruptFuncTable+0x2>
    2e36:	f0 91 a5 23 	lds	r31, 0x23A5	; 0x8023a5 <InterruptFuncTable+0x3>
    2e3a:	30 97       	sbiw	r30, 0x00	; 0
    2e3c:	29 f0       	breq	.+10     	; 0x2e48 <__vector_1+0x3c>
    2e3e:	80 91 9a 24 	lds	r24, 0x249A	; 0x80249a <InterruptSenderTable+0x2>
    2e42:	90 91 9b 24 	lds	r25, 0x249B	; 0x80249b <InterruptSenderTable+0x3>
    2e46:	19 95       	eicall
    2e48:	ff 91       	pop	r31
    2e4a:	ef 91       	pop	r30
    2e4c:	bf 91       	pop	r27
    2e4e:	af 91       	pop	r26
    2e50:	9f 91       	pop	r25
    2e52:	8f 91       	pop	r24
    2e54:	7f 91       	pop	r23
    2e56:	6f 91       	pop	r22
    2e58:	5f 91       	pop	r21
    2e5a:	4f 91       	pop	r20
    2e5c:	3f 91       	pop	r19
    2e5e:	2f 91       	pop	r18
    2e60:	0f 90       	pop	r0
    2e62:	0b be       	out	0x3b, r0	; 59
    2e64:	0f 90       	pop	r0
    2e66:	0f be       	out	0x3f, r0	; 63
    2e68:	0f 90       	pop	r0
    2e6a:	1f 90       	pop	r1
    2e6c:	18 95       	reti

00002e6e <__vector_2>:

/* PORTC interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTC_INT0_vect)      /* External Interrupt 0 */
    2e6e:	1f 92       	push	r1
    2e70:	0f 92       	push	r0
    2e72:	0f b6       	in	r0, 0x3f	; 63
    2e74:	0f 92       	push	r0
    2e76:	11 24       	eor	r1, r1
    2e78:	0b b6       	in	r0, 0x3b	; 59
    2e7a:	0f 92       	push	r0
    2e7c:	2f 93       	push	r18
    2e7e:	3f 93       	push	r19
    2e80:	4f 93       	push	r20
    2e82:	5f 93       	push	r21
    2e84:	6f 93       	push	r22
    2e86:	7f 93       	push	r23
    2e88:	8f 93       	push	r24
    2e8a:	9f 93       	push	r25
    2e8c:	af 93       	push	r26
    2e8e:	bf 93       	push	r27
    2e90:	ef 93       	push	r30
    2e92:	ff 93       	push	r31
    2e94:	e0 91 a6 23 	lds	r30, 0x23A6	; 0x8023a6 <InterruptFuncTable+0x4>
    2e98:	f0 91 a7 23 	lds	r31, 0x23A7	; 0x8023a7 <InterruptFuncTable+0x5>
    2e9c:	30 97       	sbiw	r30, 0x00	; 0
    2e9e:	29 f0       	breq	.+10     	; 0x2eaa <__vector_2+0x3c>
    2ea0:	80 91 9c 24 	lds	r24, 0x249C	; 0x80249c <InterruptSenderTable+0x4>
    2ea4:	90 91 9d 24 	lds	r25, 0x249D	; 0x80249d <InterruptSenderTable+0x5>
    2ea8:	19 95       	eicall
    2eaa:	ff 91       	pop	r31
    2eac:	ef 91       	pop	r30
    2eae:	bf 91       	pop	r27
    2eb0:	af 91       	pop	r26
    2eb2:	9f 91       	pop	r25
    2eb4:	8f 91       	pop	r24
    2eb6:	7f 91       	pop	r23
    2eb8:	6f 91       	pop	r22
    2eba:	5f 91       	pop	r21
    2ebc:	4f 91       	pop	r20
    2ebe:	3f 91       	pop	r19
    2ec0:	2f 91       	pop	r18
    2ec2:	0f 90       	pop	r0
    2ec4:	0b be       	out	0x3b, r0	; 59
    2ec6:	0f 90       	pop	r0
    2ec8:	0f be       	out	0x3f, r0	; 63
    2eca:	0f 90       	pop	r0
    2ecc:	1f 90       	pop	r1
    2ece:	18 95       	reti

00002ed0 <__vector_3>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTC_INT1_vect)      /* External Interrupt 1 */
    2ed0:	1f 92       	push	r1
    2ed2:	0f 92       	push	r0
    2ed4:	0f b6       	in	r0, 0x3f	; 63
    2ed6:	0f 92       	push	r0
    2ed8:	11 24       	eor	r1, r1
    2eda:	0b b6       	in	r0, 0x3b	; 59
    2edc:	0f 92       	push	r0
    2ede:	2f 93       	push	r18
    2ee0:	3f 93       	push	r19
    2ee2:	4f 93       	push	r20
    2ee4:	5f 93       	push	r21
    2ee6:	6f 93       	push	r22
    2ee8:	7f 93       	push	r23
    2eea:	8f 93       	push	r24
    2eec:	9f 93       	push	r25
    2eee:	af 93       	push	r26
    2ef0:	bf 93       	push	r27
    2ef2:	ef 93       	push	r30
    2ef4:	ff 93       	push	r31
    2ef6:	e0 91 a8 23 	lds	r30, 0x23A8	; 0x8023a8 <InterruptFuncTable+0x6>
    2efa:	f0 91 a9 23 	lds	r31, 0x23A9	; 0x8023a9 <InterruptFuncTable+0x7>
    2efe:	30 97       	sbiw	r30, 0x00	; 0
    2f00:	29 f0       	breq	.+10     	; 0x2f0c <__vector_3+0x3c>
    2f02:	80 91 9e 24 	lds	r24, 0x249E	; 0x80249e <InterruptSenderTable+0x6>
    2f06:	90 91 9f 24 	lds	r25, 0x249F	; 0x80249f <InterruptSenderTable+0x7>
    2f0a:	19 95       	eicall
    2f0c:	ff 91       	pop	r31
    2f0e:	ef 91       	pop	r30
    2f10:	bf 91       	pop	r27
    2f12:	af 91       	pop	r26
    2f14:	9f 91       	pop	r25
    2f16:	8f 91       	pop	r24
    2f18:	7f 91       	pop	r23
    2f1a:	6f 91       	pop	r22
    2f1c:	5f 91       	pop	r21
    2f1e:	4f 91       	pop	r20
    2f20:	3f 91       	pop	r19
    2f22:	2f 91       	pop	r18
    2f24:	0f 90       	pop	r0
    2f26:	0b be       	out	0x3b, r0	; 59
    2f28:	0f 90       	pop	r0
    2f2a:	0f be       	out	0x3f, r0	; 63
    2f2c:	0f 90       	pop	r0
    2f2e:	1f 90       	pop	r1
    2f30:	18 95       	reti

00002f32 <__vector_4>:

/* PORTR interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTR_INT0_vect)      /* External Interrupt 0 */
    2f32:	1f 92       	push	r1
    2f34:	0f 92       	push	r0
    2f36:	0f b6       	in	r0, 0x3f	; 63
    2f38:	0f 92       	push	r0
    2f3a:	11 24       	eor	r1, r1
    2f3c:	0b b6       	in	r0, 0x3b	; 59
    2f3e:	0f 92       	push	r0
    2f40:	2f 93       	push	r18
    2f42:	3f 93       	push	r19
    2f44:	4f 93       	push	r20
    2f46:	5f 93       	push	r21
    2f48:	6f 93       	push	r22
    2f4a:	7f 93       	push	r23
    2f4c:	8f 93       	push	r24
    2f4e:	9f 93       	push	r25
    2f50:	af 93       	push	r26
    2f52:	bf 93       	push	r27
    2f54:	ef 93       	push	r30
    2f56:	ff 93       	push	r31
    2f58:	e0 91 aa 23 	lds	r30, 0x23AA	; 0x8023aa <InterruptFuncTable+0x8>
    2f5c:	f0 91 ab 23 	lds	r31, 0x23AB	; 0x8023ab <InterruptFuncTable+0x9>
    2f60:	30 97       	sbiw	r30, 0x00	; 0
    2f62:	29 f0       	breq	.+10     	; 0x2f6e <__vector_4+0x3c>
    2f64:	80 91 a0 24 	lds	r24, 0x24A0	; 0x8024a0 <InterruptSenderTable+0x8>
    2f68:	90 91 a1 24 	lds	r25, 0x24A1	; 0x8024a1 <InterruptSenderTable+0x9>
    2f6c:	19 95       	eicall
    2f6e:	ff 91       	pop	r31
    2f70:	ef 91       	pop	r30
    2f72:	bf 91       	pop	r27
    2f74:	af 91       	pop	r26
    2f76:	9f 91       	pop	r25
    2f78:	8f 91       	pop	r24
    2f7a:	7f 91       	pop	r23
    2f7c:	6f 91       	pop	r22
    2f7e:	5f 91       	pop	r21
    2f80:	4f 91       	pop	r20
    2f82:	3f 91       	pop	r19
    2f84:	2f 91       	pop	r18
    2f86:	0f 90       	pop	r0
    2f88:	0b be       	out	0x3b, r0	; 59
    2f8a:	0f 90       	pop	r0
    2f8c:	0f be       	out	0x3f, r0	; 63
    2f8e:	0f 90       	pop	r0
    2f90:	1f 90       	pop	r1
    2f92:	18 95       	reti

00002f94 <__vector_5>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTR_INT1_vect)      /* External Interrupt 1 */
    2f94:	1f 92       	push	r1
    2f96:	0f 92       	push	r0
    2f98:	0f b6       	in	r0, 0x3f	; 63
    2f9a:	0f 92       	push	r0
    2f9c:	11 24       	eor	r1, r1
    2f9e:	0b b6       	in	r0, 0x3b	; 59
    2fa0:	0f 92       	push	r0
    2fa2:	2f 93       	push	r18
    2fa4:	3f 93       	push	r19
    2fa6:	4f 93       	push	r20
    2fa8:	5f 93       	push	r21
    2faa:	6f 93       	push	r22
    2fac:	7f 93       	push	r23
    2fae:	8f 93       	push	r24
    2fb0:	9f 93       	push	r25
    2fb2:	af 93       	push	r26
    2fb4:	bf 93       	push	r27
    2fb6:	ef 93       	push	r30
    2fb8:	ff 93       	push	r31
    2fba:	e0 91 ac 23 	lds	r30, 0x23AC	; 0x8023ac <InterruptFuncTable+0xa>
    2fbe:	f0 91 ad 23 	lds	r31, 0x23AD	; 0x8023ad <InterruptFuncTable+0xb>
    2fc2:	30 97       	sbiw	r30, 0x00	; 0
    2fc4:	29 f0       	breq	.+10     	; 0x2fd0 <__vector_5+0x3c>
    2fc6:	80 91 a2 24 	lds	r24, 0x24A2	; 0x8024a2 <InterruptSenderTable+0xa>
    2fca:	90 91 a3 24 	lds	r25, 0x24A3	; 0x8024a3 <InterruptSenderTable+0xb>
    2fce:	19 95       	eicall
    2fd0:	ff 91       	pop	r31
    2fd2:	ef 91       	pop	r30
    2fd4:	bf 91       	pop	r27
    2fd6:	af 91       	pop	r26
    2fd8:	9f 91       	pop	r25
    2fda:	8f 91       	pop	r24
    2fdc:	7f 91       	pop	r23
    2fde:	6f 91       	pop	r22
    2fe0:	5f 91       	pop	r21
    2fe2:	4f 91       	pop	r20
    2fe4:	3f 91       	pop	r19
    2fe6:	2f 91       	pop	r18
    2fe8:	0f 90       	pop	r0
    2fea:	0b be       	out	0x3b, r0	; 59
    2fec:	0f 90       	pop	r0
    2fee:	0f be       	out	0x3f, r0	; 63
    2ff0:	0f 90       	pop	r0
    2ff2:	1f 90       	pop	r1
    2ff4:	18 95       	reti

00002ff6 <__vector_6>:

/* DMA interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(DMA_CH0_vect)      /* Channel 0 Interrupt */
    2ff6:	1f 92       	push	r1
    2ff8:	0f 92       	push	r0
    2ffa:	0f b6       	in	r0, 0x3f	; 63
    2ffc:	0f 92       	push	r0
    2ffe:	11 24       	eor	r1, r1
    3000:	0b b6       	in	r0, 0x3b	; 59
    3002:	0f 92       	push	r0
    3004:	2f 93       	push	r18
    3006:	3f 93       	push	r19
    3008:	4f 93       	push	r20
    300a:	5f 93       	push	r21
    300c:	6f 93       	push	r22
    300e:	7f 93       	push	r23
    3010:	8f 93       	push	r24
    3012:	9f 93       	push	r25
    3014:	af 93       	push	r26
    3016:	bf 93       	push	r27
    3018:	ef 93       	push	r30
    301a:	ff 93       	push	r31
    301c:	e0 91 ae 23 	lds	r30, 0x23AE	; 0x8023ae <InterruptFuncTable+0xc>
    3020:	f0 91 af 23 	lds	r31, 0x23AF	; 0x8023af <InterruptFuncTable+0xd>
    3024:	30 97       	sbiw	r30, 0x00	; 0
    3026:	29 f0       	breq	.+10     	; 0x3032 <__vector_6+0x3c>
    3028:	80 91 a4 24 	lds	r24, 0x24A4	; 0x8024a4 <InterruptSenderTable+0xc>
    302c:	90 91 a5 24 	lds	r25, 0x24A5	; 0x8024a5 <InterruptSenderTable+0xd>
    3030:	19 95       	eicall
    3032:	ff 91       	pop	r31
    3034:	ef 91       	pop	r30
    3036:	bf 91       	pop	r27
    3038:	af 91       	pop	r26
    303a:	9f 91       	pop	r25
    303c:	8f 91       	pop	r24
    303e:	7f 91       	pop	r23
    3040:	6f 91       	pop	r22
    3042:	5f 91       	pop	r21
    3044:	4f 91       	pop	r20
    3046:	3f 91       	pop	r19
    3048:	2f 91       	pop	r18
    304a:	0f 90       	pop	r0
    304c:	0b be       	out	0x3b, r0	; 59
    304e:	0f 90       	pop	r0
    3050:	0f be       	out	0x3f, r0	; 63
    3052:	0f 90       	pop	r0
    3054:	1f 90       	pop	r1
    3056:	18 95       	reti

00003058 <__vector_7>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(DMA_CH1_vect)      /* Channel 1 Interrupt */
    3058:	1f 92       	push	r1
    305a:	0f 92       	push	r0
    305c:	0f b6       	in	r0, 0x3f	; 63
    305e:	0f 92       	push	r0
    3060:	11 24       	eor	r1, r1
    3062:	0b b6       	in	r0, 0x3b	; 59
    3064:	0f 92       	push	r0
    3066:	2f 93       	push	r18
    3068:	3f 93       	push	r19
    306a:	4f 93       	push	r20
    306c:	5f 93       	push	r21
    306e:	6f 93       	push	r22
    3070:	7f 93       	push	r23
    3072:	8f 93       	push	r24
    3074:	9f 93       	push	r25
    3076:	af 93       	push	r26
    3078:	bf 93       	push	r27
    307a:	ef 93       	push	r30
    307c:	ff 93       	push	r31
    307e:	e0 91 b0 23 	lds	r30, 0x23B0	; 0x8023b0 <InterruptFuncTable+0xe>
    3082:	f0 91 b1 23 	lds	r31, 0x23B1	; 0x8023b1 <InterruptFuncTable+0xf>
    3086:	30 97       	sbiw	r30, 0x00	; 0
    3088:	29 f0       	breq	.+10     	; 0x3094 <__vector_7+0x3c>
    308a:	80 91 a6 24 	lds	r24, 0x24A6	; 0x8024a6 <InterruptSenderTable+0xe>
    308e:	90 91 a7 24 	lds	r25, 0x24A7	; 0x8024a7 <InterruptSenderTable+0xf>
    3092:	19 95       	eicall
    3094:	ff 91       	pop	r31
    3096:	ef 91       	pop	r30
    3098:	bf 91       	pop	r27
    309a:	af 91       	pop	r26
    309c:	9f 91       	pop	r25
    309e:	8f 91       	pop	r24
    30a0:	7f 91       	pop	r23
    30a2:	6f 91       	pop	r22
    30a4:	5f 91       	pop	r21
    30a6:	4f 91       	pop	r20
    30a8:	3f 91       	pop	r19
    30aa:	2f 91       	pop	r18
    30ac:	0f 90       	pop	r0
    30ae:	0b be       	out	0x3b, r0	; 59
    30b0:	0f 90       	pop	r0
    30b2:	0f be       	out	0x3f, r0	; 63
    30b4:	0f 90       	pop	r0
    30b6:	1f 90       	pop	r1
    30b8:	18 95       	reti

000030ba <__vector_8>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(DMA_CH2_vect)      /* Channel 2 Interrupt */
    30ba:	1f 92       	push	r1
    30bc:	0f 92       	push	r0
    30be:	0f b6       	in	r0, 0x3f	; 63
    30c0:	0f 92       	push	r0
    30c2:	11 24       	eor	r1, r1
    30c4:	0b b6       	in	r0, 0x3b	; 59
    30c6:	0f 92       	push	r0
    30c8:	2f 93       	push	r18
    30ca:	3f 93       	push	r19
    30cc:	4f 93       	push	r20
    30ce:	5f 93       	push	r21
    30d0:	6f 93       	push	r22
    30d2:	7f 93       	push	r23
    30d4:	8f 93       	push	r24
    30d6:	9f 93       	push	r25
    30d8:	af 93       	push	r26
    30da:	bf 93       	push	r27
    30dc:	ef 93       	push	r30
    30de:	ff 93       	push	r31
    30e0:	e0 91 b2 23 	lds	r30, 0x23B2	; 0x8023b2 <InterruptFuncTable+0x10>
    30e4:	f0 91 b3 23 	lds	r31, 0x23B3	; 0x8023b3 <InterruptFuncTable+0x11>
    30e8:	30 97       	sbiw	r30, 0x00	; 0
    30ea:	29 f0       	breq	.+10     	; 0x30f6 <__vector_8+0x3c>
    30ec:	80 91 a8 24 	lds	r24, 0x24A8	; 0x8024a8 <InterruptSenderTable+0x10>
    30f0:	90 91 a9 24 	lds	r25, 0x24A9	; 0x8024a9 <InterruptSenderTable+0x11>
    30f4:	19 95       	eicall
    30f6:	ff 91       	pop	r31
    30f8:	ef 91       	pop	r30
    30fa:	bf 91       	pop	r27
    30fc:	af 91       	pop	r26
    30fe:	9f 91       	pop	r25
    3100:	8f 91       	pop	r24
    3102:	7f 91       	pop	r23
    3104:	6f 91       	pop	r22
    3106:	5f 91       	pop	r21
    3108:	4f 91       	pop	r20
    310a:	3f 91       	pop	r19
    310c:	2f 91       	pop	r18
    310e:	0f 90       	pop	r0
    3110:	0b be       	out	0x3b, r0	; 59
    3112:	0f 90       	pop	r0
    3114:	0f be       	out	0x3f, r0	; 63
    3116:	0f 90       	pop	r0
    3118:	1f 90       	pop	r1
    311a:	18 95       	reti

0000311c <__vector_9>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(DMA_CH3_vect)      /* Channel 3 Interrupt */
    311c:	1f 92       	push	r1
    311e:	0f 92       	push	r0
    3120:	0f b6       	in	r0, 0x3f	; 63
    3122:	0f 92       	push	r0
    3124:	11 24       	eor	r1, r1
    3126:	0b b6       	in	r0, 0x3b	; 59
    3128:	0f 92       	push	r0
    312a:	2f 93       	push	r18
    312c:	3f 93       	push	r19
    312e:	4f 93       	push	r20
    3130:	5f 93       	push	r21
    3132:	6f 93       	push	r22
    3134:	7f 93       	push	r23
    3136:	8f 93       	push	r24
    3138:	9f 93       	push	r25
    313a:	af 93       	push	r26
    313c:	bf 93       	push	r27
    313e:	ef 93       	push	r30
    3140:	ff 93       	push	r31
    3142:	e0 91 b4 23 	lds	r30, 0x23B4	; 0x8023b4 <InterruptFuncTable+0x12>
    3146:	f0 91 b5 23 	lds	r31, 0x23B5	; 0x8023b5 <InterruptFuncTable+0x13>
    314a:	30 97       	sbiw	r30, 0x00	; 0
    314c:	29 f0       	breq	.+10     	; 0x3158 <__vector_9+0x3c>
    314e:	80 91 aa 24 	lds	r24, 0x24AA	; 0x8024aa <InterruptSenderTable+0x12>
    3152:	90 91 ab 24 	lds	r25, 0x24AB	; 0x8024ab <InterruptSenderTable+0x13>
    3156:	19 95       	eicall
    3158:	ff 91       	pop	r31
    315a:	ef 91       	pop	r30
    315c:	bf 91       	pop	r27
    315e:	af 91       	pop	r26
    3160:	9f 91       	pop	r25
    3162:	8f 91       	pop	r24
    3164:	7f 91       	pop	r23
    3166:	6f 91       	pop	r22
    3168:	5f 91       	pop	r21
    316a:	4f 91       	pop	r20
    316c:	3f 91       	pop	r19
    316e:	2f 91       	pop	r18
    3170:	0f 90       	pop	r0
    3172:	0b be       	out	0x3b, r0	; 59
    3174:	0f 90       	pop	r0
    3176:	0f be       	out	0x3f, r0	; 63
    3178:	0f 90       	pop	r0
    317a:	1f 90       	pop	r1
    317c:	18 95       	reti

0000317e <__vector_10>:

/* RTC interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(RTC_OVF_vect)      /* Overflow Interrupt */
    317e:	1f 92       	push	r1
    3180:	0f 92       	push	r0
    3182:	0f b6       	in	r0, 0x3f	; 63
    3184:	0f 92       	push	r0
    3186:	11 24       	eor	r1, r1
    3188:	0b b6       	in	r0, 0x3b	; 59
    318a:	0f 92       	push	r0
    318c:	2f 93       	push	r18
    318e:	3f 93       	push	r19
    3190:	4f 93       	push	r20
    3192:	5f 93       	push	r21
    3194:	6f 93       	push	r22
    3196:	7f 93       	push	r23
    3198:	8f 93       	push	r24
    319a:	9f 93       	push	r25
    319c:	af 93       	push	r26
    319e:	bf 93       	push	r27
    31a0:	ef 93       	push	r30
    31a2:	ff 93       	push	r31
    31a4:	e0 91 b6 23 	lds	r30, 0x23B6	; 0x8023b6 <InterruptFuncTable+0x14>
    31a8:	f0 91 b7 23 	lds	r31, 0x23B7	; 0x8023b7 <InterruptFuncTable+0x15>
    31ac:	30 97       	sbiw	r30, 0x00	; 0
    31ae:	29 f0       	breq	.+10     	; 0x31ba <__vector_10+0x3c>
    31b0:	80 91 ac 24 	lds	r24, 0x24AC	; 0x8024ac <InterruptSenderTable+0x14>
    31b4:	90 91 ad 24 	lds	r25, 0x24AD	; 0x8024ad <InterruptSenderTable+0x15>
    31b8:	19 95       	eicall
    31ba:	ff 91       	pop	r31
    31bc:	ef 91       	pop	r30
    31be:	bf 91       	pop	r27
    31c0:	af 91       	pop	r26
    31c2:	9f 91       	pop	r25
    31c4:	8f 91       	pop	r24
    31c6:	7f 91       	pop	r23
    31c8:	6f 91       	pop	r22
    31ca:	5f 91       	pop	r21
    31cc:	4f 91       	pop	r20
    31ce:	3f 91       	pop	r19
    31d0:	2f 91       	pop	r18
    31d2:	0f 90       	pop	r0
    31d4:	0b be       	out	0x3b, r0	; 59
    31d6:	0f 90       	pop	r0
    31d8:	0f be       	out	0x3f, r0	; 63
    31da:	0f 90       	pop	r0
    31dc:	1f 90       	pop	r1
    31de:	18 95       	reti

000031e0 <__vector_11>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(RTC_COMP_vect)      /* Compare Interrupt */
    31e0:	1f 92       	push	r1
    31e2:	0f 92       	push	r0
    31e4:	0f b6       	in	r0, 0x3f	; 63
    31e6:	0f 92       	push	r0
    31e8:	11 24       	eor	r1, r1
    31ea:	0b b6       	in	r0, 0x3b	; 59
    31ec:	0f 92       	push	r0
    31ee:	2f 93       	push	r18
    31f0:	3f 93       	push	r19
    31f2:	4f 93       	push	r20
    31f4:	5f 93       	push	r21
    31f6:	6f 93       	push	r22
    31f8:	7f 93       	push	r23
    31fa:	8f 93       	push	r24
    31fc:	9f 93       	push	r25
    31fe:	af 93       	push	r26
    3200:	bf 93       	push	r27
    3202:	ef 93       	push	r30
    3204:	ff 93       	push	r31
    3206:	e0 91 b8 23 	lds	r30, 0x23B8	; 0x8023b8 <InterruptFuncTable+0x16>
    320a:	f0 91 b9 23 	lds	r31, 0x23B9	; 0x8023b9 <InterruptFuncTable+0x17>
    320e:	30 97       	sbiw	r30, 0x00	; 0
    3210:	29 f0       	breq	.+10     	; 0x321c <__vector_11+0x3c>
    3212:	80 91 ae 24 	lds	r24, 0x24AE	; 0x8024ae <InterruptSenderTable+0x16>
    3216:	90 91 af 24 	lds	r25, 0x24AF	; 0x8024af <InterruptSenderTable+0x17>
    321a:	19 95       	eicall
    321c:	ff 91       	pop	r31
    321e:	ef 91       	pop	r30
    3220:	bf 91       	pop	r27
    3222:	af 91       	pop	r26
    3224:	9f 91       	pop	r25
    3226:	8f 91       	pop	r24
    3228:	7f 91       	pop	r23
    322a:	6f 91       	pop	r22
    322c:	5f 91       	pop	r21
    322e:	4f 91       	pop	r20
    3230:	3f 91       	pop	r19
    3232:	2f 91       	pop	r18
    3234:	0f 90       	pop	r0
    3236:	0b be       	out	0x3b, r0	; 59
    3238:	0f 90       	pop	r0
    323a:	0f be       	out	0x3f, r0	; 63
    323c:	0f 90       	pop	r0
    323e:	1f 90       	pop	r1
    3240:	18 95       	reti

00003242 <__vector_12>:

/* TWIC interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TWIC_TWIS_vect)      /* TWI Slave Interrupt */
    3242:	1f 92       	push	r1
    3244:	0f 92       	push	r0
    3246:	0f b6       	in	r0, 0x3f	; 63
    3248:	0f 92       	push	r0
    324a:	11 24       	eor	r1, r1
    324c:	0b b6       	in	r0, 0x3b	; 59
    324e:	0f 92       	push	r0
    3250:	2f 93       	push	r18
    3252:	3f 93       	push	r19
    3254:	4f 93       	push	r20
    3256:	5f 93       	push	r21
    3258:	6f 93       	push	r22
    325a:	7f 93       	push	r23
    325c:	8f 93       	push	r24
    325e:	9f 93       	push	r25
    3260:	af 93       	push	r26
    3262:	bf 93       	push	r27
    3264:	ef 93       	push	r30
    3266:	ff 93       	push	r31
    3268:	e0 91 ba 23 	lds	r30, 0x23BA	; 0x8023ba <InterruptFuncTable+0x18>
    326c:	f0 91 bb 23 	lds	r31, 0x23BB	; 0x8023bb <InterruptFuncTable+0x19>
    3270:	30 97       	sbiw	r30, 0x00	; 0
    3272:	29 f0       	breq	.+10     	; 0x327e <__vector_12+0x3c>
    3274:	80 91 b0 24 	lds	r24, 0x24B0	; 0x8024b0 <InterruptSenderTable+0x18>
    3278:	90 91 b1 24 	lds	r25, 0x24B1	; 0x8024b1 <InterruptSenderTable+0x19>
    327c:	19 95       	eicall
    327e:	ff 91       	pop	r31
    3280:	ef 91       	pop	r30
    3282:	bf 91       	pop	r27
    3284:	af 91       	pop	r26
    3286:	9f 91       	pop	r25
    3288:	8f 91       	pop	r24
    328a:	7f 91       	pop	r23
    328c:	6f 91       	pop	r22
    328e:	5f 91       	pop	r21
    3290:	4f 91       	pop	r20
    3292:	3f 91       	pop	r19
    3294:	2f 91       	pop	r18
    3296:	0f 90       	pop	r0
    3298:	0b be       	out	0x3b, r0	; 59
    329a:	0f 90       	pop	r0
    329c:	0f be       	out	0x3f, r0	; 63
    329e:	0f 90       	pop	r0
    32a0:	1f 90       	pop	r1
    32a2:	18 95       	reti

000032a4 <__vector_13>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TWIC_TWIM_vect)      /* TWI Master Interrupt */
    32a4:	1f 92       	push	r1
    32a6:	0f 92       	push	r0
    32a8:	0f b6       	in	r0, 0x3f	; 63
    32aa:	0f 92       	push	r0
    32ac:	11 24       	eor	r1, r1
    32ae:	0b b6       	in	r0, 0x3b	; 59
    32b0:	0f 92       	push	r0
    32b2:	2f 93       	push	r18
    32b4:	3f 93       	push	r19
    32b6:	4f 93       	push	r20
    32b8:	5f 93       	push	r21
    32ba:	6f 93       	push	r22
    32bc:	7f 93       	push	r23
    32be:	8f 93       	push	r24
    32c0:	9f 93       	push	r25
    32c2:	af 93       	push	r26
    32c4:	bf 93       	push	r27
    32c6:	ef 93       	push	r30
    32c8:	ff 93       	push	r31
    32ca:	e0 91 bc 23 	lds	r30, 0x23BC	; 0x8023bc <InterruptFuncTable+0x1a>
    32ce:	f0 91 bd 23 	lds	r31, 0x23BD	; 0x8023bd <InterruptFuncTable+0x1b>
    32d2:	30 97       	sbiw	r30, 0x00	; 0
    32d4:	29 f0       	breq	.+10     	; 0x32e0 <__vector_13+0x3c>
    32d6:	80 91 b2 24 	lds	r24, 0x24B2	; 0x8024b2 <InterruptSenderTable+0x1a>
    32da:	90 91 b3 24 	lds	r25, 0x24B3	; 0x8024b3 <InterruptSenderTable+0x1b>
    32de:	19 95       	eicall
    32e0:	ff 91       	pop	r31
    32e2:	ef 91       	pop	r30
    32e4:	bf 91       	pop	r27
    32e6:	af 91       	pop	r26
    32e8:	9f 91       	pop	r25
    32ea:	8f 91       	pop	r24
    32ec:	7f 91       	pop	r23
    32ee:	6f 91       	pop	r22
    32f0:	5f 91       	pop	r21
    32f2:	4f 91       	pop	r20
    32f4:	3f 91       	pop	r19
    32f6:	2f 91       	pop	r18
    32f8:	0f 90       	pop	r0
    32fa:	0b be       	out	0x3b, r0	; 59
    32fc:	0f 90       	pop	r0
    32fe:	0f be       	out	0x3f, r0	; 63
    3300:	0f 90       	pop	r0
    3302:	1f 90       	pop	r1
    3304:	18 95       	reti

00003306 <__vector_14>:

/* TCC0 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC0_OVF_vect)      /* Overflow Interrupt */
    3306:	1f 92       	push	r1
    3308:	0f 92       	push	r0
    330a:	0f b6       	in	r0, 0x3f	; 63
    330c:	0f 92       	push	r0
    330e:	11 24       	eor	r1, r1
    3310:	0b b6       	in	r0, 0x3b	; 59
    3312:	0f 92       	push	r0
    3314:	2f 93       	push	r18
    3316:	3f 93       	push	r19
    3318:	4f 93       	push	r20
    331a:	5f 93       	push	r21
    331c:	6f 93       	push	r22
    331e:	7f 93       	push	r23
    3320:	8f 93       	push	r24
    3322:	9f 93       	push	r25
    3324:	af 93       	push	r26
    3326:	bf 93       	push	r27
    3328:	ef 93       	push	r30
    332a:	ff 93       	push	r31
    332c:	e0 91 be 23 	lds	r30, 0x23BE	; 0x8023be <InterruptFuncTable+0x1c>
    3330:	f0 91 bf 23 	lds	r31, 0x23BF	; 0x8023bf <InterruptFuncTable+0x1d>
    3334:	30 97       	sbiw	r30, 0x00	; 0
    3336:	29 f0       	breq	.+10     	; 0x3342 <__vector_14+0x3c>
    3338:	80 91 b4 24 	lds	r24, 0x24B4	; 0x8024b4 <InterruptSenderTable+0x1c>
    333c:	90 91 b5 24 	lds	r25, 0x24B5	; 0x8024b5 <InterruptSenderTable+0x1d>
    3340:	19 95       	eicall
    3342:	ff 91       	pop	r31
    3344:	ef 91       	pop	r30
    3346:	bf 91       	pop	r27
    3348:	af 91       	pop	r26
    334a:	9f 91       	pop	r25
    334c:	8f 91       	pop	r24
    334e:	7f 91       	pop	r23
    3350:	6f 91       	pop	r22
    3352:	5f 91       	pop	r21
    3354:	4f 91       	pop	r20
    3356:	3f 91       	pop	r19
    3358:	2f 91       	pop	r18
    335a:	0f 90       	pop	r0
    335c:	0b be       	out	0x3b, r0	; 59
    335e:	0f 90       	pop	r0
    3360:	0f be       	out	0x3f, r0	; 63
    3362:	0f 90       	pop	r0
    3364:	1f 90       	pop	r1
    3366:	18 95       	reti

00003368 <__vector_15>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC0_ERR_vect)      /* Error Interrupt */
    3368:	1f 92       	push	r1
    336a:	0f 92       	push	r0
    336c:	0f b6       	in	r0, 0x3f	; 63
    336e:	0f 92       	push	r0
    3370:	11 24       	eor	r1, r1
    3372:	0b b6       	in	r0, 0x3b	; 59
    3374:	0f 92       	push	r0
    3376:	2f 93       	push	r18
    3378:	3f 93       	push	r19
    337a:	4f 93       	push	r20
    337c:	5f 93       	push	r21
    337e:	6f 93       	push	r22
    3380:	7f 93       	push	r23
    3382:	8f 93       	push	r24
    3384:	9f 93       	push	r25
    3386:	af 93       	push	r26
    3388:	bf 93       	push	r27
    338a:	ef 93       	push	r30
    338c:	ff 93       	push	r31
    338e:	e0 91 c0 23 	lds	r30, 0x23C0	; 0x8023c0 <InterruptFuncTable+0x1e>
    3392:	f0 91 c1 23 	lds	r31, 0x23C1	; 0x8023c1 <InterruptFuncTable+0x1f>
    3396:	30 97       	sbiw	r30, 0x00	; 0
    3398:	29 f0       	breq	.+10     	; 0x33a4 <__vector_15+0x3c>
    339a:	80 91 b6 24 	lds	r24, 0x24B6	; 0x8024b6 <InterruptSenderTable+0x1e>
    339e:	90 91 b7 24 	lds	r25, 0x24B7	; 0x8024b7 <InterruptSenderTable+0x1f>
    33a2:	19 95       	eicall
    33a4:	ff 91       	pop	r31
    33a6:	ef 91       	pop	r30
    33a8:	bf 91       	pop	r27
    33aa:	af 91       	pop	r26
    33ac:	9f 91       	pop	r25
    33ae:	8f 91       	pop	r24
    33b0:	7f 91       	pop	r23
    33b2:	6f 91       	pop	r22
    33b4:	5f 91       	pop	r21
    33b6:	4f 91       	pop	r20
    33b8:	3f 91       	pop	r19
    33ba:	2f 91       	pop	r18
    33bc:	0f 90       	pop	r0
    33be:	0b be       	out	0x3b, r0	; 59
    33c0:	0f 90       	pop	r0
    33c2:	0f be       	out	0x3f, r0	; 63
    33c4:	0f 90       	pop	r0
    33c6:	1f 90       	pop	r1
    33c8:	18 95       	reti

000033ca <__vector_16>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC0_CCA_vect)      /* Compare or Capture A Interrupt */
    33ca:	1f 92       	push	r1
    33cc:	0f 92       	push	r0
    33ce:	0f b6       	in	r0, 0x3f	; 63
    33d0:	0f 92       	push	r0
    33d2:	11 24       	eor	r1, r1
    33d4:	0b b6       	in	r0, 0x3b	; 59
    33d6:	0f 92       	push	r0
    33d8:	2f 93       	push	r18
    33da:	3f 93       	push	r19
    33dc:	4f 93       	push	r20
    33de:	5f 93       	push	r21
    33e0:	6f 93       	push	r22
    33e2:	7f 93       	push	r23
    33e4:	8f 93       	push	r24
    33e6:	9f 93       	push	r25
    33e8:	af 93       	push	r26
    33ea:	bf 93       	push	r27
    33ec:	ef 93       	push	r30
    33ee:	ff 93       	push	r31
    33f0:	e0 91 c2 23 	lds	r30, 0x23C2	; 0x8023c2 <InterruptFuncTable+0x20>
    33f4:	f0 91 c3 23 	lds	r31, 0x23C3	; 0x8023c3 <InterruptFuncTable+0x21>
    33f8:	30 97       	sbiw	r30, 0x00	; 0
    33fa:	29 f0       	breq	.+10     	; 0x3406 <__vector_16+0x3c>
    33fc:	80 91 b8 24 	lds	r24, 0x24B8	; 0x8024b8 <InterruptSenderTable+0x20>
    3400:	90 91 b9 24 	lds	r25, 0x24B9	; 0x8024b9 <InterruptSenderTable+0x21>
    3404:	19 95       	eicall
    3406:	ff 91       	pop	r31
    3408:	ef 91       	pop	r30
    340a:	bf 91       	pop	r27
    340c:	af 91       	pop	r26
    340e:	9f 91       	pop	r25
    3410:	8f 91       	pop	r24
    3412:	7f 91       	pop	r23
    3414:	6f 91       	pop	r22
    3416:	5f 91       	pop	r21
    3418:	4f 91       	pop	r20
    341a:	3f 91       	pop	r19
    341c:	2f 91       	pop	r18
    341e:	0f 90       	pop	r0
    3420:	0b be       	out	0x3b, r0	; 59
    3422:	0f 90       	pop	r0
    3424:	0f be       	out	0x3f, r0	; 63
    3426:	0f 90       	pop	r0
    3428:	1f 90       	pop	r1
    342a:	18 95       	reti

0000342c <__vector_17>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC0_CCB_vect)      /* Compare or Capture B Interrupt */
    342c:	1f 92       	push	r1
    342e:	0f 92       	push	r0
    3430:	0f b6       	in	r0, 0x3f	; 63
    3432:	0f 92       	push	r0
    3434:	11 24       	eor	r1, r1
    3436:	0b b6       	in	r0, 0x3b	; 59
    3438:	0f 92       	push	r0
    343a:	2f 93       	push	r18
    343c:	3f 93       	push	r19
    343e:	4f 93       	push	r20
    3440:	5f 93       	push	r21
    3442:	6f 93       	push	r22
    3444:	7f 93       	push	r23
    3446:	8f 93       	push	r24
    3448:	9f 93       	push	r25
    344a:	af 93       	push	r26
    344c:	bf 93       	push	r27
    344e:	ef 93       	push	r30
    3450:	ff 93       	push	r31
    3452:	e0 91 c4 23 	lds	r30, 0x23C4	; 0x8023c4 <InterruptFuncTable+0x22>
    3456:	f0 91 c5 23 	lds	r31, 0x23C5	; 0x8023c5 <InterruptFuncTable+0x23>
    345a:	30 97       	sbiw	r30, 0x00	; 0
    345c:	29 f0       	breq	.+10     	; 0x3468 <__vector_17+0x3c>
    345e:	80 91 ba 24 	lds	r24, 0x24BA	; 0x8024ba <InterruptSenderTable+0x22>
    3462:	90 91 bb 24 	lds	r25, 0x24BB	; 0x8024bb <InterruptSenderTable+0x23>
    3466:	19 95       	eicall
    3468:	ff 91       	pop	r31
    346a:	ef 91       	pop	r30
    346c:	bf 91       	pop	r27
    346e:	af 91       	pop	r26
    3470:	9f 91       	pop	r25
    3472:	8f 91       	pop	r24
    3474:	7f 91       	pop	r23
    3476:	6f 91       	pop	r22
    3478:	5f 91       	pop	r21
    347a:	4f 91       	pop	r20
    347c:	3f 91       	pop	r19
    347e:	2f 91       	pop	r18
    3480:	0f 90       	pop	r0
    3482:	0b be       	out	0x3b, r0	; 59
    3484:	0f 90       	pop	r0
    3486:	0f be       	out	0x3f, r0	; 63
    3488:	0f 90       	pop	r0
    348a:	1f 90       	pop	r1
    348c:	18 95       	reti

0000348e <__vector_18>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC0_CCC_vect)      /* Compare or Capture C Interrupt */
    348e:	1f 92       	push	r1
    3490:	0f 92       	push	r0
    3492:	0f b6       	in	r0, 0x3f	; 63
    3494:	0f 92       	push	r0
    3496:	11 24       	eor	r1, r1
    3498:	0b b6       	in	r0, 0x3b	; 59
    349a:	0f 92       	push	r0
    349c:	2f 93       	push	r18
    349e:	3f 93       	push	r19
    34a0:	4f 93       	push	r20
    34a2:	5f 93       	push	r21
    34a4:	6f 93       	push	r22
    34a6:	7f 93       	push	r23
    34a8:	8f 93       	push	r24
    34aa:	9f 93       	push	r25
    34ac:	af 93       	push	r26
    34ae:	bf 93       	push	r27
    34b0:	ef 93       	push	r30
    34b2:	ff 93       	push	r31
    34b4:	e0 91 c6 23 	lds	r30, 0x23C6	; 0x8023c6 <InterruptFuncTable+0x24>
    34b8:	f0 91 c7 23 	lds	r31, 0x23C7	; 0x8023c7 <InterruptFuncTable+0x25>
    34bc:	30 97       	sbiw	r30, 0x00	; 0
    34be:	29 f0       	breq	.+10     	; 0x34ca <__vector_18+0x3c>
    34c0:	80 91 bc 24 	lds	r24, 0x24BC	; 0x8024bc <InterruptSenderTable+0x24>
    34c4:	90 91 bd 24 	lds	r25, 0x24BD	; 0x8024bd <InterruptSenderTable+0x25>
    34c8:	19 95       	eicall
    34ca:	ff 91       	pop	r31
    34cc:	ef 91       	pop	r30
    34ce:	bf 91       	pop	r27
    34d0:	af 91       	pop	r26
    34d2:	9f 91       	pop	r25
    34d4:	8f 91       	pop	r24
    34d6:	7f 91       	pop	r23
    34d8:	6f 91       	pop	r22
    34da:	5f 91       	pop	r21
    34dc:	4f 91       	pop	r20
    34de:	3f 91       	pop	r19
    34e0:	2f 91       	pop	r18
    34e2:	0f 90       	pop	r0
    34e4:	0b be       	out	0x3b, r0	; 59
    34e6:	0f 90       	pop	r0
    34e8:	0f be       	out	0x3f, r0	; 63
    34ea:	0f 90       	pop	r0
    34ec:	1f 90       	pop	r1
    34ee:	18 95       	reti

000034f0 <__vector_19>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC0_CCD_vect)      /* Compare or Capture D Interrupt */
    34f0:	1f 92       	push	r1
    34f2:	0f 92       	push	r0
    34f4:	0f b6       	in	r0, 0x3f	; 63
    34f6:	0f 92       	push	r0
    34f8:	11 24       	eor	r1, r1
    34fa:	0b b6       	in	r0, 0x3b	; 59
    34fc:	0f 92       	push	r0
    34fe:	2f 93       	push	r18
    3500:	3f 93       	push	r19
    3502:	4f 93       	push	r20
    3504:	5f 93       	push	r21
    3506:	6f 93       	push	r22
    3508:	7f 93       	push	r23
    350a:	8f 93       	push	r24
    350c:	9f 93       	push	r25
    350e:	af 93       	push	r26
    3510:	bf 93       	push	r27
    3512:	ef 93       	push	r30
    3514:	ff 93       	push	r31
    3516:	e0 91 c8 23 	lds	r30, 0x23C8	; 0x8023c8 <InterruptFuncTable+0x26>
    351a:	f0 91 c9 23 	lds	r31, 0x23C9	; 0x8023c9 <InterruptFuncTable+0x27>
    351e:	30 97       	sbiw	r30, 0x00	; 0
    3520:	29 f0       	breq	.+10     	; 0x352c <__vector_19+0x3c>
    3522:	80 91 be 24 	lds	r24, 0x24BE	; 0x8024be <InterruptSenderTable+0x26>
    3526:	90 91 bf 24 	lds	r25, 0x24BF	; 0x8024bf <InterruptSenderTable+0x27>
    352a:	19 95       	eicall
    352c:	ff 91       	pop	r31
    352e:	ef 91       	pop	r30
    3530:	bf 91       	pop	r27
    3532:	af 91       	pop	r26
    3534:	9f 91       	pop	r25
    3536:	8f 91       	pop	r24
    3538:	7f 91       	pop	r23
    353a:	6f 91       	pop	r22
    353c:	5f 91       	pop	r21
    353e:	4f 91       	pop	r20
    3540:	3f 91       	pop	r19
    3542:	2f 91       	pop	r18
    3544:	0f 90       	pop	r0
    3546:	0b be       	out	0x3b, r0	; 59
    3548:	0f 90       	pop	r0
    354a:	0f be       	out	0x3f, r0	; 63
    354c:	0f 90       	pop	r0
    354e:	1f 90       	pop	r1
    3550:	18 95       	reti

00003552 <__vector_20>:

/* TCC1 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC1_OVF_vect)      /* Overflow Interrupt */
    3552:	1f 92       	push	r1
    3554:	0f 92       	push	r0
    3556:	0f b6       	in	r0, 0x3f	; 63
    3558:	0f 92       	push	r0
    355a:	11 24       	eor	r1, r1
    355c:	0b b6       	in	r0, 0x3b	; 59
    355e:	0f 92       	push	r0
    3560:	2f 93       	push	r18
    3562:	3f 93       	push	r19
    3564:	4f 93       	push	r20
    3566:	5f 93       	push	r21
    3568:	6f 93       	push	r22
    356a:	7f 93       	push	r23
    356c:	8f 93       	push	r24
    356e:	9f 93       	push	r25
    3570:	af 93       	push	r26
    3572:	bf 93       	push	r27
    3574:	ef 93       	push	r30
    3576:	ff 93       	push	r31
    3578:	e0 91 ca 23 	lds	r30, 0x23CA	; 0x8023ca <InterruptFuncTable+0x28>
    357c:	f0 91 cb 23 	lds	r31, 0x23CB	; 0x8023cb <InterruptFuncTable+0x29>
    3580:	30 97       	sbiw	r30, 0x00	; 0
    3582:	29 f0       	breq	.+10     	; 0x358e <__vector_20+0x3c>
    3584:	80 91 c0 24 	lds	r24, 0x24C0	; 0x8024c0 <InterruptSenderTable+0x28>
    3588:	90 91 c1 24 	lds	r25, 0x24C1	; 0x8024c1 <InterruptSenderTable+0x29>
    358c:	19 95       	eicall
    358e:	ff 91       	pop	r31
    3590:	ef 91       	pop	r30
    3592:	bf 91       	pop	r27
    3594:	af 91       	pop	r26
    3596:	9f 91       	pop	r25
    3598:	8f 91       	pop	r24
    359a:	7f 91       	pop	r23
    359c:	6f 91       	pop	r22
    359e:	5f 91       	pop	r21
    35a0:	4f 91       	pop	r20
    35a2:	3f 91       	pop	r19
    35a4:	2f 91       	pop	r18
    35a6:	0f 90       	pop	r0
    35a8:	0b be       	out	0x3b, r0	; 59
    35aa:	0f 90       	pop	r0
    35ac:	0f be       	out	0x3f, r0	; 63
    35ae:	0f 90       	pop	r0
    35b0:	1f 90       	pop	r1
    35b2:	18 95       	reti

000035b4 <__vector_21>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC1_ERR_vect)      /* Error Interrupt */
    35b4:	1f 92       	push	r1
    35b6:	0f 92       	push	r0
    35b8:	0f b6       	in	r0, 0x3f	; 63
    35ba:	0f 92       	push	r0
    35bc:	11 24       	eor	r1, r1
    35be:	0b b6       	in	r0, 0x3b	; 59
    35c0:	0f 92       	push	r0
    35c2:	2f 93       	push	r18
    35c4:	3f 93       	push	r19
    35c6:	4f 93       	push	r20
    35c8:	5f 93       	push	r21
    35ca:	6f 93       	push	r22
    35cc:	7f 93       	push	r23
    35ce:	8f 93       	push	r24
    35d0:	9f 93       	push	r25
    35d2:	af 93       	push	r26
    35d4:	bf 93       	push	r27
    35d6:	ef 93       	push	r30
    35d8:	ff 93       	push	r31
    35da:	e0 91 cc 23 	lds	r30, 0x23CC	; 0x8023cc <InterruptFuncTable+0x2a>
    35de:	f0 91 cd 23 	lds	r31, 0x23CD	; 0x8023cd <InterruptFuncTable+0x2b>
    35e2:	30 97       	sbiw	r30, 0x00	; 0
    35e4:	29 f0       	breq	.+10     	; 0x35f0 <__vector_21+0x3c>
    35e6:	80 91 c2 24 	lds	r24, 0x24C2	; 0x8024c2 <InterruptSenderTable+0x2a>
    35ea:	90 91 c3 24 	lds	r25, 0x24C3	; 0x8024c3 <InterruptSenderTable+0x2b>
    35ee:	19 95       	eicall
    35f0:	ff 91       	pop	r31
    35f2:	ef 91       	pop	r30
    35f4:	bf 91       	pop	r27
    35f6:	af 91       	pop	r26
    35f8:	9f 91       	pop	r25
    35fa:	8f 91       	pop	r24
    35fc:	7f 91       	pop	r23
    35fe:	6f 91       	pop	r22
    3600:	5f 91       	pop	r21
    3602:	4f 91       	pop	r20
    3604:	3f 91       	pop	r19
    3606:	2f 91       	pop	r18
    3608:	0f 90       	pop	r0
    360a:	0b be       	out	0x3b, r0	; 59
    360c:	0f 90       	pop	r0
    360e:	0f be       	out	0x3f, r0	; 63
    3610:	0f 90       	pop	r0
    3612:	1f 90       	pop	r1
    3614:	18 95       	reti

00003616 <__vector_22>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC1_CCA_vect)      /* Compare or Capture A Interrupt */
    3616:	1f 92       	push	r1
    3618:	0f 92       	push	r0
    361a:	0f b6       	in	r0, 0x3f	; 63
    361c:	0f 92       	push	r0
    361e:	11 24       	eor	r1, r1
    3620:	0b b6       	in	r0, 0x3b	; 59
    3622:	0f 92       	push	r0
    3624:	2f 93       	push	r18
    3626:	3f 93       	push	r19
    3628:	4f 93       	push	r20
    362a:	5f 93       	push	r21
    362c:	6f 93       	push	r22
    362e:	7f 93       	push	r23
    3630:	8f 93       	push	r24
    3632:	9f 93       	push	r25
    3634:	af 93       	push	r26
    3636:	bf 93       	push	r27
    3638:	ef 93       	push	r30
    363a:	ff 93       	push	r31
    363c:	e0 91 ce 23 	lds	r30, 0x23CE	; 0x8023ce <InterruptFuncTable+0x2c>
    3640:	f0 91 cf 23 	lds	r31, 0x23CF	; 0x8023cf <InterruptFuncTable+0x2d>
    3644:	30 97       	sbiw	r30, 0x00	; 0
    3646:	29 f0       	breq	.+10     	; 0x3652 <__vector_22+0x3c>
    3648:	80 91 c4 24 	lds	r24, 0x24C4	; 0x8024c4 <InterruptSenderTable+0x2c>
    364c:	90 91 c5 24 	lds	r25, 0x24C5	; 0x8024c5 <InterruptSenderTable+0x2d>
    3650:	19 95       	eicall
    3652:	ff 91       	pop	r31
    3654:	ef 91       	pop	r30
    3656:	bf 91       	pop	r27
    3658:	af 91       	pop	r26
    365a:	9f 91       	pop	r25
    365c:	8f 91       	pop	r24
    365e:	7f 91       	pop	r23
    3660:	6f 91       	pop	r22
    3662:	5f 91       	pop	r21
    3664:	4f 91       	pop	r20
    3666:	3f 91       	pop	r19
    3668:	2f 91       	pop	r18
    366a:	0f 90       	pop	r0
    366c:	0b be       	out	0x3b, r0	; 59
    366e:	0f 90       	pop	r0
    3670:	0f be       	out	0x3f, r0	; 63
    3672:	0f 90       	pop	r0
    3674:	1f 90       	pop	r1
    3676:	18 95       	reti

00003678 <__vector_23>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCC1_CCB_vect)      /* Compare or Capture B Interrupt */
    3678:	1f 92       	push	r1
    367a:	0f 92       	push	r0
    367c:	0f b6       	in	r0, 0x3f	; 63
    367e:	0f 92       	push	r0
    3680:	11 24       	eor	r1, r1
    3682:	0b b6       	in	r0, 0x3b	; 59
    3684:	0f 92       	push	r0
    3686:	2f 93       	push	r18
    3688:	3f 93       	push	r19
    368a:	4f 93       	push	r20
    368c:	5f 93       	push	r21
    368e:	6f 93       	push	r22
    3690:	7f 93       	push	r23
    3692:	8f 93       	push	r24
    3694:	9f 93       	push	r25
    3696:	af 93       	push	r26
    3698:	bf 93       	push	r27
    369a:	ef 93       	push	r30
    369c:	ff 93       	push	r31
    369e:	e0 91 d0 23 	lds	r30, 0x23D0	; 0x8023d0 <InterruptFuncTable+0x2e>
    36a2:	f0 91 d1 23 	lds	r31, 0x23D1	; 0x8023d1 <InterruptFuncTable+0x2f>
    36a6:	30 97       	sbiw	r30, 0x00	; 0
    36a8:	29 f0       	breq	.+10     	; 0x36b4 <__vector_23+0x3c>
    36aa:	80 91 c6 24 	lds	r24, 0x24C6	; 0x8024c6 <InterruptSenderTable+0x2e>
    36ae:	90 91 c7 24 	lds	r25, 0x24C7	; 0x8024c7 <InterruptSenderTable+0x2f>
    36b2:	19 95       	eicall
    36b4:	ff 91       	pop	r31
    36b6:	ef 91       	pop	r30
    36b8:	bf 91       	pop	r27
    36ba:	af 91       	pop	r26
    36bc:	9f 91       	pop	r25
    36be:	8f 91       	pop	r24
    36c0:	7f 91       	pop	r23
    36c2:	6f 91       	pop	r22
    36c4:	5f 91       	pop	r21
    36c6:	4f 91       	pop	r20
    36c8:	3f 91       	pop	r19
    36ca:	2f 91       	pop	r18
    36cc:	0f 90       	pop	r0
    36ce:	0b be       	out	0x3b, r0	; 59
    36d0:	0f 90       	pop	r0
    36d2:	0f be       	out	0x3f, r0	; 63
    36d4:	0f 90       	pop	r0
    36d6:	1f 90       	pop	r1
    36d8:	18 95       	reti

000036da <__vector_24>:

/* SPIC interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(SPIC_INT_vect)      /* SPI Interrupt */
    36da:	1f 92       	push	r1
    36dc:	0f 92       	push	r0
    36de:	0f b6       	in	r0, 0x3f	; 63
    36e0:	0f 92       	push	r0
    36e2:	11 24       	eor	r1, r1
    36e4:	0b b6       	in	r0, 0x3b	; 59
    36e6:	0f 92       	push	r0
    36e8:	2f 93       	push	r18
    36ea:	3f 93       	push	r19
    36ec:	4f 93       	push	r20
    36ee:	5f 93       	push	r21
    36f0:	6f 93       	push	r22
    36f2:	7f 93       	push	r23
    36f4:	8f 93       	push	r24
    36f6:	9f 93       	push	r25
    36f8:	af 93       	push	r26
    36fa:	bf 93       	push	r27
    36fc:	ef 93       	push	r30
    36fe:	ff 93       	push	r31
    3700:	e0 91 d2 23 	lds	r30, 0x23D2	; 0x8023d2 <InterruptFuncTable+0x30>
    3704:	f0 91 d3 23 	lds	r31, 0x23D3	; 0x8023d3 <InterruptFuncTable+0x31>
    3708:	30 97       	sbiw	r30, 0x00	; 0
    370a:	29 f0       	breq	.+10     	; 0x3716 <__vector_24+0x3c>
    370c:	80 91 c8 24 	lds	r24, 0x24C8	; 0x8024c8 <InterruptSenderTable+0x30>
    3710:	90 91 c9 24 	lds	r25, 0x24C9	; 0x8024c9 <InterruptSenderTable+0x31>
    3714:	19 95       	eicall
    3716:	ff 91       	pop	r31
    3718:	ef 91       	pop	r30
    371a:	bf 91       	pop	r27
    371c:	af 91       	pop	r26
    371e:	9f 91       	pop	r25
    3720:	8f 91       	pop	r24
    3722:	7f 91       	pop	r23
    3724:	6f 91       	pop	r22
    3726:	5f 91       	pop	r21
    3728:	4f 91       	pop	r20
    372a:	3f 91       	pop	r19
    372c:	2f 91       	pop	r18
    372e:	0f 90       	pop	r0
    3730:	0b be       	out	0x3b, r0	; 59
    3732:	0f 90       	pop	r0
    3734:	0f be       	out	0x3f, r0	; 63
    3736:	0f 90       	pop	r0
    3738:	1f 90       	pop	r1
    373a:	18 95       	reti

0000373c <__vector_25>:

/* USARTC0 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTC0_RXC_vect)      /* Reception Complete Interrupt */
    373c:	1f 92       	push	r1
    373e:	0f 92       	push	r0
    3740:	0f b6       	in	r0, 0x3f	; 63
    3742:	0f 92       	push	r0
    3744:	11 24       	eor	r1, r1
    3746:	0b b6       	in	r0, 0x3b	; 59
    3748:	0f 92       	push	r0
    374a:	2f 93       	push	r18
    374c:	3f 93       	push	r19
    374e:	4f 93       	push	r20
    3750:	5f 93       	push	r21
    3752:	6f 93       	push	r22
    3754:	7f 93       	push	r23
    3756:	8f 93       	push	r24
    3758:	9f 93       	push	r25
    375a:	af 93       	push	r26
    375c:	bf 93       	push	r27
    375e:	ef 93       	push	r30
    3760:	ff 93       	push	r31
    3762:	e0 91 d4 23 	lds	r30, 0x23D4	; 0x8023d4 <InterruptFuncTable+0x32>
    3766:	f0 91 d5 23 	lds	r31, 0x23D5	; 0x8023d5 <InterruptFuncTable+0x33>
    376a:	30 97       	sbiw	r30, 0x00	; 0
    376c:	29 f0       	breq	.+10     	; 0x3778 <__vector_25+0x3c>
    376e:	80 91 ca 24 	lds	r24, 0x24CA	; 0x8024ca <InterruptSenderTable+0x32>
    3772:	90 91 cb 24 	lds	r25, 0x24CB	; 0x8024cb <InterruptSenderTable+0x33>
    3776:	19 95       	eicall
    3778:	ff 91       	pop	r31
    377a:	ef 91       	pop	r30
    377c:	bf 91       	pop	r27
    377e:	af 91       	pop	r26
    3780:	9f 91       	pop	r25
    3782:	8f 91       	pop	r24
    3784:	7f 91       	pop	r23
    3786:	6f 91       	pop	r22
    3788:	5f 91       	pop	r21
    378a:	4f 91       	pop	r20
    378c:	3f 91       	pop	r19
    378e:	2f 91       	pop	r18
    3790:	0f 90       	pop	r0
    3792:	0b be       	out	0x3b, r0	; 59
    3794:	0f 90       	pop	r0
    3796:	0f be       	out	0x3f, r0	; 63
    3798:	0f 90       	pop	r0
    379a:	1f 90       	pop	r1
    379c:	18 95       	reti

0000379e <__vector_26>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTC0_DRE_vect)      /* Data Register Empty Interrupt */
    379e:	1f 92       	push	r1
    37a0:	0f 92       	push	r0
    37a2:	0f b6       	in	r0, 0x3f	; 63
    37a4:	0f 92       	push	r0
    37a6:	11 24       	eor	r1, r1
    37a8:	0b b6       	in	r0, 0x3b	; 59
    37aa:	0f 92       	push	r0
    37ac:	2f 93       	push	r18
    37ae:	3f 93       	push	r19
    37b0:	4f 93       	push	r20
    37b2:	5f 93       	push	r21
    37b4:	6f 93       	push	r22
    37b6:	7f 93       	push	r23
    37b8:	8f 93       	push	r24
    37ba:	9f 93       	push	r25
    37bc:	af 93       	push	r26
    37be:	bf 93       	push	r27
    37c0:	ef 93       	push	r30
    37c2:	ff 93       	push	r31
    37c4:	e0 91 d6 23 	lds	r30, 0x23D6	; 0x8023d6 <InterruptFuncTable+0x34>
    37c8:	f0 91 d7 23 	lds	r31, 0x23D7	; 0x8023d7 <InterruptFuncTable+0x35>
    37cc:	30 97       	sbiw	r30, 0x00	; 0
    37ce:	29 f0       	breq	.+10     	; 0x37da <__vector_26+0x3c>
    37d0:	80 91 cc 24 	lds	r24, 0x24CC	; 0x8024cc <InterruptSenderTable+0x34>
    37d4:	90 91 cd 24 	lds	r25, 0x24CD	; 0x8024cd <InterruptSenderTable+0x35>
    37d8:	19 95       	eicall
    37da:	ff 91       	pop	r31
    37dc:	ef 91       	pop	r30
    37de:	bf 91       	pop	r27
    37e0:	af 91       	pop	r26
    37e2:	9f 91       	pop	r25
    37e4:	8f 91       	pop	r24
    37e6:	7f 91       	pop	r23
    37e8:	6f 91       	pop	r22
    37ea:	5f 91       	pop	r21
    37ec:	4f 91       	pop	r20
    37ee:	3f 91       	pop	r19
    37f0:	2f 91       	pop	r18
    37f2:	0f 90       	pop	r0
    37f4:	0b be       	out	0x3b, r0	; 59
    37f6:	0f 90       	pop	r0
    37f8:	0f be       	out	0x3f, r0	; 63
    37fa:	0f 90       	pop	r0
    37fc:	1f 90       	pop	r1
    37fe:	18 95       	reti

00003800 <__vector_27>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTC0_TXC_vect)      /* Transmission Complete Interrupt */
    3800:	1f 92       	push	r1
    3802:	0f 92       	push	r0
    3804:	0f b6       	in	r0, 0x3f	; 63
    3806:	0f 92       	push	r0
    3808:	11 24       	eor	r1, r1
    380a:	0b b6       	in	r0, 0x3b	; 59
    380c:	0f 92       	push	r0
    380e:	2f 93       	push	r18
    3810:	3f 93       	push	r19
    3812:	4f 93       	push	r20
    3814:	5f 93       	push	r21
    3816:	6f 93       	push	r22
    3818:	7f 93       	push	r23
    381a:	8f 93       	push	r24
    381c:	9f 93       	push	r25
    381e:	af 93       	push	r26
    3820:	bf 93       	push	r27
    3822:	ef 93       	push	r30
    3824:	ff 93       	push	r31
    3826:	e0 91 d8 23 	lds	r30, 0x23D8	; 0x8023d8 <InterruptFuncTable+0x36>
    382a:	f0 91 d9 23 	lds	r31, 0x23D9	; 0x8023d9 <InterruptFuncTable+0x37>
    382e:	30 97       	sbiw	r30, 0x00	; 0
    3830:	29 f0       	breq	.+10     	; 0x383c <__vector_27+0x3c>
    3832:	80 91 ce 24 	lds	r24, 0x24CE	; 0x8024ce <InterruptSenderTable+0x36>
    3836:	90 91 cf 24 	lds	r25, 0x24CF	; 0x8024cf <InterruptSenderTable+0x37>
    383a:	19 95       	eicall
    383c:	ff 91       	pop	r31
    383e:	ef 91       	pop	r30
    3840:	bf 91       	pop	r27
    3842:	af 91       	pop	r26
    3844:	9f 91       	pop	r25
    3846:	8f 91       	pop	r24
    3848:	7f 91       	pop	r23
    384a:	6f 91       	pop	r22
    384c:	5f 91       	pop	r21
    384e:	4f 91       	pop	r20
    3850:	3f 91       	pop	r19
    3852:	2f 91       	pop	r18
    3854:	0f 90       	pop	r0
    3856:	0b be       	out	0x3b, r0	; 59
    3858:	0f 90       	pop	r0
    385a:	0f be       	out	0x3f, r0	; 63
    385c:	0f 90       	pop	r0
    385e:	1f 90       	pop	r1
    3860:	18 95       	reti

00003862 <__vector_28>:

/* USARTC1 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTC1_RXC_vect)      /* Reception Complete Interrupt */
    3862:	1f 92       	push	r1
    3864:	0f 92       	push	r0
    3866:	0f b6       	in	r0, 0x3f	; 63
    3868:	0f 92       	push	r0
    386a:	11 24       	eor	r1, r1
    386c:	0b b6       	in	r0, 0x3b	; 59
    386e:	0f 92       	push	r0
    3870:	2f 93       	push	r18
    3872:	3f 93       	push	r19
    3874:	4f 93       	push	r20
    3876:	5f 93       	push	r21
    3878:	6f 93       	push	r22
    387a:	7f 93       	push	r23
    387c:	8f 93       	push	r24
    387e:	9f 93       	push	r25
    3880:	af 93       	push	r26
    3882:	bf 93       	push	r27
    3884:	ef 93       	push	r30
    3886:	ff 93       	push	r31
    3888:	e0 91 da 23 	lds	r30, 0x23DA	; 0x8023da <InterruptFuncTable+0x38>
    388c:	f0 91 db 23 	lds	r31, 0x23DB	; 0x8023db <InterruptFuncTable+0x39>
    3890:	30 97       	sbiw	r30, 0x00	; 0
    3892:	29 f0       	breq	.+10     	; 0x389e <__vector_28+0x3c>
    3894:	80 91 d0 24 	lds	r24, 0x24D0	; 0x8024d0 <InterruptSenderTable+0x38>
    3898:	90 91 d1 24 	lds	r25, 0x24D1	; 0x8024d1 <InterruptSenderTable+0x39>
    389c:	19 95       	eicall
    389e:	ff 91       	pop	r31
    38a0:	ef 91       	pop	r30
    38a2:	bf 91       	pop	r27
    38a4:	af 91       	pop	r26
    38a6:	9f 91       	pop	r25
    38a8:	8f 91       	pop	r24
    38aa:	7f 91       	pop	r23
    38ac:	6f 91       	pop	r22
    38ae:	5f 91       	pop	r21
    38b0:	4f 91       	pop	r20
    38b2:	3f 91       	pop	r19
    38b4:	2f 91       	pop	r18
    38b6:	0f 90       	pop	r0
    38b8:	0b be       	out	0x3b, r0	; 59
    38ba:	0f 90       	pop	r0
    38bc:	0f be       	out	0x3f, r0	; 63
    38be:	0f 90       	pop	r0
    38c0:	1f 90       	pop	r1
    38c2:	18 95       	reti

000038c4 <__vector_29>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTC1_DRE_vect)      /* Data Register Empty Interrupt */
    38c4:	1f 92       	push	r1
    38c6:	0f 92       	push	r0
    38c8:	0f b6       	in	r0, 0x3f	; 63
    38ca:	0f 92       	push	r0
    38cc:	11 24       	eor	r1, r1
    38ce:	0b b6       	in	r0, 0x3b	; 59
    38d0:	0f 92       	push	r0
    38d2:	2f 93       	push	r18
    38d4:	3f 93       	push	r19
    38d6:	4f 93       	push	r20
    38d8:	5f 93       	push	r21
    38da:	6f 93       	push	r22
    38dc:	7f 93       	push	r23
    38de:	8f 93       	push	r24
    38e0:	9f 93       	push	r25
    38e2:	af 93       	push	r26
    38e4:	bf 93       	push	r27
    38e6:	ef 93       	push	r30
    38e8:	ff 93       	push	r31
    38ea:	e0 91 dc 23 	lds	r30, 0x23DC	; 0x8023dc <InterruptFuncTable+0x3a>
    38ee:	f0 91 dd 23 	lds	r31, 0x23DD	; 0x8023dd <InterruptFuncTable+0x3b>
    38f2:	30 97       	sbiw	r30, 0x00	; 0
    38f4:	29 f0       	breq	.+10     	; 0x3900 <__vector_29+0x3c>
    38f6:	80 91 d2 24 	lds	r24, 0x24D2	; 0x8024d2 <InterruptSenderTable+0x3a>
    38fa:	90 91 d3 24 	lds	r25, 0x24D3	; 0x8024d3 <InterruptSenderTable+0x3b>
    38fe:	19 95       	eicall
    3900:	ff 91       	pop	r31
    3902:	ef 91       	pop	r30
    3904:	bf 91       	pop	r27
    3906:	af 91       	pop	r26
    3908:	9f 91       	pop	r25
    390a:	8f 91       	pop	r24
    390c:	7f 91       	pop	r23
    390e:	6f 91       	pop	r22
    3910:	5f 91       	pop	r21
    3912:	4f 91       	pop	r20
    3914:	3f 91       	pop	r19
    3916:	2f 91       	pop	r18
    3918:	0f 90       	pop	r0
    391a:	0b be       	out	0x3b, r0	; 59
    391c:	0f 90       	pop	r0
    391e:	0f be       	out	0x3f, r0	; 63
    3920:	0f 90       	pop	r0
    3922:	1f 90       	pop	r1
    3924:	18 95       	reti

00003926 <__vector_30>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTC1_TXC_vect)      /* Transmission Complete Interrupt */
    3926:	1f 92       	push	r1
    3928:	0f 92       	push	r0
    392a:	0f b6       	in	r0, 0x3f	; 63
    392c:	0f 92       	push	r0
    392e:	11 24       	eor	r1, r1
    3930:	0b b6       	in	r0, 0x3b	; 59
    3932:	0f 92       	push	r0
    3934:	2f 93       	push	r18
    3936:	3f 93       	push	r19
    3938:	4f 93       	push	r20
    393a:	5f 93       	push	r21
    393c:	6f 93       	push	r22
    393e:	7f 93       	push	r23
    3940:	8f 93       	push	r24
    3942:	9f 93       	push	r25
    3944:	af 93       	push	r26
    3946:	bf 93       	push	r27
    3948:	ef 93       	push	r30
    394a:	ff 93       	push	r31
    394c:	e0 91 de 23 	lds	r30, 0x23DE	; 0x8023de <InterruptFuncTable+0x3c>
    3950:	f0 91 df 23 	lds	r31, 0x23DF	; 0x8023df <InterruptFuncTable+0x3d>
    3954:	30 97       	sbiw	r30, 0x00	; 0
    3956:	29 f0       	breq	.+10     	; 0x3962 <__vector_30+0x3c>
    3958:	80 91 d4 24 	lds	r24, 0x24D4	; 0x8024d4 <InterruptSenderTable+0x3c>
    395c:	90 91 d5 24 	lds	r25, 0x24D5	; 0x8024d5 <InterruptSenderTable+0x3d>
    3960:	19 95       	eicall
    3962:	ff 91       	pop	r31
    3964:	ef 91       	pop	r30
    3966:	bf 91       	pop	r27
    3968:	af 91       	pop	r26
    396a:	9f 91       	pop	r25
    396c:	8f 91       	pop	r24
    396e:	7f 91       	pop	r23
    3970:	6f 91       	pop	r22
    3972:	5f 91       	pop	r21
    3974:	4f 91       	pop	r20
    3976:	3f 91       	pop	r19
    3978:	2f 91       	pop	r18
    397a:	0f 90       	pop	r0
    397c:	0b be       	out	0x3b, r0	; 59
    397e:	0f 90       	pop	r0
    3980:	0f be       	out	0x3f, r0	; 63
    3982:	0f 90       	pop	r0
    3984:	1f 90       	pop	r1
    3986:	18 95       	reti

00003988 <__vector_31>:

/* AES interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(AES_INT_vect)      /* AES Interrupt */
    3988:	1f 92       	push	r1
    398a:	0f 92       	push	r0
    398c:	0f b6       	in	r0, 0x3f	; 63
    398e:	0f 92       	push	r0
    3990:	11 24       	eor	r1, r1
    3992:	0b b6       	in	r0, 0x3b	; 59
    3994:	0f 92       	push	r0
    3996:	2f 93       	push	r18
    3998:	3f 93       	push	r19
    399a:	4f 93       	push	r20
    399c:	5f 93       	push	r21
    399e:	6f 93       	push	r22
    39a0:	7f 93       	push	r23
    39a2:	8f 93       	push	r24
    39a4:	9f 93       	push	r25
    39a6:	af 93       	push	r26
    39a8:	bf 93       	push	r27
    39aa:	ef 93       	push	r30
    39ac:	ff 93       	push	r31
    39ae:	e0 91 e0 23 	lds	r30, 0x23E0	; 0x8023e0 <InterruptFuncTable+0x3e>
    39b2:	f0 91 e1 23 	lds	r31, 0x23E1	; 0x8023e1 <InterruptFuncTable+0x3f>
    39b6:	30 97       	sbiw	r30, 0x00	; 0
    39b8:	29 f0       	breq	.+10     	; 0x39c4 <__vector_31+0x3c>
    39ba:	80 91 d6 24 	lds	r24, 0x24D6	; 0x8024d6 <InterruptSenderTable+0x3e>
    39be:	90 91 d7 24 	lds	r25, 0x24D7	; 0x8024d7 <InterruptSenderTable+0x3f>
    39c2:	19 95       	eicall
    39c4:	ff 91       	pop	r31
    39c6:	ef 91       	pop	r30
    39c8:	bf 91       	pop	r27
    39ca:	af 91       	pop	r26
    39cc:	9f 91       	pop	r25
    39ce:	8f 91       	pop	r24
    39d0:	7f 91       	pop	r23
    39d2:	6f 91       	pop	r22
    39d4:	5f 91       	pop	r21
    39d6:	4f 91       	pop	r20
    39d8:	3f 91       	pop	r19
    39da:	2f 91       	pop	r18
    39dc:	0f 90       	pop	r0
    39de:	0b be       	out	0x3b, r0	; 59
    39e0:	0f 90       	pop	r0
    39e2:	0f be       	out	0x3f, r0	; 63
    39e4:	0f 90       	pop	r0
    39e6:	1f 90       	pop	r1
    39e8:	18 95       	reti

000039ea <__vector_32>:

/* NVM interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(NVM_EE_vect)      /* EE Interrupt */
    39ea:	1f 92       	push	r1
    39ec:	0f 92       	push	r0
    39ee:	0f b6       	in	r0, 0x3f	; 63
    39f0:	0f 92       	push	r0
    39f2:	11 24       	eor	r1, r1
    39f4:	0b b6       	in	r0, 0x3b	; 59
    39f6:	0f 92       	push	r0
    39f8:	2f 93       	push	r18
    39fa:	3f 93       	push	r19
    39fc:	4f 93       	push	r20
    39fe:	5f 93       	push	r21
    3a00:	6f 93       	push	r22
    3a02:	7f 93       	push	r23
    3a04:	8f 93       	push	r24
    3a06:	9f 93       	push	r25
    3a08:	af 93       	push	r26
    3a0a:	bf 93       	push	r27
    3a0c:	ef 93       	push	r30
    3a0e:	ff 93       	push	r31
    3a10:	e0 91 e2 23 	lds	r30, 0x23E2	; 0x8023e2 <InterruptFuncTable+0x40>
    3a14:	f0 91 e3 23 	lds	r31, 0x23E3	; 0x8023e3 <InterruptFuncTable+0x41>
    3a18:	30 97       	sbiw	r30, 0x00	; 0
    3a1a:	29 f0       	breq	.+10     	; 0x3a26 <__vector_32+0x3c>
    3a1c:	80 91 d8 24 	lds	r24, 0x24D8	; 0x8024d8 <InterruptSenderTable+0x40>
    3a20:	90 91 d9 24 	lds	r25, 0x24D9	; 0x8024d9 <InterruptSenderTable+0x41>
    3a24:	19 95       	eicall
    3a26:	ff 91       	pop	r31
    3a28:	ef 91       	pop	r30
    3a2a:	bf 91       	pop	r27
    3a2c:	af 91       	pop	r26
    3a2e:	9f 91       	pop	r25
    3a30:	8f 91       	pop	r24
    3a32:	7f 91       	pop	r23
    3a34:	6f 91       	pop	r22
    3a36:	5f 91       	pop	r21
    3a38:	4f 91       	pop	r20
    3a3a:	3f 91       	pop	r19
    3a3c:	2f 91       	pop	r18
    3a3e:	0f 90       	pop	r0
    3a40:	0b be       	out	0x3b, r0	; 59
    3a42:	0f 90       	pop	r0
    3a44:	0f be       	out	0x3f, r0	; 63
    3a46:	0f 90       	pop	r0
    3a48:	1f 90       	pop	r1
    3a4a:	18 95       	reti

00003a4c <__vector_33>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(NVM_SPM_vect)      /* SPM Interrupt */
    3a4c:	1f 92       	push	r1
    3a4e:	0f 92       	push	r0
    3a50:	0f b6       	in	r0, 0x3f	; 63
    3a52:	0f 92       	push	r0
    3a54:	11 24       	eor	r1, r1
    3a56:	0b b6       	in	r0, 0x3b	; 59
    3a58:	0f 92       	push	r0
    3a5a:	2f 93       	push	r18
    3a5c:	3f 93       	push	r19
    3a5e:	4f 93       	push	r20
    3a60:	5f 93       	push	r21
    3a62:	6f 93       	push	r22
    3a64:	7f 93       	push	r23
    3a66:	8f 93       	push	r24
    3a68:	9f 93       	push	r25
    3a6a:	af 93       	push	r26
    3a6c:	bf 93       	push	r27
    3a6e:	ef 93       	push	r30
    3a70:	ff 93       	push	r31
    3a72:	e0 91 e4 23 	lds	r30, 0x23E4	; 0x8023e4 <InterruptFuncTable+0x42>
    3a76:	f0 91 e5 23 	lds	r31, 0x23E5	; 0x8023e5 <InterruptFuncTable+0x43>
    3a7a:	30 97       	sbiw	r30, 0x00	; 0
    3a7c:	29 f0       	breq	.+10     	; 0x3a88 <__vector_33+0x3c>
    3a7e:	80 91 da 24 	lds	r24, 0x24DA	; 0x8024da <InterruptSenderTable+0x42>
    3a82:	90 91 db 24 	lds	r25, 0x24DB	; 0x8024db <InterruptSenderTable+0x43>
    3a86:	19 95       	eicall
    3a88:	ff 91       	pop	r31
    3a8a:	ef 91       	pop	r30
    3a8c:	bf 91       	pop	r27
    3a8e:	af 91       	pop	r26
    3a90:	9f 91       	pop	r25
    3a92:	8f 91       	pop	r24
    3a94:	7f 91       	pop	r23
    3a96:	6f 91       	pop	r22
    3a98:	5f 91       	pop	r21
    3a9a:	4f 91       	pop	r20
    3a9c:	3f 91       	pop	r19
    3a9e:	2f 91       	pop	r18
    3aa0:	0f 90       	pop	r0
    3aa2:	0b be       	out	0x3b, r0	; 59
    3aa4:	0f 90       	pop	r0
    3aa6:	0f be       	out	0x3f, r0	; 63
    3aa8:	0f 90       	pop	r0
    3aaa:	1f 90       	pop	r1
    3aac:	18 95       	reti

00003aae <__vector_34>:

/* PORTB interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTB_INT0_vect)      /* External Interrupt 0 */
    3aae:	1f 92       	push	r1
    3ab0:	0f 92       	push	r0
    3ab2:	0f b6       	in	r0, 0x3f	; 63
    3ab4:	0f 92       	push	r0
    3ab6:	11 24       	eor	r1, r1
    3ab8:	0b b6       	in	r0, 0x3b	; 59
    3aba:	0f 92       	push	r0
    3abc:	2f 93       	push	r18
    3abe:	3f 93       	push	r19
    3ac0:	4f 93       	push	r20
    3ac2:	5f 93       	push	r21
    3ac4:	6f 93       	push	r22
    3ac6:	7f 93       	push	r23
    3ac8:	8f 93       	push	r24
    3aca:	9f 93       	push	r25
    3acc:	af 93       	push	r26
    3ace:	bf 93       	push	r27
    3ad0:	ef 93       	push	r30
    3ad2:	ff 93       	push	r31
    3ad4:	e0 91 e6 23 	lds	r30, 0x23E6	; 0x8023e6 <InterruptFuncTable+0x44>
    3ad8:	f0 91 e7 23 	lds	r31, 0x23E7	; 0x8023e7 <InterruptFuncTable+0x45>
    3adc:	30 97       	sbiw	r30, 0x00	; 0
    3ade:	29 f0       	breq	.+10     	; 0x3aea <__vector_34+0x3c>
    3ae0:	80 91 dc 24 	lds	r24, 0x24DC	; 0x8024dc <InterruptSenderTable+0x44>
    3ae4:	90 91 dd 24 	lds	r25, 0x24DD	; 0x8024dd <InterruptSenderTable+0x45>
    3ae8:	19 95       	eicall
    3aea:	ff 91       	pop	r31
    3aec:	ef 91       	pop	r30
    3aee:	bf 91       	pop	r27
    3af0:	af 91       	pop	r26
    3af2:	9f 91       	pop	r25
    3af4:	8f 91       	pop	r24
    3af6:	7f 91       	pop	r23
    3af8:	6f 91       	pop	r22
    3afa:	5f 91       	pop	r21
    3afc:	4f 91       	pop	r20
    3afe:	3f 91       	pop	r19
    3b00:	2f 91       	pop	r18
    3b02:	0f 90       	pop	r0
    3b04:	0b be       	out	0x3b, r0	; 59
    3b06:	0f 90       	pop	r0
    3b08:	0f be       	out	0x3f, r0	; 63
    3b0a:	0f 90       	pop	r0
    3b0c:	1f 90       	pop	r1
    3b0e:	18 95       	reti

00003b10 <__vector_35>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTB_INT1_vect)      /* External Interrupt 1 */
    3b10:	1f 92       	push	r1
    3b12:	0f 92       	push	r0
    3b14:	0f b6       	in	r0, 0x3f	; 63
    3b16:	0f 92       	push	r0
    3b18:	11 24       	eor	r1, r1
    3b1a:	0b b6       	in	r0, 0x3b	; 59
    3b1c:	0f 92       	push	r0
    3b1e:	2f 93       	push	r18
    3b20:	3f 93       	push	r19
    3b22:	4f 93       	push	r20
    3b24:	5f 93       	push	r21
    3b26:	6f 93       	push	r22
    3b28:	7f 93       	push	r23
    3b2a:	8f 93       	push	r24
    3b2c:	9f 93       	push	r25
    3b2e:	af 93       	push	r26
    3b30:	bf 93       	push	r27
    3b32:	ef 93       	push	r30
    3b34:	ff 93       	push	r31
    3b36:	e0 91 e8 23 	lds	r30, 0x23E8	; 0x8023e8 <InterruptFuncTable+0x46>
    3b3a:	f0 91 e9 23 	lds	r31, 0x23E9	; 0x8023e9 <InterruptFuncTable+0x47>
    3b3e:	30 97       	sbiw	r30, 0x00	; 0
    3b40:	29 f0       	breq	.+10     	; 0x3b4c <__vector_35+0x3c>
    3b42:	80 91 de 24 	lds	r24, 0x24DE	; 0x8024de <InterruptSenderTable+0x46>
    3b46:	90 91 df 24 	lds	r25, 0x24DF	; 0x8024df <InterruptSenderTable+0x47>
    3b4a:	19 95       	eicall
    3b4c:	ff 91       	pop	r31
    3b4e:	ef 91       	pop	r30
    3b50:	bf 91       	pop	r27
    3b52:	af 91       	pop	r26
    3b54:	9f 91       	pop	r25
    3b56:	8f 91       	pop	r24
    3b58:	7f 91       	pop	r23
    3b5a:	6f 91       	pop	r22
    3b5c:	5f 91       	pop	r21
    3b5e:	4f 91       	pop	r20
    3b60:	3f 91       	pop	r19
    3b62:	2f 91       	pop	r18
    3b64:	0f 90       	pop	r0
    3b66:	0b be       	out	0x3b, r0	; 59
    3b68:	0f 90       	pop	r0
    3b6a:	0f be       	out	0x3f, r0	; 63
    3b6c:	0f 90       	pop	r0
    3b6e:	1f 90       	pop	r1
    3b70:	18 95       	reti

00003b72 <__vector_36>:

/* ACB interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ACB_AC0_vect)      /* AC0 Interrupt */
    3b72:	1f 92       	push	r1
    3b74:	0f 92       	push	r0
    3b76:	0f b6       	in	r0, 0x3f	; 63
    3b78:	0f 92       	push	r0
    3b7a:	11 24       	eor	r1, r1
    3b7c:	0b b6       	in	r0, 0x3b	; 59
    3b7e:	0f 92       	push	r0
    3b80:	2f 93       	push	r18
    3b82:	3f 93       	push	r19
    3b84:	4f 93       	push	r20
    3b86:	5f 93       	push	r21
    3b88:	6f 93       	push	r22
    3b8a:	7f 93       	push	r23
    3b8c:	8f 93       	push	r24
    3b8e:	9f 93       	push	r25
    3b90:	af 93       	push	r26
    3b92:	bf 93       	push	r27
    3b94:	ef 93       	push	r30
    3b96:	ff 93       	push	r31
    3b98:	e0 91 ea 23 	lds	r30, 0x23EA	; 0x8023ea <InterruptFuncTable+0x48>
    3b9c:	f0 91 eb 23 	lds	r31, 0x23EB	; 0x8023eb <InterruptFuncTable+0x49>
    3ba0:	30 97       	sbiw	r30, 0x00	; 0
    3ba2:	29 f0       	breq	.+10     	; 0x3bae <__vector_36+0x3c>
    3ba4:	80 91 e0 24 	lds	r24, 0x24E0	; 0x8024e0 <InterruptSenderTable+0x48>
    3ba8:	90 91 e1 24 	lds	r25, 0x24E1	; 0x8024e1 <InterruptSenderTable+0x49>
    3bac:	19 95       	eicall
    3bae:	ff 91       	pop	r31
    3bb0:	ef 91       	pop	r30
    3bb2:	bf 91       	pop	r27
    3bb4:	af 91       	pop	r26
    3bb6:	9f 91       	pop	r25
    3bb8:	8f 91       	pop	r24
    3bba:	7f 91       	pop	r23
    3bbc:	6f 91       	pop	r22
    3bbe:	5f 91       	pop	r21
    3bc0:	4f 91       	pop	r20
    3bc2:	3f 91       	pop	r19
    3bc4:	2f 91       	pop	r18
    3bc6:	0f 90       	pop	r0
    3bc8:	0b be       	out	0x3b, r0	; 59
    3bca:	0f 90       	pop	r0
    3bcc:	0f be       	out	0x3f, r0	; 63
    3bce:	0f 90       	pop	r0
    3bd0:	1f 90       	pop	r1
    3bd2:	18 95       	reti

00003bd4 <__vector_37>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ACB_AC1_vect)      /* AC1 Interrupt */
    3bd4:	1f 92       	push	r1
    3bd6:	0f 92       	push	r0
    3bd8:	0f b6       	in	r0, 0x3f	; 63
    3bda:	0f 92       	push	r0
    3bdc:	11 24       	eor	r1, r1
    3bde:	0b b6       	in	r0, 0x3b	; 59
    3be0:	0f 92       	push	r0
    3be2:	2f 93       	push	r18
    3be4:	3f 93       	push	r19
    3be6:	4f 93       	push	r20
    3be8:	5f 93       	push	r21
    3bea:	6f 93       	push	r22
    3bec:	7f 93       	push	r23
    3bee:	8f 93       	push	r24
    3bf0:	9f 93       	push	r25
    3bf2:	af 93       	push	r26
    3bf4:	bf 93       	push	r27
    3bf6:	ef 93       	push	r30
    3bf8:	ff 93       	push	r31
    3bfa:	e0 91 ec 23 	lds	r30, 0x23EC	; 0x8023ec <InterruptFuncTable+0x4a>
    3bfe:	f0 91 ed 23 	lds	r31, 0x23ED	; 0x8023ed <InterruptFuncTable+0x4b>
    3c02:	30 97       	sbiw	r30, 0x00	; 0
    3c04:	29 f0       	breq	.+10     	; 0x3c10 <__vector_37+0x3c>
    3c06:	80 91 e2 24 	lds	r24, 0x24E2	; 0x8024e2 <InterruptSenderTable+0x4a>
    3c0a:	90 91 e3 24 	lds	r25, 0x24E3	; 0x8024e3 <InterruptSenderTable+0x4b>
    3c0e:	19 95       	eicall
    3c10:	ff 91       	pop	r31
    3c12:	ef 91       	pop	r30
    3c14:	bf 91       	pop	r27
    3c16:	af 91       	pop	r26
    3c18:	9f 91       	pop	r25
    3c1a:	8f 91       	pop	r24
    3c1c:	7f 91       	pop	r23
    3c1e:	6f 91       	pop	r22
    3c20:	5f 91       	pop	r21
    3c22:	4f 91       	pop	r20
    3c24:	3f 91       	pop	r19
    3c26:	2f 91       	pop	r18
    3c28:	0f 90       	pop	r0
    3c2a:	0b be       	out	0x3b, r0	; 59
    3c2c:	0f 90       	pop	r0
    3c2e:	0f be       	out	0x3f, r0	; 63
    3c30:	0f 90       	pop	r0
    3c32:	1f 90       	pop	r1
    3c34:	18 95       	reti

00003c36 <__vector_38>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ACB_ACW_vect)      /* ACW Window Mode Interrupt */
    3c36:	1f 92       	push	r1
    3c38:	0f 92       	push	r0
    3c3a:	0f b6       	in	r0, 0x3f	; 63
    3c3c:	0f 92       	push	r0
    3c3e:	11 24       	eor	r1, r1
    3c40:	0b b6       	in	r0, 0x3b	; 59
    3c42:	0f 92       	push	r0
    3c44:	2f 93       	push	r18
    3c46:	3f 93       	push	r19
    3c48:	4f 93       	push	r20
    3c4a:	5f 93       	push	r21
    3c4c:	6f 93       	push	r22
    3c4e:	7f 93       	push	r23
    3c50:	8f 93       	push	r24
    3c52:	9f 93       	push	r25
    3c54:	af 93       	push	r26
    3c56:	bf 93       	push	r27
    3c58:	ef 93       	push	r30
    3c5a:	ff 93       	push	r31
    3c5c:	e0 91 ee 23 	lds	r30, 0x23EE	; 0x8023ee <InterruptFuncTable+0x4c>
    3c60:	f0 91 ef 23 	lds	r31, 0x23EF	; 0x8023ef <InterruptFuncTable+0x4d>
    3c64:	30 97       	sbiw	r30, 0x00	; 0
    3c66:	29 f0       	breq	.+10     	; 0x3c72 <__vector_38+0x3c>
    3c68:	80 91 e4 24 	lds	r24, 0x24E4	; 0x8024e4 <InterruptSenderTable+0x4c>
    3c6c:	90 91 e5 24 	lds	r25, 0x24E5	; 0x8024e5 <InterruptSenderTable+0x4d>
    3c70:	19 95       	eicall
    3c72:	ff 91       	pop	r31
    3c74:	ef 91       	pop	r30
    3c76:	bf 91       	pop	r27
    3c78:	af 91       	pop	r26
    3c7a:	9f 91       	pop	r25
    3c7c:	8f 91       	pop	r24
    3c7e:	7f 91       	pop	r23
    3c80:	6f 91       	pop	r22
    3c82:	5f 91       	pop	r21
    3c84:	4f 91       	pop	r20
    3c86:	3f 91       	pop	r19
    3c88:	2f 91       	pop	r18
    3c8a:	0f 90       	pop	r0
    3c8c:	0b be       	out	0x3b, r0	; 59
    3c8e:	0f 90       	pop	r0
    3c90:	0f be       	out	0x3f, r0	; 63
    3c92:	0f 90       	pop	r0
    3c94:	1f 90       	pop	r1
    3c96:	18 95       	reti

00003c98 <__vector_39>:

/* ADCB interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ADCB_CH0_vect)      /* Interrupt 0 */
    3c98:	1f 92       	push	r1
    3c9a:	0f 92       	push	r0
    3c9c:	0f b6       	in	r0, 0x3f	; 63
    3c9e:	0f 92       	push	r0
    3ca0:	11 24       	eor	r1, r1
    3ca2:	0b b6       	in	r0, 0x3b	; 59
    3ca4:	0f 92       	push	r0
    3ca6:	2f 93       	push	r18
    3ca8:	3f 93       	push	r19
    3caa:	4f 93       	push	r20
    3cac:	5f 93       	push	r21
    3cae:	6f 93       	push	r22
    3cb0:	7f 93       	push	r23
    3cb2:	8f 93       	push	r24
    3cb4:	9f 93       	push	r25
    3cb6:	af 93       	push	r26
    3cb8:	bf 93       	push	r27
    3cba:	ef 93       	push	r30
    3cbc:	ff 93       	push	r31
    3cbe:	e0 91 f0 23 	lds	r30, 0x23F0	; 0x8023f0 <InterruptFuncTable+0x4e>
    3cc2:	f0 91 f1 23 	lds	r31, 0x23F1	; 0x8023f1 <InterruptFuncTable+0x4f>
    3cc6:	30 97       	sbiw	r30, 0x00	; 0
    3cc8:	29 f0       	breq	.+10     	; 0x3cd4 <__vector_39+0x3c>
    3cca:	80 91 e6 24 	lds	r24, 0x24E6	; 0x8024e6 <InterruptSenderTable+0x4e>
    3cce:	90 91 e7 24 	lds	r25, 0x24E7	; 0x8024e7 <InterruptSenderTable+0x4f>
    3cd2:	19 95       	eicall
    3cd4:	ff 91       	pop	r31
    3cd6:	ef 91       	pop	r30
    3cd8:	bf 91       	pop	r27
    3cda:	af 91       	pop	r26
    3cdc:	9f 91       	pop	r25
    3cde:	8f 91       	pop	r24
    3ce0:	7f 91       	pop	r23
    3ce2:	6f 91       	pop	r22
    3ce4:	5f 91       	pop	r21
    3ce6:	4f 91       	pop	r20
    3ce8:	3f 91       	pop	r19
    3cea:	2f 91       	pop	r18
    3cec:	0f 90       	pop	r0
    3cee:	0b be       	out	0x3b, r0	; 59
    3cf0:	0f 90       	pop	r0
    3cf2:	0f be       	out	0x3f, r0	; 63
    3cf4:	0f 90       	pop	r0
    3cf6:	1f 90       	pop	r1
    3cf8:	18 95       	reti

00003cfa <__vector_40>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ADCB_CH1_vect)      /* Interrupt 1 */
    3cfa:	1f 92       	push	r1
    3cfc:	0f 92       	push	r0
    3cfe:	0f b6       	in	r0, 0x3f	; 63
    3d00:	0f 92       	push	r0
    3d02:	11 24       	eor	r1, r1
    3d04:	0b b6       	in	r0, 0x3b	; 59
    3d06:	0f 92       	push	r0
    3d08:	2f 93       	push	r18
    3d0a:	3f 93       	push	r19
    3d0c:	4f 93       	push	r20
    3d0e:	5f 93       	push	r21
    3d10:	6f 93       	push	r22
    3d12:	7f 93       	push	r23
    3d14:	8f 93       	push	r24
    3d16:	9f 93       	push	r25
    3d18:	af 93       	push	r26
    3d1a:	bf 93       	push	r27
    3d1c:	ef 93       	push	r30
    3d1e:	ff 93       	push	r31
    3d20:	e0 91 f2 23 	lds	r30, 0x23F2	; 0x8023f2 <InterruptFuncTable+0x50>
    3d24:	f0 91 f3 23 	lds	r31, 0x23F3	; 0x8023f3 <InterruptFuncTable+0x51>
    3d28:	30 97       	sbiw	r30, 0x00	; 0
    3d2a:	29 f0       	breq	.+10     	; 0x3d36 <__vector_40+0x3c>
    3d2c:	80 91 e8 24 	lds	r24, 0x24E8	; 0x8024e8 <InterruptSenderTable+0x50>
    3d30:	90 91 e9 24 	lds	r25, 0x24E9	; 0x8024e9 <InterruptSenderTable+0x51>
    3d34:	19 95       	eicall
    3d36:	ff 91       	pop	r31
    3d38:	ef 91       	pop	r30
    3d3a:	bf 91       	pop	r27
    3d3c:	af 91       	pop	r26
    3d3e:	9f 91       	pop	r25
    3d40:	8f 91       	pop	r24
    3d42:	7f 91       	pop	r23
    3d44:	6f 91       	pop	r22
    3d46:	5f 91       	pop	r21
    3d48:	4f 91       	pop	r20
    3d4a:	3f 91       	pop	r19
    3d4c:	2f 91       	pop	r18
    3d4e:	0f 90       	pop	r0
    3d50:	0b be       	out	0x3b, r0	; 59
    3d52:	0f 90       	pop	r0
    3d54:	0f be       	out	0x3f, r0	; 63
    3d56:	0f 90       	pop	r0
    3d58:	1f 90       	pop	r1
    3d5a:	18 95       	reti

00003d5c <__vector_41>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ADCB_CH2_vect)      /* Interrupt 2 */
    3d5c:	1f 92       	push	r1
    3d5e:	0f 92       	push	r0
    3d60:	0f b6       	in	r0, 0x3f	; 63
    3d62:	0f 92       	push	r0
    3d64:	11 24       	eor	r1, r1
    3d66:	0b b6       	in	r0, 0x3b	; 59
    3d68:	0f 92       	push	r0
    3d6a:	2f 93       	push	r18
    3d6c:	3f 93       	push	r19
    3d6e:	4f 93       	push	r20
    3d70:	5f 93       	push	r21
    3d72:	6f 93       	push	r22
    3d74:	7f 93       	push	r23
    3d76:	8f 93       	push	r24
    3d78:	9f 93       	push	r25
    3d7a:	af 93       	push	r26
    3d7c:	bf 93       	push	r27
    3d7e:	ef 93       	push	r30
    3d80:	ff 93       	push	r31
    3d82:	e0 91 f4 23 	lds	r30, 0x23F4	; 0x8023f4 <InterruptFuncTable+0x52>
    3d86:	f0 91 f5 23 	lds	r31, 0x23F5	; 0x8023f5 <InterruptFuncTable+0x53>
    3d8a:	30 97       	sbiw	r30, 0x00	; 0
    3d8c:	29 f0       	breq	.+10     	; 0x3d98 <__vector_41+0x3c>
    3d8e:	80 91 ea 24 	lds	r24, 0x24EA	; 0x8024ea <InterruptSenderTable+0x52>
    3d92:	90 91 eb 24 	lds	r25, 0x24EB	; 0x8024eb <InterruptSenderTable+0x53>
    3d96:	19 95       	eicall
    3d98:	ff 91       	pop	r31
    3d9a:	ef 91       	pop	r30
    3d9c:	bf 91       	pop	r27
    3d9e:	af 91       	pop	r26
    3da0:	9f 91       	pop	r25
    3da2:	8f 91       	pop	r24
    3da4:	7f 91       	pop	r23
    3da6:	6f 91       	pop	r22
    3da8:	5f 91       	pop	r21
    3daa:	4f 91       	pop	r20
    3dac:	3f 91       	pop	r19
    3dae:	2f 91       	pop	r18
    3db0:	0f 90       	pop	r0
    3db2:	0b be       	out	0x3b, r0	; 59
    3db4:	0f 90       	pop	r0
    3db6:	0f be       	out	0x3f, r0	; 63
    3db8:	0f 90       	pop	r0
    3dba:	1f 90       	pop	r1
    3dbc:	18 95       	reti

00003dbe <__vector_42>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ADCB_CH3_vect)      /* Interrupt 3 */
    3dbe:	1f 92       	push	r1
    3dc0:	0f 92       	push	r0
    3dc2:	0f b6       	in	r0, 0x3f	; 63
    3dc4:	0f 92       	push	r0
    3dc6:	11 24       	eor	r1, r1
    3dc8:	0b b6       	in	r0, 0x3b	; 59
    3dca:	0f 92       	push	r0
    3dcc:	2f 93       	push	r18
    3dce:	3f 93       	push	r19
    3dd0:	4f 93       	push	r20
    3dd2:	5f 93       	push	r21
    3dd4:	6f 93       	push	r22
    3dd6:	7f 93       	push	r23
    3dd8:	8f 93       	push	r24
    3dda:	9f 93       	push	r25
    3ddc:	af 93       	push	r26
    3dde:	bf 93       	push	r27
    3de0:	ef 93       	push	r30
    3de2:	ff 93       	push	r31
    3de4:	e0 91 f6 23 	lds	r30, 0x23F6	; 0x8023f6 <InterruptFuncTable+0x54>
    3de8:	f0 91 f7 23 	lds	r31, 0x23F7	; 0x8023f7 <InterruptFuncTable+0x55>
    3dec:	30 97       	sbiw	r30, 0x00	; 0
    3dee:	29 f0       	breq	.+10     	; 0x3dfa <__vector_42+0x3c>
    3df0:	80 91 ec 24 	lds	r24, 0x24EC	; 0x8024ec <InterruptSenderTable+0x54>
    3df4:	90 91 ed 24 	lds	r25, 0x24ED	; 0x8024ed <InterruptSenderTable+0x55>
    3df8:	19 95       	eicall
    3dfa:	ff 91       	pop	r31
    3dfc:	ef 91       	pop	r30
    3dfe:	bf 91       	pop	r27
    3e00:	af 91       	pop	r26
    3e02:	9f 91       	pop	r25
    3e04:	8f 91       	pop	r24
    3e06:	7f 91       	pop	r23
    3e08:	6f 91       	pop	r22
    3e0a:	5f 91       	pop	r21
    3e0c:	4f 91       	pop	r20
    3e0e:	3f 91       	pop	r19
    3e10:	2f 91       	pop	r18
    3e12:	0f 90       	pop	r0
    3e14:	0b be       	out	0x3b, r0	; 59
    3e16:	0f 90       	pop	r0
    3e18:	0f be       	out	0x3f, r0	; 63
    3e1a:	0f 90       	pop	r0
    3e1c:	1f 90       	pop	r1
    3e1e:	18 95       	reti

00003e20 <__vector_43>:

/* PORTE interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTE_INT0_vect)      /* External Interrupt 0 */
    3e20:	1f 92       	push	r1
    3e22:	0f 92       	push	r0
    3e24:	0f b6       	in	r0, 0x3f	; 63
    3e26:	0f 92       	push	r0
    3e28:	11 24       	eor	r1, r1
    3e2a:	0b b6       	in	r0, 0x3b	; 59
    3e2c:	0f 92       	push	r0
    3e2e:	2f 93       	push	r18
    3e30:	3f 93       	push	r19
    3e32:	4f 93       	push	r20
    3e34:	5f 93       	push	r21
    3e36:	6f 93       	push	r22
    3e38:	7f 93       	push	r23
    3e3a:	8f 93       	push	r24
    3e3c:	9f 93       	push	r25
    3e3e:	af 93       	push	r26
    3e40:	bf 93       	push	r27
    3e42:	ef 93       	push	r30
    3e44:	ff 93       	push	r31
    3e46:	e0 91 f8 23 	lds	r30, 0x23F8	; 0x8023f8 <InterruptFuncTable+0x56>
    3e4a:	f0 91 f9 23 	lds	r31, 0x23F9	; 0x8023f9 <InterruptFuncTable+0x57>
    3e4e:	30 97       	sbiw	r30, 0x00	; 0
    3e50:	29 f0       	breq	.+10     	; 0x3e5c <__vector_43+0x3c>
    3e52:	80 91 ee 24 	lds	r24, 0x24EE	; 0x8024ee <InterruptSenderTable+0x56>
    3e56:	90 91 ef 24 	lds	r25, 0x24EF	; 0x8024ef <InterruptSenderTable+0x57>
    3e5a:	19 95       	eicall
    3e5c:	ff 91       	pop	r31
    3e5e:	ef 91       	pop	r30
    3e60:	bf 91       	pop	r27
    3e62:	af 91       	pop	r26
    3e64:	9f 91       	pop	r25
    3e66:	8f 91       	pop	r24
    3e68:	7f 91       	pop	r23
    3e6a:	6f 91       	pop	r22
    3e6c:	5f 91       	pop	r21
    3e6e:	4f 91       	pop	r20
    3e70:	3f 91       	pop	r19
    3e72:	2f 91       	pop	r18
    3e74:	0f 90       	pop	r0
    3e76:	0b be       	out	0x3b, r0	; 59
    3e78:	0f 90       	pop	r0
    3e7a:	0f be       	out	0x3f, r0	; 63
    3e7c:	0f 90       	pop	r0
    3e7e:	1f 90       	pop	r1
    3e80:	18 95       	reti

00003e82 <__vector_44>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTE_INT1_vect)      /* External Interrupt 1 */
    3e82:	1f 92       	push	r1
    3e84:	0f 92       	push	r0
    3e86:	0f b6       	in	r0, 0x3f	; 63
    3e88:	0f 92       	push	r0
    3e8a:	11 24       	eor	r1, r1
    3e8c:	0b b6       	in	r0, 0x3b	; 59
    3e8e:	0f 92       	push	r0
    3e90:	2f 93       	push	r18
    3e92:	3f 93       	push	r19
    3e94:	4f 93       	push	r20
    3e96:	5f 93       	push	r21
    3e98:	6f 93       	push	r22
    3e9a:	7f 93       	push	r23
    3e9c:	8f 93       	push	r24
    3e9e:	9f 93       	push	r25
    3ea0:	af 93       	push	r26
    3ea2:	bf 93       	push	r27
    3ea4:	ef 93       	push	r30
    3ea6:	ff 93       	push	r31
    3ea8:	e0 91 fa 23 	lds	r30, 0x23FA	; 0x8023fa <InterruptFuncTable+0x58>
    3eac:	f0 91 fb 23 	lds	r31, 0x23FB	; 0x8023fb <InterruptFuncTable+0x59>
    3eb0:	30 97       	sbiw	r30, 0x00	; 0
    3eb2:	29 f0       	breq	.+10     	; 0x3ebe <__vector_44+0x3c>
    3eb4:	80 91 f0 24 	lds	r24, 0x24F0	; 0x8024f0 <InterruptSenderTable+0x58>
    3eb8:	90 91 f1 24 	lds	r25, 0x24F1	; 0x8024f1 <InterruptSenderTable+0x59>
    3ebc:	19 95       	eicall
    3ebe:	ff 91       	pop	r31
    3ec0:	ef 91       	pop	r30
    3ec2:	bf 91       	pop	r27
    3ec4:	af 91       	pop	r26
    3ec6:	9f 91       	pop	r25
    3ec8:	8f 91       	pop	r24
    3eca:	7f 91       	pop	r23
    3ecc:	6f 91       	pop	r22
    3ece:	5f 91       	pop	r21
    3ed0:	4f 91       	pop	r20
    3ed2:	3f 91       	pop	r19
    3ed4:	2f 91       	pop	r18
    3ed6:	0f 90       	pop	r0
    3ed8:	0b be       	out	0x3b, r0	; 59
    3eda:	0f 90       	pop	r0
    3edc:	0f be       	out	0x3f, r0	; 63
    3ede:	0f 90       	pop	r0
    3ee0:	1f 90       	pop	r1
    3ee2:	18 95       	reti

00003ee4 <__vector_45>:

/* TWIE interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TWIE_TWIS_vect)      /* TWI Slave Interrupt */
    3ee4:	1f 92       	push	r1
    3ee6:	0f 92       	push	r0
    3ee8:	0f b6       	in	r0, 0x3f	; 63
    3eea:	0f 92       	push	r0
    3eec:	11 24       	eor	r1, r1
    3eee:	0b b6       	in	r0, 0x3b	; 59
    3ef0:	0f 92       	push	r0
    3ef2:	2f 93       	push	r18
    3ef4:	3f 93       	push	r19
    3ef6:	4f 93       	push	r20
    3ef8:	5f 93       	push	r21
    3efa:	6f 93       	push	r22
    3efc:	7f 93       	push	r23
    3efe:	8f 93       	push	r24
    3f00:	9f 93       	push	r25
    3f02:	af 93       	push	r26
    3f04:	bf 93       	push	r27
    3f06:	ef 93       	push	r30
    3f08:	ff 93       	push	r31
    3f0a:	e0 91 fc 23 	lds	r30, 0x23FC	; 0x8023fc <InterruptFuncTable+0x5a>
    3f0e:	f0 91 fd 23 	lds	r31, 0x23FD	; 0x8023fd <InterruptFuncTable+0x5b>
    3f12:	30 97       	sbiw	r30, 0x00	; 0
    3f14:	29 f0       	breq	.+10     	; 0x3f20 <__vector_45+0x3c>
    3f16:	80 91 f2 24 	lds	r24, 0x24F2	; 0x8024f2 <InterruptSenderTable+0x5a>
    3f1a:	90 91 f3 24 	lds	r25, 0x24F3	; 0x8024f3 <InterruptSenderTable+0x5b>
    3f1e:	19 95       	eicall
    3f20:	ff 91       	pop	r31
    3f22:	ef 91       	pop	r30
    3f24:	bf 91       	pop	r27
    3f26:	af 91       	pop	r26
    3f28:	9f 91       	pop	r25
    3f2a:	8f 91       	pop	r24
    3f2c:	7f 91       	pop	r23
    3f2e:	6f 91       	pop	r22
    3f30:	5f 91       	pop	r21
    3f32:	4f 91       	pop	r20
    3f34:	3f 91       	pop	r19
    3f36:	2f 91       	pop	r18
    3f38:	0f 90       	pop	r0
    3f3a:	0b be       	out	0x3b, r0	; 59
    3f3c:	0f 90       	pop	r0
    3f3e:	0f be       	out	0x3f, r0	; 63
    3f40:	0f 90       	pop	r0
    3f42:	1f 90       	pop	r1
    3f44:	18 95       	reti

00003f46 <__vector_46>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TWIE_TWIM_vect)		/* TWI Master Interrupt */
    3f46:	1f 92       	push	r1
    3f48:	0f 92       	push	r0
    3f4a:	0f b6       	in	r0, 0x3f	; 63
    3f4c:	0f 92       	push	r0
    3f4e:	11 24       	eor	r1, r1
    3f50:	0b b6       	in	r0, 0x3b	; 59
    3f52:	0f 92       	push	r0
    3f54:	2f 93       	push	r18
    3f56:	3f 93       	push	r19
    3f58:	4f 93       	push	r20
    3f5a:	5f 93       	push	r21
    3f5c:	6f 93       	push	r22
    3f5e:	7f 93       	push	r23
    3f60:	8f 93       	push	r24
    3f62:	9f 93       	push	r25
    3f64:	af 93       	push	r26
    3f66:	bf 93       	push	r27
    3f68:	ef 93       	push	r30
    3f6a:	ff 93       	push	r31
    3f6c:	e0 91 fe 23 	lds	r30, 0x23FE	; 0x8023fe <InterruptFuncTable+0x5c>
    3f70:	f0 91 ff 23 	lds	r31, 0x23FF	; 0x8023ff <InterruptFuncTable+0x5d>
    3f74:	30 97       	sbiw	r30, 0x00	; 0
    3f76:	29 f0       	breq	.+10     	; 0x3f82 <__vector_46+0x3c>
    3f78:	80 91 f4 24 	lds	r24, 0x24F4	; 0x8024f4 <InterruptSenderTable+0x5c>
    3f7c:	90 91 f5 24 	lds	r25, 0x24F5	; 0x8024f5 <InterruptSenderTable+0x5d>
    3f80:	19 95       	eicall
    3f82:	ff 91       	pop	r31
    3f84:	ef 91       	pop	r30
    3f86:	bf 91       	pop	r27
    3f88:	af 91       	pop	r26
    3f8a:	9f 91       	pop	r25
    3f8c:	8f 91       	pop	r24
    3f8e:	7f 91       	pop	r23
    3f90:	6f 91       	pop	r22
    3f92:	5f 91       	pop	r21
    3f94:	4f 91       	pop	r20
    3f96:	3f 91       	pop	r19
    3f98:	2f 91       	pop	r18
    3f9a:	0f 90       	pop	r0
    3f9c:	0b be       	out	0x3b, r0	; 59
    3f9e:	0f 90       	pop	r0
    3fa0:	0f be       	out	0x3f, r0	; 63
    3fa2:	0f 90       	pop	r0
    3fa4:	1f 90       	pop	r1
    3fa6:	18 95       	reti

00003fa8 <__vector_47>:

/* TCE0 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE0_OVF_vect)      /* Overflow Interrupt */
    3fa8:	1f 92       	push	r1
    3faa:	0f 92       	push	r0
    3fac:	0f b6       	in	r0, 0x3f	; 63
    3fae:	0f 92       	push	r0
    3fb0:	11 24       	eor	r1, r1
    3fb2:	0b b6       	in	r0, 0x3b	; 59
    3fb4:	0f 92       	push	r0
    3fb6:	2f 93       	push	r18
    3fb8:	3f 93       	push	r19
    3fba:	4f 93       	push	r20
    3fbc:	5f 93       	push	r21
    3fbe:	6f 93       	push	r22
    3fc0:	7f 93       	push	r23
    3fc2:	8f 93       	push	r24
    3fc4:	9f 93       	push	r25
    3fc6:	af 93       	push	r26
    3fc8:	bf 93       	push	r27
    3fca:	ef 93       	push	r30
    3fcc:	ff 93       	push	r31
    3fce:	e0 91 00 24 	lds	r30, 0x2400	; 0x802400 <InterruptFuncTable+0x5e>
    3fd2:	f0 91 01 24 	lds	r31, 0x2401	; 0x802401 <InterruptFuncTable+0x5f>
    3fd6:	30 97       	sbiw	r30, 0x00	; 0
    3fd8:	29 f0       	breq	.+10     	; 0x3fe4 <__vector_47+0x3c>
    3fda:	80 91 f6 24 	lds	r24, 0x24F6	; 0x8024f6 <InterruptSenderTable+0x5e>
    3fde:	90 91 f7 24 	lds	r25, 0x24F7	; 0x8024f7 <InterruptSenderTable+0x5f>
    3fe2:	19 95       	eicall
    3fe4:	ff 91       	pop	r31
    3fe6:	ef 91       	pop	r30
    3fe8:	bf 91       	pop	r27
    3fea:	af 91       	pop	r26
    3fec:	9f 91       	pop	r25
    3fee:	8f 91       	pop	r24
    3ff0:	7f 91       	pop	r23
    3ff2:	6f 91       	pop	r22
    3ff4:	5f 91       	pop	r21
    3ff6:	4f 91       	pop	r20
    3ff8:	3f 91       	pop	r19
    3ffa:	2f 91       	pop	r18
    3ffc:	0f 90       	pop	r0
    3ffe:	0b be       	out	0x3b, r0	; 59
    4000:	0f 90       	pop	r0
    4002:	0f be       	out	0x3f, r0	; 63
    4004:	0f 90       	pop	r0
    4006:	1f 90       	pop	r1
    4008:	18 95       	reti

0000400a <__vector_48>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE0_ERR_vect)      /* Error Interrupt */
    400a:	1f 92       	push	r1
    400c:	0f 92       	push	r0
    400e:	0f b6       	in	r0, 0x3f	; 63
    4010:	0f 92       	push	r0
    4012:	11 24       	eor	r1, r1
    4014:	0b b6       	in	r0, 0x3b	; 59
    4016:	0f 92       	push	r0
    4018:	2f 93       	push	r18
    401a:	3f 93       	push	r19
    401c:	4f 93       	push	r20
    401e:	5f 93       	push	r21
    4020:	6f 93       	push	r22
    4022:	7f 93       	push	r23
    4024:	8f 93       	push	r24
    4026:	9f 93       	push	r25
    4028:	af 93       	push	r26
    402a:	bf 93       	push	r27
    402c:	ef 93       	push	r30
    402e:	ff 93       	push	r31
    4030:	e0 91 02 24 	lds	r30, 0x2402	; 0x802402 <InterruptFuncTable+0x60>
    4034:	f0 91 03 24 	lds	r31, 0x2403	; 0x802403 <InterruptFuncTable+0x61>
    4038:	30 97       	sbiw	r30, 0x00	; 0
    403a:	29 f0       	breq	.+10     	; 0x4046 <__vector_48+0x3c>
    403c:	80 91 f8 24 	lds	r24, 0x24F8	; 0x8024f8 <InterruptSenderTable+0x60>
    4040:	90 91 f9 24 	lds	r25, 0x24F9	; 0x8024f9 <InterruptSenderTable+0x61>
    4044:	19 95       	eicall
    4046:	ff 91       	pop	r31
    4048:	ef 91       	pop	r30
    404a:	bf 91       	pop	r27
    404c:	af 91       	pop	r26
    404e:	9f 91       	pop	r25
    4050:	8f 91       	pop	r24
    4052:	7f 91       	pop	r23
    4054:	6f 91       	pop	r22
    4056:	5f 91       	pop	r21
    4058:	4f 91       	pop	r20
    405a:	3f 91       	pop	r19
    405c:	2f 91       	pop	r18
    405e:	0f 90       	pop	r0
    4060:	0b be       	out	0x3b, r0	; 59
    4062:	0f 90       	pop	r0
    4064:	0f be       	out	0x3f, r0	; 63
    4066:	0f 90       	pop	r0
    4068:	1f 90       	pop	r1
    406a:	18 95       	reti

0000406c <__vector_49>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE0_CCA_vect)      /* Compare or Capture A Interrupt */
    406c:	1f 92       	push	r1
    406e:	0f 92       	push	r0
    4070:	0f b6       	in	r0, 0x3f	; 63
    4072:	0f 92       	push	r0
    4074:	11 24       	eor	r1, r1
    4076:	0b b6       	in	r0, 0x3b	; 59
    4078:	0f 92       	push	r0
    407a:	2f 93       	push	r18
    407c:	3f 93       	push	r19
    407e:	4f 93       	push	r20
    4080:	5f 93       	push	r21
    4082:	6f 93       	push	r22
    4084:	7f 93       	push	r23
    4086:	8f 93       	push	r24
    4088:	9f 93       	push	r25
    408a:	af 93       	push	r26
    408c:	bf 93       	push	r27
    408e:	ef 93       	push	r30
    4090:	ff 93       	push	r31
    4092:	e0 91 04 24 	lds	r30, 0x2404	; 0x802404 <InterruptFuncTable+0x62>
    4096:	f0 91 05 24 	lds	r31, 0x2405	; 0x802405 <InterruptFuncTable+0x63>
    409a:	30 97       	sbiw	r30, 0x00	; 0
    409c:	29 f0       	breq	.+10     	; 0x40a8 <__vector_49+0x3c>
    409e:	80 91 fa 24 	lds	r24, 0x24FA	; 0x8024fa <InterruptSenderTable+0x62>
    40a2:	90 91 fb 24 	lds	r25, 0x24FB	; 0x8024fb <InterruptSenderTable+0x63>
    40a6:	19 95       	eicall
    40a8:	ff 91       	pop	r31
    40aa:	ef 91       	pop	r30
    40ac:	bf 91       	pop	r27
    40ae:	af 91       	pop	r26
    40b0:	9f 91       	pop	r25
    40b2:	8f 91       	pop	r24
    40b4:	7f 91       	pop	r23
    40b6:	6f 91       	pop	r22
    40b8:	5f 91       	pop	r21
    40ba:	4f 91       	pop	r20
    40bc:	3f 91       	pop	r19
    40be:	2f 91       	pop	r18
    40c0:	0f 90       	pop	r0
    40c2:	0b be       	out	0x3b, r0	; 59
    40c4:	0f 90       	pop	r0
    40c6:	0f be       	out	0x3f, r0	; 63
    40c8:	0f 90       	pop	r0
    40ca:	1f 90       	pop	r1
    40cc:	18 95       	reti

000040ce <__vector_50>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE0_CCB_vect)      /* Compare or Capture B Interrupt */
    40ce:	1f 92       	push	r1
    40d0:	0f 92       	push	r0
    40d2:	0f b6       	in	r0, 0x3f	; 63
    40d4:	0f 92       	push	r0
    40d6:	11 24       	eor	r1, r1
    40d8:	0b b6       	in	r0, 0x3b	; 59
    40da:	0f 92       	push	r0
    40dc:	2f 93       	push	r18
    40de:	3f 93       	push	r19
    40e0:	4f 93       	push	r20
    40e2:	5f 93       	push	r21
    40e4:	6f 93       	push	r22
    40e6:	7f 93       	push	r23
    40e8:	8f 93       	push	r24
    40ea:	9f 93       	push	r25
    40ec:	af 93       	push	r26
    40ee:	bf 93       	push	r27
    40f0:	ef 93       	push	r30
    40f2:	ff 93       	push	r31
    40f4:	e0 91 06 24 	lds	r30, 0x2406	; 0x802406 <InterruptFuncTable+0x64>
    40f8:	f0 91 07 24 	lds	r31, 0x2407	; 0x802407 <InterruptFuncTable+0x65>
    40fc:	30 97       	sbiw	r30, 0x00	; 0
    40fe:	29 f0       	breq	.+10     	; 0x410a <__vector_50+0x3c>
    4100:	80 91 fc 24 	lds	r24, 0x24FC	; 0x8024fc <InterruptSenderTable+0x64>
    4104:	90 91 fd 24 	lds	r25, 0x24FD	; 0x8024fd <InterruptSenderTable+0x65>
    4108:	19 95       	eicall
    410a:	ff 91       	pop	r31
    410c:	ef 91       	pop	r30
    410e:	bf 91       	pop	r27
    4110:	af 91       	pop	r26
    4112:	9f 91       	pop	r25
    4114:	8f 91       	pop	r24
    4116:	7f 91       	pop	r23
    4118:	6f 91       	pop	r22
    411a:	5f 91       	pop	r21
    411c:	4f 91       	pop	r20
    411e:	3f 91       	pop	r19
    4120:	2f 91       	pop	r18
    4122:	0f 90       	pop	r0
    4124:	0b be       	out	0x3b, r0	; 59
    4126:	0f 90       	pop	r0
    4128:	0f be       	out	0x3f, r0	; 63
    412a:	0f 90       	pop	r0
    412c:	1f 90       	pop	r1
    412e:	18 95       	reti

00004130 <__vector_51>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE0_CCC_vect)      /* Compare or Capture C Interrupt */
    4130:	1f 92       	push	r1
    4132:	0f 92       	push	r0
    4134:	0f b6       	in	r0, 0x3f	; 63
    4136:	0f 92       	push	r0
    4138:	11 24       	eor	r1, r1
    413a:	0b b6       	in	r0, 0x3b	; 59
    413c:	0f 92       	push	r0
    413e:	2f 93       	push	r18
    4140:	3f 93       	push	r19
    4142:	4f 93       	push	r20
    4144:	5f 93       	push	r21
    4146:	6f 93       	push	r22
    4148:	7f 93       	push	r23
    414a:	8f 93       	push	r24
    414c:	9f 93       	push	r25
    414e:	af 93       	push	r26
    4150:	bf 93       	push	r27
    4152:	ef 93       	push	r30
    4154:	ff 93       	push	r31
    4156:	e0 91 08 24 	lds	r30, 0x2408	; 0x802408 <InterruptFuncTable+0x66>
    415a:	f0 91 09 24 	lds	r31, 0x2409	; 0x802409 <InterruptFuncTable+0x67>
    415e:	30 97       	sbiw	r30, 0x00	; 0
    4160:	29 f0       	breq	.+10     	; 0x416c <__vector_51+0x3c>
    4162:	80 91 fe 24 	lds	r24, 0x24FE	; 0x8024fe <InterruptSenderTable+0x66>
    4166:	90 91 ff 24 	lds	r25, 0x24FF	; 0x8024ff <InterruptSenderTable+0x67>
    416a:	19 95       	eicall
    416c:	ff 91       	pop	r31
    416e:	ef 91       	pop	r30
    4170:	bf 91       	pop	r27
    4172:	af 91       	pop	r26
    4174:	9f 91       	pop	r25
    4176:	8f 91       	pop	r24
    4178:	7f 91       	pop	r23
    417a:	6f 91       	pop	r22
    417c:	5f 91       	pop	r21
    417e:	4f 91       	pop	r20
    4180:	3f 91       	pop	r19
    4182:	2f 91       	pop	r18
    4184:	0f 90       	pop	r0
    4186:	0b be       	out	0x3b, r0	; 59
    4188:	0f 90       	pop	r0
    418a:	0f be       	out	0x3f, r0	; 63
    418c:	0f 90       	pop	r0
    418e:	1f 90       	pop	r1
    4190:	18 95       	reti

00004192 <__vector_52>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE0_CCD_vect)      /* Compare or Capture D Interrupt */
    4192:	1f 92       	push	r1
    4194:	0f 92       	push	r0
    4196:	0f b6       	in	r0, 0x3f	; 63
    4198:	0f 92       	push	r0
    419a:	11 24       	eor	r1, r1
    419c:	0b b6       	in	r0, 0x3b	; 59
    419e:	0f 92       	push	r0
    41a0:	2f 93       	push	r18
    41a2:	3f 93       	push	r19
    41a4:	4f 93       	push	r20
    41a6:	5f 93       	push	r21
    41a8:	6f 93       	push	r22
    41aa:	7f 93       	push	r23
    41ac:	8f 93       	push	r24
    41ae:	9f 93       	push	r25
    41b0:	af 93       	push	r26
    41b2:	bf 93       	push	r27
    41b4:	ef 93       	push	r30
    41b6:	ff 93       	push	r31
    41b8:	e0 91 0a 24 	lds	r30, 0x240A	; 0x80240a <InterruptFuncTable+0x68>
    41bc:	f0 91 0b 24 	lds	r31, 0x240B	; 0x80240b <InterruptFuncTable+0x69>
    41c0:	30 97       	sbiw	r30, 0x00	; 0
    41c2:	29 f0       	breq	.+10     	; 0x41ce <__vector_52+0x3c>
    41c4:	80 91 00 25 	lds	r24, 0x2500	; 0x802500 <InterruptSenderTable+0x68>
    41c8:	90 91 01 25 	lds	r25, 0x2501	; 0x802501 <InterruptSenderTable+0x69>
    41cc:	19 95       	eicall
    41ce:	ff 91       	pop	r31
    41d0:	ef 91       	pop	r30
    41d2:	bf 91       	pop	r27
    41d4:	af 91       	pop	r26
    41d6:	9f 91       	pop	r25
    41d8:	8f 91       	pop	r24
    41da:	7f 91       	pop	r23
    41dc:	6f 91       	pop	r22
    41de:	5f 91       	pop	r21
    41e0:	4f 91       	pop	r20
    41e2:	3f 91       	pop	r19
    41e4:	2f 91       	pop	r18
    41e6:	0f 90       	pop	r0
    41e8:	0b be       	out	0x3b, r0	; 59
    41ea:	0f 90       	pop	r0
    41ec:	0f be       	out	0x3f, r0	; 63
    41ee:	0f 90       	pop	r0
    41f0:	1f 90       	pop	r1
    41f2:	18 95       	reti

000041f4 <__vector_53>:

/* TCE1 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE1_OVF_vect)      /* Overflow Interrupt */
    41f4:	1f 92       	push	r1
    41f6:	0f 92       	push	r0
    41f8:	0f b6       	in	r0, 0x3f	; 63
    41fa:	0f 92       	push	r0
    41fc:	11 24       	eor	r1, r1
    41fe:	0b b6       	in	r0, 0x3b	; 59
    4200:	0f 92       	push	r0
    4202:	2f 93       	push	r18
    4204:	3f 93       	push	r19
    4206:	4f 93       	push	r20
    4208:	5f 93       	push	r21
    420a:	6f 93       	push	r22
    420c:	7f 93       	push	r23
    420e:	8f 93       	push	r24
    4210:	9f 93       	push	r25
    4212:	af 93       	push	r26
    4214:	bf 93       	push	r27
    4216:	ef 93       	push	r30
    4218:	ff 93       	push	r31
    421a:	e0 91 0c 24 	lds	r30, 0x240C	; 0x80240c <InterruptFuncTable+0x6a>
    421e:	f0 91 0d 24 	lds	r31, 0x240D	; 0x80240d <InterruptFuncTable+0x6b>
    4222:	30 97       	sbiw	r30, 0x00	; 0
    4224:	29 f0       	breq	.+10     	; 0x4230 <__vector_53+0x3c>
    4226:	80 91 02 25 	lds	r24, 0x2502	; 0x802502 <InterruptSenderTable+0x6a>
    422a:	90 91 03 25 	lds	r25, 0x2503	; 0x802503 <InterruptSenderTable+0x6b>
    422e:	19 95       	eicall
    4230:	ff 91       	pop	r31
    4232:	ef 91       	pop	r30
    4234:	bf 91       	pop	r27
    4236:	af 91       	pop	r26
    4238:	9f 91       	pop	r25
    423a:	8f 91       	pop	r24
    423c:	7f 91       	pop	r23
    423e:	6f 91       	pop	r22
    4240:	5f 91       	pop	r21
    4242:	4f 91       	pop	r20
    4244:	3f 91       	pop	r19
    4246:	2f 91       	pop	r18
    4248:	0f 90       	pop	r0
    424a:	0b be       	out	0x3b, r0	; 59
    424c:	0f 90       	pop	r0
    424e:	0f be       	out	0x3f, r0	; 63
    4250:	0f 90       	pop	r0
    4252:	1f 90       	pop	r1
    4254:	18 95       	reti

00004256 <__vector_54>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE1_ERR_vect)      /* Error Interrupt */
    4256:	1f 92       	push	r1
    4258:	0f 92       	push	r0
    425a:	0f b6       	in	r0, 0x3f	; 63
    425c:	0f 92       	push	r0
    425e:	11 24       	eor	r1, r1
    4260:	0b b6       	in	r0, 0x3b	; 59
    4262:	0f 92       	push	r0
    4264:	2f 93       	push	r18
    4266:	3f 93       	push	r19
    4268:	4f 93       	push	r20
    426a:	5f 93       	push	r21
    426c:	6f 93       	push	r22
    426e:	7f 93       	push	r23
    4270:	8f 93       	push	r24
    4272:	9f 93       	push	r25
    4274:	af 93       	push	r26
    4276:	bf 93       	push	r27
    4278:	ef 93       	push	r30
    427a:	ff 93       	push	r31
    427c:	e0 91 0e 24 	lds	r30, 0x240E	; 0x80240e <InterruptFuncTable+0x6c>
    4280:	f0 91 0f 24 	lds	r31, 0x240F	; 0x80240f <InterruptFuncTable+0x6d>
    4284:	30 97       	sbiw	r30, 0x00	; 0
    4286:	29 f0       	breq	.+10     	; 0x4292 <__vector_54+0x3c>
    4288:	80 91 04 25 	lds	r24, 0x2504	; 0x802504 <InterruptSenderTable+0x6c>
    428c:	90 91 05 25 	lds	r25, 0x2505	; 0x802505 <InterruptSenderTable+0x6d>
    4290:	19 95       	eicall
    4292:	ff 91       	pop	r31
    4294:	ef 91       	pop	r30
    4296:	bf 91       	pop	r27
    4298:	af 91       	pop	r26
    429a:	9f 91       	pop	r25
    429c:	8f 91       	pop	r24
    429e:	7f 91       	pop	r23
    42a0:	6f 91       	pop	r22
    42a2:	5f 91       	pop	r21
    42a4:	4f 91       	pop	r20
    42a6:	3f 91       	pop	r19
    42a8:	2f 91       	pop	r18
    42aa:	0f 90       	pop	r0
    42ac:	0b be       	out	0x3b, r0	; 59
    42ae:	0f 90       	pop	r0
    42b0:	0f be       	out	0x3f, r0	; 63
    42b2:	0f 90       	pop	r0
    42b4:	1f 90       	pop	r1
    42b6:	18 95       	reti

000042b8 <__vector_55>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE1_CCA_vect)      /* Compare or Capture A Interrupt */
    42b8:	1f 92       	push	r1
    42ba:	0f 92       	push	r0
    42bc:	0f b6       	in	r0, 0x3f	; 63
    42be:	0f 92       	push	r0
    42c0:	11 24       	eor	r1, r1
    42c2:	0b b6       	in	r0, 0x3b	; 59
    42c4:	0f 92       	push	r0
    42c6:	2f 93       	push	r18
    42c8:	3f 93       	push	r19
    42ca:	4f 93       	push	r20
    42cc:	5f 93       	push	r21
    42ce:	6f 93       	push	r22
    42d0:	7f 93       	push	r23
    42d2:	8f 93       	push	r24
    42d4:	9f 93       	push	r25
    42d6:	af 93       	push	r26
    42d8:	bf 93       	push	r27
    42da:	ef 93       	push	r30
    42dc:	ff 93       	push	r31
    42de:	e0 91 10 24 	lds	r30, 0x2410	; 0x802410 <InterruptFuncTable+0x6e>
    42e2:	f0 91 11 24 	lds	r31, 0x2411	; 0x802411 <InterruptFuncTable+0x6f>
    42e6:	30 97       	sbiw	r30, 0x00	; 0
    42e8:	29 f0       	breq	.+10     	; 0x42f4 <__vector_55+0x3c>
    42ea:	80 91 06 25 	lds	r24, 0x2506	; 0x802506 <InterruptSenderTable+0x6e>
    42ee:	90 91 07 25 	lds	r25, 0x2507	; 0x802507 <InterruptSenderTable+0x6f>
    42f2:	19 95       	eicall
    42f4:	ff 91       	pop	r31
    42f6:	ef 91       	pop	r30
    42f8:	bf 91       	pop	r27
    42fa:	af 91       	pop	r26
    42fc:	9f 91       	pop	r25
    42fe:	8f 91       	pop	r24
    4300:	7f 91       	pop	r23
    4302:	6f 91       	pop	r22
    4304:	5f 91       	pop	r21
    4306:	4f 91       	pop	r20
    4308:	3f 91       	pop	r19
    430a:	2f 91       	pop	r18
    430c:	0f 90       	pop	r0
    430e:	0b be       	out	0x3b, r0	; 59
    4310:	0f 90       	pop	r0
    4312:	0f be       	out	0x3f, r0	; 63
    4314:	0f 90       	pop	r0
    4316:	1f 90       	pop	r1
    4318:	18 95       	reti

0000431a <__vector_56>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCE1_CCB_vect)      /* Compare or Capture B Interrupt */
    431a:	1f 92       	push	r1
    431c:	0f 92       	push	r0
    431e:	0f b6       	in	r0, 0x3f	; 63
    4320:	0f 92       	push	r0
    4322:	11 24       	eor	r1, r1
    4324:	0b b6       	in	r0, 0x3b	; 59
    4326:	0f 92       	push	r0
    4328:	2f 93       	push	r18
    432a:	3f 93       	push	r19
    432c:	4f 93       	push	r20
    432e:	5f 93       	push	r21
    4330:	6f 93       	push	r22
    4332:	7f 93       	push	r23
    4334:	8f 93       	push	r24
    4336:	9f 93       	push	r25
    4338:	af 93       	push	r26
    433a:	bf 93       	push	r27
    433c:	ef 93       	push	r30
    433e:	ff 93       	push	r31
    4340:	e0 91 12 24 	lds	r30, 0x2412	; 0x802412 <InterruptFuncTable+0x70>
    4344:	f0 91 13 24 	lds	r31, 0x2413	; 0x802413 <InterruptFuncTable+0x71>
    4348:	30 97       	sbiw	r30, 0x00	; 0
    434a:	29 f0       	breq	.+10     	; 0x4356 <__vector_56+0x3c>
    434c:	80 91 08 25 	lds	r24, 0x2508	; 0x802508 <InterruptSenderTable+0x70>
    4350:	90 91 09 25 	lds	r25, 0x2509	; 0x802509 <InterruptSenderTable+0x71>
    4354:	19 95       	eicall
    4356:	ff 91       	pop	r31
    4358:	ef 91       	pop	r30
    435a:	bf 91       	pop	r27
    435c:	af 91       	pop	r26
    435e:	9f 91       	pop	r25
    4360:	8f 91       	pop	r24
    4362:	7f 91       	pop	r23
    4364:	6f 91       	pop	r22
    4366:	5f 91       	pop	r21
    4368:	4f 91       	pop	r20
    436a:	3f 91       	pop	r19
    436c:	2f 91       	pop	r18
    436e:	0f 90       	pop	r0
    4370:	0b be       	out	0x3b, r0	; 59
    4372:	0f 90       	pop	r0
    4374:	0f be       	out	0x3f, r0	; 63
    4376:	0f 90       	pop	r0
    4378:	1f 90       	pop	r1
    437a:	18 95       	reti

0000437c <__vector_57>:

/* SPIE interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(SPIE_INT_vect)      /* SPI Interrupt */
    437c:	1f 92       	push	r1
    437e:	0f 92       	push	r0
    4380:	0f b6       	in	r0, 0x3f	; 63
    4382:	0f 92       	push	r0
    4384:	11 24       	eor	r1, r1
    4386:	0b b6       	in	r0, 0x3b	; 59
    4388:	0f 92       	push	r0
    438a:	2f 93       	push	r18
    438c:	3f 93       	push	r19
    438e:	4f 93       	push	r20
    4390:	5f 93       	push	r21
    4392:	6f 93       	push	r22
    4394:	7f 93       	push	r23
    4396:	8f 93       	push	r24
    4398:	9f 93       	push	r25
    439a:	af 93       	push	r26
    439c:	bf 93       	push	r27
    439e:	ef 93       	push	r30
    43a0:	ff 93       	push	r31
    43a2:	e0 91 14 24 	lds	r30, 0x2414	; 0x802414 <InterruptFuncTable+0x72>
    43a6:	f0 91 15 24 	lds	r31, 0x2415	; 0x802415 <InterruptFuncTable+0x73>
    43aa:	30 97       	sbiw	r30, 0x00	; 0
    43ac:	29 f0       	breq	.+10     	; 0x43b8 <__vector_57+0x3c>
    43ae:	80 91 0a 25 	lds	r24, 0x250A	; 0x80250a <InterruptSenderTable+0x72>
    43b2:	90 91 0b 25 	lds	r25, 0x250B	; 0x80250b <InterruptSenderTable+0x73>
    43b6:	19 95       	eicall
    43b8:	ff 91       	pop	r31
    43ba:	ef 91       	pop	r30
    43bc:	bf 91       	pop	r27
    43be:	af 91       	pop	r26
    43c0:	9f 91       	pop	r25
    43c2:	8f 91       	pop	r24
    43c4:	7f 91       	pop	r23
    43c6:	6f 91       	pop	r22
    43c8:	5f 91       	pop	r21
    43ca:	4f 91       	pop	r20
    43cc:	3f 91       	pop	r19
    43ce:	2f 91       	pop	r18
    43d0:	0f 90       	pop	r0
    43d2:	0b be       	out	0x3b, r0	; 59
    43d4:	0f 90       	pop	r0
    43d6:	0f be       	out	0x3f, r0	; 63
    43d8:	0f 90       	pop	r0
    43da:	1f 90       	pop	r1
    43dc:	18 95       	reti

000043de <__vector_58>:

/* USARTE0 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTE0_RXC_vect)      /* Reception Complete Interrupt */
    43de:	1f 92       	push	r1
    43e0:	0f 92       	push	r0
    43e2:	0f b6       	in	r0, 0x3f	; 63
    43e4:	0f 92       	push	r0
    43e6:	11 24       	eor	r1, r1
    43e8:	0b b6       	in	r0, 0x3b	; 59
    43ea:	0f 92       	push	r0
    43ec:	2f 93       	push	r18
    43ee:	3f 93       	push	r19
    43f0:	4f 93       	push	r20
    43f2:	5f 93       	push	r21
    43f4:	6f 93       	push	r22
    43f6:	7f 93       	push	r23
    43f8:	8f 93       	push	r24
    43fa:	9f 93       	push	r25
    43fc:	af 93       	push	r26
    43fe:	bf 93       	push	r27
    4400:	ef 93       	push	r30
    4402:	ff 93       	push	r31
    4404:	e0 91 16 24 	lds	r30, 0x2416	; 0x802416 <InterruptFuncTable+0x74>
    4408:	f0 91 17 24 	lds	r31, 0x2417	; 0x802417 <InterruptFuncTable+0x75>
    440c:	30 97       	sbiw	r30, 0x00	; 0
    440e:	29 f0       	breq	.+10     	; 0x441a <__vector_58+0x3c>
    4410:	80 91 0c 25 	lds	r24, 0x250C	; 0x80250c <InterruptSenderTable+0x74>
    4414:	90 91 0d 25 	lds	r25, 0x250D	; 0x80250d <InterruptSenderTable+0x75>
    4418:	19 95       	eicall
    441a:	ff 91       	pop	r31
    441c:	ef 91       	pop	r30
    441e:	bf 91       	pop	r27
    4420:	af 91       	pop	r26
    4422:	9f 91       	pop	r25
    4424:	8f 91       	pop	r24
    4426:	7f 91       	pop	r23
    4428:	6f 91       	pop	r22
    442a:	5f 91       	pop	r21
    442c:	4f 91       	pop	r20
    442e:	3f 91       	pop	r19
    4430:	2f 91       	pop	r18
    4432:	0f 90       	pop	r0
    4434:	0b be       	out	0x3b, r0	; 59
    4436:	0f 90       	pop	r0
    4438:	0f be       	out	0x3f, r0	; 63
    443a:	0f 90       	pop	r0
    443c:	1f 90       	pop	r1
    443e:	18 95       	reti

00004440 <__vector_59>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTE0_DRE_vect)      /* Data Register Empty Interrupt */
    4440:	1f 92       	push	r1
    4442:	0f 92       	push	r0
    4444:	0f b6       	in	r0, 0x3f	; 63
    4446:	0f 92       	push	r0
    4448:	11 24       	eor	r1, r1
    444a:	0b b6       	in	r0, 0x3b	; 59
    444c:	0f 92       	push	r0
    444e:	2f 93       	push	r18
    4450:	3f 93       	push	r19
    4452:	4f 93       	push	r20
    4454:	5f 93       	push	r21
    4456:	6f 93       	push	r22
    4458:	7f 93       	push	r23
    445a:	8f 93       	push	r24
    445c:	9f 93       	push	r25
    445e:	af 93       	push	r26
    4460:	bf 93       	push	r27
    4462:	ef 93       	push	r30
    4464:	ff 93       	push	r31
    4466:	e0 91 18 24 	lds	r30, 0x2418	; 0x802418 <InterruptFuncTable+0x76>
    446a:	f0 91 19 24 	lds	r31, 0x2419	; 0x802419 <InterruptFuncTable+0x77>
    446e:	30 97       	sbiw	r30, 0x00	; 0
    4470:	29 f0       	breq	.+10     	; 0x447c <__vector_59+0x3c>
    4472:	80 91 0e 25 	lds	r24, 0x250E	; 0x80250e <InterruptSenderTable+0x76>
    4476:	90 91 0f 25 	lds	r25, 0x250F	; 0x80250f <InterruptSenderTable+0x77>
    447a:	19 95       	eicall
    447c:	ff 91       	pop	r31
    447e:	ef 91       	pop	r30
    4480:	bf 91       	pop	r27
    4482:	af 91       	pop	r26
    4484:	9f 91       	pop	r25
    4486:	8f 91       	pop	r24
    4488:	7f 91       	pop	r23
    448a:	6f 91       	pop	r22
    448c:	5f 91       	pop	r21
    448e:	4f 91       	pop	r20
    4490:	3f 91       	pop	r19
    4492:	2f 91       	pop	r18
    4494:	0f 90       	pop	r0
    4496:	0b be       	out	0x3b, r0	; 59
    4498:	0f 90       	pop	r0
    449a:	0f be       	out	0x3f, r0	; 63
    449c:	0f 90       	pop	r0
    449e:	1f 90       	pop	r1
    44a0:	18 95       	reti

000044a2 <__vector_60>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTE0_TXC_vect)      /* Transmission Complete Interrupt */
    44a2:	1f 92       	push	r1
    44a4:	0f 92       	push	r0
    44a6:	0f b6       	in	r0, 0x3f	; 63
    44a8:	0f 92       	push	r0
    44aa:	11 24       	eor	r1, r1
    44ac:	0b b6       	in	r0, 0x3b	; 59
    44ae:	0f 92       	push	r0
    44b0:	2f 93       	push	r18
    44b2:	3f 93       	push	r19
    44b4:	4f 93       	push	r20
    44b6:	5f 93       	push	r21
    44b8:	6f 93       	push	r22
    44ba:	7f 93       	push	r23
    44bc:	8f 93       	push	r24
    44be:	9f 93       	push	r25
    44c0:	af 93       	push	r26
    44c2:	bf 93       	push	r27
    44c4:	ef 93       	push	r30
    44c6:	ff 93       	push	r31
    44c8:	e0 91 1a 24 	lds	r30, 0x241A	; 0x80241a <InterruptFuncTable+0x78>
    44cc:	f0 91 1b 24 	lds	r31, 0x241B	; 0x80241b <InterruptFuncTable+0x79>
    44d0:	30 97       	sbiw	r30, 0x00	; 0
    44d2:	29 f0       	breq	.+10     	; 0x44de <__vector_60+0x3c>
    44d4:	80 91 10 25 	lds	r24, 0x2510	; 0x802510 <InterruptSenderTable+0x78>
    44d8:	90 91 11 25 	lds	r25, 0x2511	; 0x802511 <InterruptSenderTable+0x79>
    44dc:	19 95       	eicall
    44de:	ff 91       	pop	r31
    44e0:	ef 91       	pop	r30
    44e2:	bf 91       	pop	r27
    44e4:	af 91       	pop	r26
    44e6:	9f 91       	pop	r25
    44e8:	8f 91       	pop	r24
    44ea:	7f 91       	pop	r23
    44ec:	6f 91       	pop	r22
    44ee:	5f 91       	pop	r21
    44f0:	4f 91       	pop	r20
    44f2:	3f 91       	pop	r19
    44f4:	2f 91       	pop	r18
    44f6:	0f 90       	pop	r0
    44f8:	0b be       	out	0x3b, r0	; 59
    44fa:	0f 90       	pop	r0
    44fc:	0f be       	out	0x3f, r0	; 63
    44fe:	0f 90       	pop	r0
    4500:	1f 90       	pop	r1
    4502:	18 95       	reti

00004504 <__vector_61>:

/* USARTE1 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTE1_RXC_vect)      /* Reception Complete Interrupt */
    4504:	1f 92       	push	r1
    4506:	0f 92       	push	r0
    4508:	0f b6       	in	r0, 0x3f	; 63
    450a:	0f 92       	push	r0
    450c:	11 24       	eor	r1, r1
    450e:	0b b6       	in	r0, 0x3b	; 59
    4510:	0f 92       	push	r0
    4512:	2f 93       	push	r18
    4514:	3f 93       	push	r19
    4516:	4f 93       	push	r20
    4518:	5f 93       	push	r21
    451a:	6f 93       	push	r22
    451c:	7f 93       	push	r23
    451e:	8f 93       	push	r24
    4520:	9f 93       	push	r25
    4522:	af 93       	push	r26
    4524:	bf 93       	push	r27
    4526:	ef 93       	push	r30
    4528:	ff 93       	push	r31
    452a:	e0 91 1c 24 	lds	r30, 0x241C	; 0x80241c <InterruptFuncTable+0x7a>
    452e:	f0 91 1d 24 	lds	r31, 0x241D	; 0x80241d <InterruptFuncTable+0x7b>
    4532:	30 97       	sbiw	r30, 0x00	; 0
    4534:	29 f0       	breq	.+10     	; 0x4540 <__vector_61+0x3c>
    4536:	80 91 12 25 	lds	r24, 0x2512	; 0x802512 <InterruptSenderTable+0x7a>
    453a:	90 91 13 25 	lds	r25, 0x2513	; 0x802513 <InterruptSenderTable+0x7b>
    453e:	19 95       	eicall
    4540:	ff 91       	pop	r31
    4542:	ef 91       	pop	r30
    4544:	bf 91       	pop	r27
    4546:	af 91       	pop	r26
    4548:	9f 91       	pop	r25
    454a:	8f 91       	pop	r24
    454c:	7f 91       	pop	r23
    454e:	6f 91       	pop	r22
    4550:	5f 91       	pop	r21
    4552:	4f 91       	pop	r20
    4554:	3f 91       	pop	r19
    4556:	2f 91       	pop	r18
    4558:	0f 90       	pop	r0
    455a:	0b be       	out	0x3b, r0	; 59
    455c:	0f 90       	pop	r0
    455e:	0f be       	out	0x3f, r0	; 63
    4560:	0f 90       	pop	r0
    4562:	1f 90       	pop	r1
    4564:	18 95       	reti

00004566 <__vector_62>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTE1_DRE_vect)      /* Data Register Empty Interrupt */
    4566:	1f 92       	push	r1
    4568:	0f 92       	push	r0
    456a:	0f b6       	in	r0, 0x3f	; 63
    456c:	0f 92       	push	r0
    456e:	11 24       	eor	r1, r1
    4570:	0b b6       	in	r0, 0x3b	; 59
    4572:	0f 92       	push	r0
    4574:	2f 93       	push	r18
    4576:	3f 93       	push	r19
    4578:	4f 93       	push	r20
    457a:	5f 93       	push	r21
    457c:	6f 93       	push	r22
    457e:	7f 93       	push	r23
    4580:	8f 93       	push	r24
    4582:	9f 93       	push	r25
    4584:	af 93       	push	r26
    4586:	bf 93       	push	r27
    4588:	ef 93       	push	r30
    458a:	ff 93       	push	r31
    458c:	e0 91 1e 24 	lds	r30, 0x241E	; 0x80241e <InterruptFuncTable+0x7c>
    4590:	f0 91 1f 24 	lds	r31, 0x241F	; 0x80241f <InterruptFuncTable+0x7d>
    4594:	30 97       	sbiw	r30, 0x00	; 0
    4596:	29 f0       	breq	.+10     	; 0x45a2 <__vector_62+0x3c>
    4598:	80 91 14 25 	lds	r24, 0x2514	; 0x802514 <InterruptSenderTable+0x7c>
    459c:	90 91 15 25 	lds	r25, 0x2515	; 0x802515 <InterruptSenderTable+0x7d>
    45a0:	19 95       	eicall
    45a2:	ff 91       	pop	r31
    45a4:	ef 91       	pop	r30
    45a6:	bf 91       	pop	r27
    45a8:	af 91       	pop	r26
    45aa:	9f 91       	pop	r25
    45ac:	8f 91       	pop	r24
    45ae:	7f 91       	pop	r23
    45b0:	6f 91       	pop	r22
    45b2:	5f 91       	pop	r21
    45b4:	4f 91       	pop	r20
    45b6:	3f 91       	pop	r19
    45b8:	2f 91       	pop	r18
    45ba:	0f 90       	pop	r0
    45bc:	0b be       	out	0x3b, r0	; 59
    45be:	0f 90       	pop	r0
    45c0:	0f be       	out	0x3f, r0	; 63
    45c2:	0f 90       	pop	r0
    45c4:	1f 90       	pop	r1
    45c6:	18 95       	reti

000045c8 <__vector_63>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTE1_TXC_vect)      /* Transmission Complete Interrupt */
    45c8:	1f 92       	push	r1
    45ca:	0f 92       	push	r0
    45cc:	0f b6       	in	r0, 0x3f	; 63
    45ce:	0f 92       	push	r0
    45d0:	11 24       	eor	r1, r1
    45d2:	0b b6       	in	r0, 0x3b	; 59
    45d4:	0f 92       	push	r0
    45d6:	2f 93       	push	r18
    45d8:	3f 93       	push	r19
    45da:	4f 93       	push	r20
    45dc:	5f 93       	push	r21
    45de:	6f 93       	push	r22
    45e0:	7f 93       	push	r23
    45e2:	8f 93       	push	r24
    45e4:	9f 93       	push	r25
    45e6:	af 93       	push	r26
    45e8:	bf 93       	push	r27
    45ea:	ef 93       	push	r30
    45ec:	ff 93       	push	r31
    45ee:	e0 91 20 24 	lds	r30, 0x2420	; 0x802420 <InterruptFuncTable+0x7e>
    45f2:	f0 91 21 24 	lds	r31, 0x2421	; 0x802421 <InterruptFuncTable+0x7f>
    45f6:	30 97       	sbiw	r30, 0x00	; 0
    45f8:	29 f0       	breq	.+10     	; 0x4604 <__vector_63+0x3c>
    45fa:	80 91 16 25 	lds	r24, 0x2516	; 0x802516 <InterruptSenderTable+0x7e>
    45fe:	90 91 17 25 	lds	r25, 0x2517	; 0x802517 <InterruptSenderTable+0x7f>
    4602:	19 95       	eicall
    4604:	ff 91       	pop	r31
    4606:	ef 91       	pop	r30
    4608:	bf 91       	pop	r27
    460a:	af 91       	pop	r26
    460c:	9f 91       	pop	r25
    460e:	8f 91       	pop	r24
    4610:	7f 91       	pop	r23
    4612:	6f 91       	pop	r22
    4614:	5f 91       	pop	r21
    4616:	4f 91       	pop	r20
    4618:	3f 91       	pop	r19
    461a:	2f 91       	pop	r18
    461c:	0f 90       	pop	r0
    461e:	0b be       	out	0x3b, r0	; 59
    4620:	0f 90       	pop	r0
    4622:	0f be       	out	0x3f, r0	; 63
    4624:	0f 90       	pop	r0
    4626:	1f 90       	pop	r1
    4628:	18 95       	reti

0000462a <__vector_64>:

/* PORTD interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTD_INT0_vect)      /* External Interrupt 0 */
    462a:	1f 92       	push	r1
    462c:	0f 92       	push	r0
    462e:	0f b6       	in	r0, 0x3f	; 63
    4630:	0f 92       	push	r0
    4632:	11 24       	eor	r1, r1
    4634:	0b b6       	in	r0, 0x3b	; 59
    4636:	0f 92       	push	r0
    4638:	2f 93       	push	r18
    463a:	3f 93       	push	r19
    463c:	4f 93       	push	r20
    463e:	5f 93       	push	r21
    4640:	6f 93       	push	r22
    4642:	7f 93       	push	r23
    4644:	8f 93       	push	r24
    4646:	9f 93       	push	r25
    4648:	af 93       	push	r26
    464a:	bf 93       	push	r27
    464c:	ef 93       	push	r30
    464e:	ff 93       	push	r31
    4650:	e0 91 22 24 	lds	r30, 0x2422	; 0x802422 <InterruptFuncTable+0x80>
    4654:	f0 91 23 24 	lds	r31, 0x2423	; 0x802423 <InterruptFuncTable+0x81>
    4658:	30 97       	sbiw	r30, 0x00	; 0
    465a:	29 f0       	breq	.+10     	; 0x4666 <__vector_64+0x3c>
    465c:	80 91 18 25 	lds	r24, 0x2518	; 0x802518 <InterruptSenderTable+0x80>
    4660:	90 91 19 25 	lds	r25, 0x2519	; 0x802519 <InterruptSenderTable+0x81>
    4664:	19 95       	eicall
    4666:	ff 91       	pop	r31
    4668:	ef 91       	pop	r30
    466a:	bf 91       	pop	r27
    466c:	af 91       	pop	r26
    466e:	9f 91       	pop	r25
    4670:	8f 91       	pop	r24
    4672:	7f 91       	pop	r23
    4674:	6f 91       	pop	r22
    4676:	5f 91       	pop	r21
    4678:	4f 91       	pop	r20
    467a:	3f 91       	pop	r19
    467c:	2f 91       	pop	r18
    467e:	0f 90       	pop	r0
    4680:	0b be       	out	0x3b, r0	; 59
    4682:	0f 90       	pop	r0
    4684:	0f be       	out	0x3f, r0	; 63
    4686:	0f 90       	pop	r0
    4688:	1f 90       	pop	r1
    468a:	18 95       	reti

0000468c <__vector_65>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTD_INT1_vect)      /* External Interrupt 1 */
    468c:	1f 92       	push	r1
    468e:	0f 92       	push	r0
    4690:	0f b6       	in	r0, 0x3f	; 63
    4692:	0f 92       	push	r0
    4694:	11 24       	eor	r1, r1
    4696:	0b b6       	in	r0, 0x3b	; 59
    4698:	0f 92       	push	r0
    469a:	2f 93       	push	r18
    469c:	3f 93       	push	r19
    469e:	4f 93       	push	r20
    46a0:	5f 93       	push	r21
    46a2:	6f 93       	push	r22
    46a4:	7f 93       	push	r23
    46a6:	8f 93       	push	r24
    46a8:	9f 93       	push	r25
    46aa:	af 93       	push	r26
    46ac:	bf 93       	push	r27
    46ae:	ef 93       	push	r30
    46b0:	ff 93       	push	r31
    46b2:	e0 91 24 24 	lds	r30, 0x2424	; 0x802424 <InterruptFuncTable+0x82>
    46b6:	f0 91 25 24 	lds	r31, 0x2425	; 0x802425 <InterruptFuncTable+0x83>
    46ba:	30 97       	sbiw	r30, 0x00	; 0
    46bc:	29 f0       	breq	.+10     	; 0x46c8 <__vector_65+0x3c>
    46be:	80 91 1a 25 	lds	r24, 0x251A	; 0x80251a <InterruptSenderTable+0x82>
    46c2:	90 91 1b 25 	lds	r25, 0x251B	; 0x80251b <InterruptSenderTable+0x83>
    46c6:	19 95       	eicall
    46c8:	ff 91       	pop	r31
    46ca:	ef 91       	pop	r30
    46cc:	bf 91       	pop	r27
    46ce:	af 91       	pop	r26
    46d0:	9f 91       	pop	r25
    46d2:	8f 91       	pop	r24
    46d4:	7f 91       	pop	r23
    46d6:	6f 91       	pop	r22
    46d8:	5f 91       	pop	r21
    46da:	4f 91       	pop	r20
    46dc:	3f 91       	pop	r19
    46de:	2f 91       	pop	r18
    46e0:	0f 90       	pop	r0
    46e2:	0b be       	out	0x3b, r0	; 59
    46e4:	0f 90       	pop	r0
    46e6:	0f be       	out	0x3f, r0	; 63
    46e8:	0f 90       	pop	r0
    46ea:	1f 90       	pop	r1
    46ec:	18 95       	reti

000046ee <__vector_66>:

/* PORTA interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTA_INT0_vect)      /* External Interrupt 0 */
    46ee:	1f 92       	push	r1
    46f0:	0f 92       	push	r0
    46f2:	0f b6       	in	r0, 0x3f	; 63
    46f4:	0f 92       	push	r0
    46f6:	11 24       	eor	r1, r1
    46f8:	0b b6       	in	r0, 0x3b	; 59
    46fa:	0f 92       	push	r0
    46fc:	2f 93       	push	r18
    46fe:	3f 93       	push	r19
    4700:	4f 93       	push	r20
    4702:	5f 93       	push	r21
    4704:	6f 93       	push	r22
    4706:	7f 93       	push	r23
    4708:	8f 93       	push	r24
    470a:	9f 93       	push	r25
    470c:	af 93       	push	r26
    470e:	bf 93       	push	r27
    4710:	ef 93       	push	r30
    4712:	ff 93       	push	r31
    4714:	e0 91 26 24 	lds	r30, 0x2426	; 0x802426 <InterruptFuncTable+0x84>
    4718:	f0 91 27 24 	lds	r31, 0x2427	; 0x802427 <InterruptFuncTable+0x85>
    471c:	30 97       	sbiw	r30, 0x00	; 0
    471e:	29 f0       	breq	.+10     	; 0x472a <__vector_66+0x3c>
    4720:	80 91 1c 25 	lds	r24, 0x251C	; 0x80251c <InterruptSenderTable+0x84>
    4724:	90 91 1d 25 	lds	r25, 0x251D	; 0x80251d <InterruptSenderTable+0x85>
    4728:	19 95       	eicall
    472a:	ff 91       	pop	r31
    472c:	ef 91       	pop	r30
    472e:	bf 91       	pop	r27
    4730:	af 91       	pop	r26
    4732:	9f 91       	pop	r25
    4734:	8f 91       	pop	r24
    4736:	7f 91       	pop	r23
    4738:	6f 91       	pop	r22
    473a:	5f 91       	pop	r21
    473c:	4f 91       	pop	r20
    473e:	3f 91       	pop	r19
    4740:	2f 91       	pop	r18
    4742:	0f 90       	pop	r0
    4744:	0b be       	out	0x3b, r0	; 59
    4746:	0f 90       	pop	r0
    4748:	0f be       	out	0x3f, r0	; 63
    474a:	0f 90       	pop	r0
    474c:	1f 90       	pop	r1
    474e:	18 95       	reti

00004750 <__vector_67>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTA_INT1_vect)      /* External Interrupt 1 */
    4750:	1f 92       	push	r1
    4752:	0f 92       	push	r0
    4754:	0f b6       	in	r0, 0x3f	; 63
    4756:	0f 92       	push	r0
    4758:	11 24       	eor	r1, r1
    475a:	0b b6       	in	r0, 0x3b	; 59
    475c:	0f 92       	push	r0
    475e:	2f 93       	push	r18
    4760:	3f 93       	push	r19
    4762:	4f 93       	push	r20
    4764:	5f 93       	push	r21
    4766:	6f 93       	push	r22
    4768:	7f 93       	push	r23
    476a:	8f 93       	push	r24
    476c:	9f 93       	push	r25
    476e:	af 93       	push	r26
    4770:	bf 93       	push	r27
    4772:	ef 93       	push	r30
    4774:	ff 93       	push	r31
    4776:	e0 91 28 24 	lds	r30, 0x2428	; 0x802428 <InterruptFuncTable+0x86>
    477a:	f0 91 29 24 	lds	r31, 0x2429	; 0x802429 <InterruptFuncTable+0x87>
    477e:	30 97       	sbiw	r30, 0x00	; 0
    4780:	29 f0       	breq	.+10     	; 0x478c <__vector_67+0x3c>
    4782:	80 91 1e 25 	lds	r24, 0x251E	; 0x80251e <InterruptSenderTable+0x86>
    4786:	90 91 1f 25 	lds	r25, 0x251F	; 0x80251f <InterruptSenderTable+0x87>
    478a:	19 95       	eicall
    478c:	ff 91       	pop	r31
    478e:	ef 91       	pop	r30
    4790:	bf 91       	pop	r27
    4792:	af 91       	pop	r26
    4794:	9f 91       	pop	r25
    4796:	8f 91       	pop	r24
    4798:	7f 91       	pop	r23
    479a:	6f 91       	pop	r22
    479c:	5f 91       	pop	r21
    479e:	4f 91       	pop	r20
    47a0:	3f 91       	pop	r19
    47a2:	2f 91       	pop	r18
    47a4:	0f 90       	pop	r0
    47a6:	0b be       	out	0x3b, r0	; 59
    47a8:	0f 90       	pop	r0
    47aa:	0f be       	out	0x3f, r0	; 63
    47ac:	0f 90       	pop	r0
    47ae:	1f 90       	pop	r1
    47b0:	18 95       	reti

000047b2 <__vector_68>:

/* ACA interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ACA_AC0_vect)      /* AC0 Interrupt */
    47b2:	1f 92       	push	r1
    47b4:	0f 92       	push	r0
    47b6:	0f b6       	in	r0, 0x3f	; 63
    47b8:	0f 92       	push	r0
    47ba:	11 24       	eor	r1, r1
    47bc:	0b b6       	in	r0, 0x3b	; 59
    47be:	0f 92       	push	r0
    47c0:	2f 93       	push	r18
    47c2:	3f 93       	push	r19
    47c4:	4f 93       	push	r20
    47c6:	5f 93       	push	r21
    47c8:	6f 93       	push	r22
    47ca:	7f 93       	push	r23
    47cc:	8f 93       	push	r24
    47ce:	9f 93       	push	r25
    47d0:	af 93       	push	r26
    47d2:	bf 93       	push	r27
    47d4:	ef 93       	push	r30
    47d6:	ff 93       	push	r31
    47d8:	e0 91 2a 24 	lds	r30, 0x242A	; 0x80242a <InterruptFuncTable+0x88>
    47dc:	f0 91 2b 24 	lds	r31, 0x242B	; 0x80242b <InterruptFuncTable+0x89>
    47e0:	30 97       	sbiw	r30, 0x00	; 0
    47e2:	29 f0       	breq	.+10     	; 0x47ee <__vector_68+0x3c>
    47e4:	80 91 20 25 	lds	r24, 0x2520	; 0x802520 <InterruptSenderTable+0x88>
    47e8:	90 91 21 25 	lds	r25, 0x2521	; 0x802521 <InterruptSenderTable+0x89>
    47ec:	19 95       	eicall
    47ee:	ff 91       	pop	r31
    47f0:	ef 91       	pop	r30
    47f2:	bf 91       	pop	r27
    47f4:	af 91       	pop	r26
    47f6:	9f 91       	pop	r25
    47f8:	8f 91       	pop	r24
    47fa:	7f 91       	pop	r23
    47fc:	6f 91       	pop	r22
    47fe:	5f 91       	pop	r21
    4800:	4f 91       	pop	r20
    4802:	3f 91       	pop	r19
    4804:	2f 91       	pop	r18
    4806:	0f 90       	pop	r0
    4808:	0b be       	out	0x3b, r0	; 59
    480a:	0f 90       	pop	r0
    480c:	0f be       	out	0x3f, r0	; 63
    480e:	0f 90       	pop	r0
    4810:	1f 90       	pop	r1
    4812:	18 95       	reti

00004814 <__vector_69>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ACA_AC1_vect)      /* AC1 Interrupt */
    4814:	1f 92       	push	r1
    4816:	0f 92       	push	r0
    4818:	0f b6       	in	r0, 0x3f	; 63
    481a:	0f 92       	push	r0
    481c:	11 24       	eor	r1, r1
    481e:	0b b6       	in	r0, 0x3b	; 59
    4820:	0f 92       	push	r0
    4822:	2f 93       	push	r18
    4824:	3f 93       	push	r19
    4826:	4f 93       	push	r20
    4828:	5f 93       	push	r21
    482a:	6f 93       	push	r22
    482c:	7f 93       	push	r23
    482e:	8f 93       	push	r24
    4830:	9f 93       	push	r25
    4832:	af 93       	push	r26
    4834:	bf 93       	push	r27
    4836:	ef 93       	push	r30
    4838:	ff 93       	push	r31
    483a:	e0 91 2c 24 	lds	r30, 0x242C	; 0x80242c <InterruptFuncTable+0x8a>
    483e:	f0 91 2d 24 	lds	r31, 0x242D	; 0x80242d <InterruptFuncTable+0x8b>
    4842:	30 97       	sbiw	r30, 0x00	; 0
    4844:	29 f0       	breq	.+10     	; 0x4850 <__vector_69+0x3c>
    4846:	80 91 22 25 	lds	r24, 0x2522	; 0x802522 <InterruptSenderTable+0x8a>
    484a:	90 91 23 25 	lds	r25, 0x2523	; 0x802523 <InterruptSenderTable+0x8b>
    484e:	19 95       	eicall
    4850:	ff 91       	pop	r31
    4852:	ef 91       	pop	r30
    4854:	bf 91       	pop	r27
    4856:	af 91       	pop	r26
    4858:	9f 91       	pop	r25
    485a:	8f 91       	pop	r24
    485c:	7f 91       	pop	r23
    485e:	6f 91       	pop	r22
    4860:	5f 91       	pop	r21
    4862:	4f 91       	pop	r20
    4864:	3f 91       	pop	r19
    4866:	2f 91       	pop	r18
    4868:	0f 90       	pop	r0
    486a:	0b be       	out	0x3b, r0	; 59
    486c:	0f 90       	pop	r0
    486e:	0f be       	out	0x3f, r0	; 63
    4870:	0f 90       	pop	r0
    4872:	1f 90       	pop	r1
    4874:	18 95       	reti

00004876 <__vector_70>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ACA_ACW_vect)      /* ACW Window Mode Interrupt */
    4876:	1f 92       	push	r1
    4878:	0f 92       	push	r0
    487a:	0f b6       	in	r0, 0x3f	; 63
    487c:	0f 92       	push	r0
    487e:	11 24       	eor	r1, r1
    4880:	0b b6       	in	r0, 0x3b	; 59
    4882:	0f 92       	push	r0
    4884:	2f 93       	push	r18
    4886:	3f 93       	push	r19
    4888:	4f 93       	push	r20
    488a:	5f 93       	push	r21
    488c:	6f 93       	push	r22
    488e:	7f 93       	push	r23
    4890:	8f 93       	push	r24
    4892:	9f 93       	push	r25
    4894:	af 93       	push	r26
    4896:	bf 93       	push	r27
    4898:	ef 93       	push	r30
    489a:	ff 93       	push	r31
    489c:	e0 91 2e 24 	lds	r30, 0x242E	; 0x80242e <InterruptFuncTable+0x8c>
    48a0:	f0 91 2f 24 	lds	r31, 0x242F	; 0x80242f <InterruptFuncTable+0x8d>
    48a4:	30 97       	sbiw	r30, 0x00	; 0
    48a6:	29 f0       	breq	.+10     	; 0x48b2 <__vector_70+0x3c>
    48a8:	80 91 24 25 	lds	r24, 0x2524	; 0x802524 <InterruptSenderTable+0x8c>
    48ac:	90 91 25 25 	lds	r25, 0x2525	; 0x802525 <InterruptSenderTable+0x8d>
    48b0:	19 95       	eicall
    48b2:	ff 91       	pop	r31
    48b4:	ef 91       	pop	r30
    48b6:	bf 91       	pop	r27
    48b8:	af 91       	pop	r26
    48ba:	9f 91       	pop	r25
    48bc:	8f 91       	pop	r24
    48be:	7f 91       	pop	r23
    48c0:	6f 91       	pop	r22
    48c2:	5f 91       	pop	r21
    48c4:	4f 91       	pop	r20
    48c6:	3f 91       	pop	r19
    48c8:	2f 91       	pop	r18
    48ca:	0f 90       	pop	r0
    48cc:	0b be       	out	0x3b, r0	; 59
    48ce:	0f 90       	pop	r0
    48d0:	0f be       	out	0x3f, r0	; 63
    48d2:	0f 90       	pop	r0
    48d4:	1f 90       	pop	r1
    48d6:	18 95       	reti

000048d8 <__vector_71>:

/* ADCA interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ADCA_CH0_vect)      /* Interrupt 0 */
    48d8:	1f 92       	push	r1
    48da:	0f 92       	push	r0
    48dc:	0f b6       	in	r0, 0x3f	; 63
    48de:	0f 92       	push	r0
    48e0:	11 24       	eor	r1, r1
    48e2:	0b b6       	in	r0, 0x3b	; 59
    48e4:	0f 92       	push	r0
    48e6:	2f 93       	push	r18
    48e8:	3f 93       	push	r19
    48ea:	4f 93       	push	r20
    48ec:	5f 93       	push	r21
    48ee:	6f 93       	push	r22
    48f0:	7f 93       	push	r23
    48f2:	8f 93       	push	r24
    48f4:	9f 93       	push	r25
    48f6:	af 93       	push	r26
    48f8:	bf 93       	push	r27
    48fa:	ef 93       	push	r30
    48fc:	ff 93       	push	r31
    48fe:	e0 91 30 24 	lds	r30, 0x2430	; 0x802430 <InterruptFuncTable+0x8e>
    4902:	f0 91 31 24 	lds	r31, 0x2431	; 0x802431 <InterruptFuncTable+0x8f>
    4906:	30 97       	sbiw	r30, 0x00	; 0
    4908:	29 f0       	breq	.+10     	; 0x4914 <__vector_71+0x3c>
    490a:	80 91 26 25 	lds	r24, 0x2526	; 0x802526 <InterruptSenderTable+0x8e>
    490e:	90 91 27 25 	lds	r25, 0x2527	; 0x802527 <InterruptSenderTable+0x8f>
    4912:	19 95       	eicall
    4914:	ff 91       	pop	r31
    4916:	ef 91       	pop	r30
    4918:	bf 91       	pop	r27
    491a:	af 91       	pop	r26
    491c:	9f 91       	pop	r25
    491e:	8f 91       	pop	r24
    4920:	7f 91       	pop	r23
    4922:	6f 91       	pop	r22
    4924:	5f 91       	pop	r21
    4926:	4f 91       	pop	r20
    4928:	3f 91       	pop	r19
    492a:	2f 91       	pop	r18
    492c:	0f 90       	pop	r0
    492e:	0b be       	out	0x3b, r0	; 59
    4930:	0f 90       	pop	r0
    4932:	0f be       	out	0x3f, r0	; 63
    4934:	0f 90       	pop	r0
    4936:	1f 90       	pop	r1
    4938:	18 95       	reti

0000493a <__vector_72>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ADCA_CH1_vect)      /* Interrupt 1 */
    493a:	1f 92       	push	r1
    493c:	0f 92       	push	r0
    493e:	0f b6       	in	r0, 0x3f	; 63
    4940:	0f 92       	push	r0
    4942:	11 24       	eor	r1, r1
    4944:	0b b6       	in	r0, 0x3b	; 59
    4946:	0f 92       	push	r0
    4948:	2f 93       	push	r18
    494a:	3f 93       	push	r19
    494c:	4f 93       	push	r20
    494e:	5f 93       	push	r21
    4950:	6f 93       	push	r22
    4952:	7f 93       	push	r23
    4954:	8f 93       	push	r24
    4956:	9f 93       	push	r25
    4958:	af 93       	push	r26
    495a:	bf 93       	push	r27
    495c:	ef 93       	push	r30
    495e:	ff 93       	push	r31
    4960:	e0 91 32 24 	lds	r30, 0x2432	; 0x802432 <InterruptFuncTable+0x90>
    4964:	f0 91 33 24 	lds	r31, 0x2433	; 0x802433 <InterruptFuncTable+0x91>
    4968:	30 97       	sbiw	r30, 0x00	; 0
    496a:	29 f0       	breq	.+10     	; 0x4976 <__vector_72+0x3c>
    496c:	80 91 28 25 	lds	r24, 0x2528	; 0x802528 <InterruptSenderTable+0x90>
    4970:	90 91 29 25 	lds	r25, 0x2529	; 0x802529 <InterruptSenderTable+0x91>
    4974:	19 95       	eicall
    4976:	ff 91       	pop	r31
    4978:	ef 91       	pop	r30
    497a:	bf 91       	pop	r27
    497c:	af 91       	pop	r26
    497e:	9f 91       	pop	r25
    4980:	8f 91       	pop	r24
    4982:	7f 91       	pop	r23
    4984:	6f 91       	pop	r22
    4986:	5f 91       	pop	r21
    4988:	4f 91       	pop	r20
    498a:	3f 91       	pop	r19
    498c:	2f 91       	pop	r18
    498e:	0f 90       	pop	r0
    4990:	0b be       	out	0x3b, r0	; 59
    4992:	0f 90       	pop	r0
    4994:	0f be       	out	0x3f, r0	; 63
    4996:	0f 90       	pop	r0
    4998:	1f 90       	pop	r1
    499a:	18 95       	reti

0000499c <__vector_73>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ADCA_CH2_vect)      /* Interrupt 2 */
    499c:	1f 92       	push	r1
    499e:	0f 92       	push	r0
    49a0:	0f b6       	in	r0, 0x3f	; 63
    49a2:	0f 92       	push	r0
    49a4:	11 24       	eor	r1, r1
    49a6:	0b b6       	in	r0, 0x3b	; 59
    49a8:	0f 92       	push	r0
    49aa:	2f 93       	push	r18
    49ac:	3f 93       	push	r19
    49ae:	4f 93       	push	r20
    49b0:	5f 93       	push	r21
    49b2:	6f 93       	push	r22
    49b4:	7f 93       	push	r23
    49b6:	8f 93       	push	r24
    49b8:	9f 93       	push	r25
    49ba:	af 93       	push	r26
    49bc:	bf 93       	push	r27
    49be:	ef 93       	push	r30
    49c0:	ff 93       	push	r31
    49c2:	e0 91 34 24 	lds	r30, 0x2434	; 0x802434 <InterruptFuncTable+0x92>
    49c6:	f0 91 35 24 	lds	r31, 0x2435	; 0x802435 <InterruptFuncTable+0x93>
    49ca:	30 97       	sbiw	r30, 0x00	; 0
    49cc:	29 f0       	breq	.+10     	; 0x49d8 <__vector_73+0x3c>
    49ce:	80 91 2a 25 	lds	r24, 0x252A	; 0x80252a <InterruptSenderTable+0x92>
    49d2:	90 91 2b 25 	lds	r25, 0x252B	; 0x80252b <InterruptSenderTable+0x93>
    49d6:	19 95       	eicall
    49d8:	ff 91       	pop	r31
    49da:	ef 91       	pop	r30
    49dc:	bf 91       	pop	r27
    49de:	af 91       	pop	r26
    49e0:	9f 91       	pop	r25
    49e2:	8f 91       	pop	r24
    49e4:	7f 91       	pop	r23
    49e6:	6f 91       	pop	r22
    49e8:	5f 91       	pop	r21
    49ea:	4f 91       	pop	r20
    49ec:	3f 91       	pop	r19
    49ee:	2f 91       	pop	r18
    49f0:	0f 90       	pop	r0
    49f2:	0b be       	out	0x3b, r0	; 59
    49f4:	0f 90       	pop	r0
    49f6:	0f be       	out	0x3f, r0	; 63
    49f8:	0f 90       	pop	r0
    49fa:	1f 90       	pop	r1
    49fc:	18 95       	reti

000049fe <__vector_74>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(ADCA_CH3_vect)      /* Interrupt 3 */
    49fe:	1f 92       	push	r1
    4a00:	0f 92       	push	r0
    4a02:	0f b6       	in	r0, 0x3f	; 63
    4a04:	0f 92       	push	r0
    4a06:	11 24       	eor	r1, r1
    4a08:	0b b6       	in	r0, 0x3b	; 59
    4a0a:	0f 92       	push	r0
    4a0c:	2f 93       	push	r18
    4a0e:	3f 93       	push	r19
    4a10:	4f 93       	push	r20
    4a12:	5f 93       	push	r21
    4a14:	6f 93       	push	r22
    4a16:	7f 93       	push	r23
    4a18:	8f 93       	push	r24
    4a1a:	9f 93       	push	r25
    4a1c:	af 93       	push	r26
    4a1e:	bf 93       	push	r27
    4a20:	ef 93       	push	r30
    4a22:	ff 93       	push	r31
    4a24:	e0 91 36 24 	lds	r30, 0x2436	; 0x802436 <InterruptFuncTable+0x94>
    4a28:	f0 91 37 24 	lds	r31, 0x2437	; 0x802437 <InterruptFuncTable+0x95>
    4a2c:	30 97       	sbiw	r30, 0x00	; 0
    4a2e:	29 f0       	breq	.+10     	; 0x4a3a <__vector_74+0x3c>
    4a30:	80 91 2c 25 	lds	r24, 0x252C	; 0x80252c <InterruptSenderTable+0x94>
    4a34:	90 91 2d 25 	lds	r25, 0x252D	; 0x80252d <InterruptSenderTable+0x95>
    4a38:	19 95       	eicall
    4a3a:	ff 91       	pop	r31
    4a3c:	ef 91       	pop	r30
    4a3e:	bf 91       	pop	r27
    4a40:	af 91       	pop	r26
    4a42:	9f 91       	pop	r25
    4a44:	8f 91       	pop	r24
    4a46:	7f 91       	pop	r23
    4a48:	6f 91       	pop	r22
    4a4a:	5f 91       	pop	r21
    4a4c:	4f 91       	pop	r20
    4a4e:	3f 91       	pop	r19
    4a50:	2f 91       	pop	r18
    4a52:	0f 90       	pop	r0
    4a54:	0b be       	out	0x3b, r0	; 59
    4a56:	0f 90       	pop	r0
    4a58:	0f be       	out	0x3f, r0	; 63
    4a5a:	0f 90       	pop	r0
    4a5c:	1f 90       	pop	r1
    4a5e:	18 95       	reti

00004a60 <__vector_77>:

/* TCD0 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD0_OVF_vect)      /* Overflow Interrupt */
    4a60:	1f 92       	push	r1
    4a62:	0f 92       	push	r0
    4a64:	0f b6       	in	r0, 0x3f	; 63
    4a66:	0f 92       	push	r0
    4a68:	11 24       	eor	r1, r1
    4a6a:	0b b6       	in	r0, 0x3b	; 59
    4a6c:	0f 92       	push	r0
    4a6e:	2f 93       	push	r18
    4a70:	3f 93       	push	r19
    4a72:	4f 93       	push	r20
    4a74:	5f 93       	push	r21
    4a76:	6f 93       	push	r22
    4a78:	7f 93       	push	r23
    4a7a:	8f 93       	push	r24
    4a7c:	9f 93       	push	r25
    4a7e:	af 93       	push	r26
    4a80:	bf 93       	push	r27
    4a82:	ef 93       	push	r30
    4a84:	ff 93       	push	r31
    4a86:	e0 91 3c 24 	lds	r30, 0x243C	; 0x80243c <InterruptFuncTable+0x9a>
    4a8a:	f0 91 3d 24 	lds	r31, 0x243D	; 0x80243d <InterruptFuncTable+0x9b>
    4a8e:	30 97       	sbiw	r30, 0x00	; 0
    4a90:	29 f0       	breq	.+10     	; 0x4a9c <__vector_77+0x3c>
    4a92:	80 91 32 25 	lds	r24, 0x2532	; 0x802532 <InterruptSenderTable+0x9a>
    4a96:	90 91 33 25 	lds	r25, 0x2533	; 0x802533 <InterruptSenderTable+0x9b>
    4a9a:	19 95       	eicall
    4a9c:	ff 91       	pop	r31
    4a9e:	ef 91       	pop	r30
    4aa0:	bf 91       	pop	r27
    4aa2:	af 91       	pop	r26
    4aa4:	9f 91       	pop	r25
    4aa6:	8f 91       	pop	r24
    4aa8:	7f 91       	pop	r23
    4aaa:	6f 91       	pop	r22
    4aac:	5f 91       	pop	r21
    4aae:	4f 91       	pop	r20
    4ab0:	3f 91       	pop	r19
    4ab2:	2f 91       	pop	r18
    4ab4:	0f 90       	pop	r0
    4ab6:	0b be       	out	0x3b, r0	; 59
    4ab8:	0f 90       	pop	r0
    4aba:	0f be       	out	0x3f, r0	; 63
    4abc:	0f 90       	pop	r0
    4abe:	1f 90       	pop	r1
    4ac0:	18 95       	reti

00004ac2 <__vector_78>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD0_ERR_vect)      /* Error Interrupt */
    4ac2:	1f 92       	push	r1
    4ac4:	0f 92       	push	r0
    4ac6:	0f b6       	in	r0, 0x3f	; 63
    4ac8:	0f 92       	push	r0
    4aca:	11 24       	eor	r1, r1
    4acc:	0b b6       	in	r0, 0x3b	; 59
    4ace:	0f 92       	push	r0
    4ad0:	2f 93       	push	r18
    4ad2:	3f 93       	push	r19
    4ad4:	4f 93       	push	r20
    4ad6:	5f 93       	push	r21
    4ad8:	6f 93       	push	r22
    4ada:	7f 93       	push	r23
    4adc:	8f 93       	push	r24
    4ade:	9f 93       	push	r25
    4ae0:	af 93       	push	r26
    4ae2:	bf 93       	push	r27
    4ae4:	ef 93       	push	r30
    4ae6:	ff 93       	push	r31
    4ae8:	e0 91 3e 24 	lds	r30, 0x243E	; 0x80243e <InterruptFuncTable+0x9c>
    4aec:	f0 91 3f 24 	lds	r31, 0x243F	; 0x80243f <InterruptFuncTable+0x9d>
    4af0:	30 97       	sbiw	r30, 0x00	; 0
    4af2:	29 f0       	breq	.+10     	; 0x4afe <__vector_78+0x3c>
    4af4:	80 91 34 25 	lds	r24, 0x2534	; 0x802534 <InterruptSenderTable+0x9c>
    4af8:	90 91 35 25 	lds	r25, 0x2535	; 0x802535 <InterruptSenderTable+0x9d>
    4afc:	19 95       	eicall
    4afe:	ff 91       	pop	r31
    4b00:	ef 91       	pop	r30
    4b02:	bf 91       	pop	r27
    4b04:	af 91       	pop	r26
    4b06:	9f 91       	pop	r25
    4b08:	8f 91       	pop	r24
    4b0a:	7f 91       	pop	r23
    4b0c:	6f 91       	pop	r22
    4b0e:	5f 91       	pop	r21
    4b10:	4f 91       	pop	r20
    4b12:	3f 91       	pop	r19
    4b14:	2f 91       	pop	r18
    4b16:	0f 90       	pop	r0
    4b18:	0b be       	out	0x3b, r0	; 59
    4b1a:	0f 90       	pop	r0
    4b1c:	0f be       	out	0x3f, r0	; 63
    4b1e:	0f 90       	pop	r0
    4b20:	1f 90       	pop	r1
    4b22:	18 95       	reti

00004b24 <__vector_79>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD0_CCA_vect)      /* Compare or Capture A Interrupt */
    4b24:	1f 92       	push	r1
    4b26:	0f 92       	push	r0
    4b28:	0f b6       	in	r0, 0x3f	; 63
    4b2a:	0f 92       	push	r0
    4b2c:	11 24       	eor	r1, r1
    4b2e:	0b b6       	in	r0, 0x3b	; 59
    4b30:	0f 92       	push	r0
    4b32:	2f 93       	push	r18
    4b34:	3f 93       	push	r19
    4b36:	4f 93       	push	r20
    4b38:	5f 93       	push	r21
    4b3a:	6f 93       	push	r22
    4b3c:	7f 93       	push	r23
    4b3e:	8f 93       	push	r24
    4b40:	9f 93       	push	r25
    4b42:	af 93       	push	r26
    4b44:	bf 93       	push	r27
    4b46:	ef 93       	push	r30
    4b48:	ff 93       	push	r31
    4b4a:	e0 91 40 24 	lds	r30, 0x2440	; 0x802440 <InterruptFuncTable+0x9e>
    4b4e:	f0 91 41 24 	lds	r31, 0x2441	; 0x802441 <InterruptFuncTable+0x9f>
    4b52:	30 97       	sbiw	r30, 0x00	; 0
    4b54:	29 f0       	breq	.+10     	; 0x4b60 <__vector_79+0x3c>
    4b56:	80 91 36 25 	lds	r24, 0x2536	; 0x802536 <InterruptSenderTable+0x9e>
    4b5a:	90 91 37 25 	lds	r25, 0x2537	; 0x802537 <InterruptSenderTable+0x9f>
    4b5e:	19 95       	eicall
    4b60:	ff 91       	pop	r31
    4b62:	ef 91       	pop	r30
    4b64:	bf 91       	pop	r27
    4b66:	af 91       	pop	r26
    4b68:	9f 91       	pop	r25
    4b6a:	8f 91       	pop	r24
    4b6c:	7f 91       	pop	r23
    4b6e:	6f 91       	pop	r22
    4b70:	5f 91       	pop	r21
    4b72:	4f 91       	pop	r20
    4b74:	3f 91       	pop	r19
    4b76:	2f 91       	pop	r18
    4b78:	0f 90       	pop	r0
    4b7a:	0b be       	out	0x3b, r0	; 59
    4b7c:	0f 90       	pop	r0
    4b7e:	0f be       	out	0x3f, r0	; 63
    4b80:	0f 90       	pop	r0
    4b82:	1f 90       	pop	r1
    4b84:	18 95       	reti

00004b86 <__vector_80>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD0_CCB_vect)      /* Compare or Capture B Interrupt */
    4b86:	1f 92       	push	r1
    4b88:	0f 92       	push	r0
    4b8a:	0f b6       	in	r0, 0x3f	; 63
    4b8c:	0f 92       	push	r0
    4b8e:	11 24       	eor	r1, r1
    4b90:	0b b6       	in	r0, 0x3b	; 59
    4b92:	0f 92       	push	r0
    4b94:	2f 93       	push	r18
    4b96:	3f 93       	push	r19
    4b98:	4f 93       	push	r20
    4b9a:	5f 93       	push	r21
    4b9c:	6f 93       	push	r22
    4b9e:	7f 93       	push	r23
    4ba0:	8f 93       	push	r24
    4ba2:	9f 93       	push	r25
    4ba4:	af 93       	push	r26
    4ba6:	bf 93       	push	r27
    4ba8:	ef 93       	push	r30
    4baa:	ff 93       	push	r31
    4bac:	e0 91 42 24 	lds	r30, 0x2442	; 0x802442 <InterruptFuncTable+0xa0>
    4bb0:	f0 91 43 24 	lds	r31, 0x2443	; 0x802443 <InterruptFuncTable+0xa1>
    4bb4:	30 97       	sbiw	r30, 0x00	; 0
    4bb6:	29 f0       	breq	.+10     	; 0x4bc2 <__vector_80+0x3c>
    4bb8:	80 91 38 25 	lds	r24, 0x2538	; 0x802538 <InterruptSenderTable+0xa0>
    4bbc:	90 91 39 25 	lds	r25, 0x2539	; 0x802539 <InterruptSenderTable+0xa1>
    4bc0:	19 95       	eicall
    4bc2:	ff 91       	pop	r31
    4bc4:	ef 91       	pop	r30
    4bc6:	bf 91       	pop	r27
    4bc8:	af 91       	pop	r26
    4bca:	9f 91       	pop	r25
    4bcc:	8f 91       	pop	r24
    4bce:	7f 91       	pop	r23
    4bd0:	6f 91       	pop	r22
    4bd2:	5f 91       	pop	r21
    4bd4:	4f 91       	pop	r20
    4bd6:	3f 91       	pop	r19
    4bd8:	2f 91       	pop	r18
    4bda:	0f 90       	pop	r0
    4bdc:	0b be       	out	0x3b, r0	; 59
    4bde:	0f 90       	pop	r0
    4be0:	0f be       	out	0x3f, r0	; 63
    4be2:	0f 90       	pop	r0
    4be4:	1f 90       	pop	r1
    4be6:	18 95       	reti

00004be8 <__vector_81>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD0_CCC_vect)      /* Compare or Capture C Interrupt */
    4be8:	1f 92       	push	r1
    4bea:	0f 92       	push	r0
    4bec:	0f b6       	in	r0, 0x3f	; 63
    4bee:	0f 92       	push	r0
    4bf0:	11 24       	eor	r1, r1
    4bf2:	0b b6       	in	r0, 0x3b	; 59
    4bf4:	0f 92       	push	r0
    4bf6:	2f 93       	push	r18
    4bf8:	3f 93       	push	r19
    4bfa:	4f 93       	push	r20
    4bfc:	5f 93       	push	r21
    4bfe:	6f 93       	push	r22
    4c00:	7f 93       	push	r23
    4c02:	8f 93       	push	r24
    4c04:	9f 93       	push	r25
    4c06:	af 93       	push	r26
    4c08:	bf 93       	push	r27
    4c0a:	ef 93       	push	r30
    4c0c:	ff 93       	push	r31
    4c0e:	e0 91 44 24 	lds	r30, 0x2444	; 0x802444 <InterruptFuncTable+0xa2>
    4c12:	f0 91 45 24 	lds	r31, 0x2445	; 0x802445 <InterruptFuncTable+0xa3>
    4c16:	30 97       	sbiw	r30, 0x00	; 0
    4c18:	29 f0       	breq	.+10     	; 0x4c24 <__vector_81+0x3c>
    4c1a:	80 91 3a 25 	lds	r24, 0x253A	; 0x80253a <InterruptSenderTable+0xa2>
    4c1e:	90 91 3b 25 	lds	r25, 0x253B	; 0x80253b <InterruptSenderTable+0xa3>
    4c22:	19 95       	eicall
    4c24:	ff 91       	pop	r31
    4c26:	ef 91       	pop	r30
    4c28:	bf 91       	pop	r27
    4c2a:	af 91       	pop	r26
    4c2c:	9f 91       	pop	r25
    4c2e:	8f 91       	pop	r24
    4c30:	7f 91       	pop	r23
    4c32:	6f 91       	pop	r22
    4c34:	5f 91       	pop	r21
    4c36:	4f 91       	pop	r20
    4c38:	3f 91       	pop	r19
    4c3a:	2f 91       	pop	r18
    4c3c:	0f 90       	pop	r0
    4c3e:	0b be       	out	0x3b, r0	; 59
    4c40:	0f 90       	pop	r0
    4c42:	0f be       	out	0x3f, r0	; 63
    4c44:	0f 90       	pop	r0
    4c46:	1f 90       	pop	r1
    4c48:	18 95       	reti

00004c4a <__vector_82>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD0_CCD_vect)      /* Compare or Capture D Interrupt */
    4c4a:	1f 92       	push	r1
    4c4c:	0f 92       	push	r0
    4c4e:	0f b6       	in	r0, 0x3f	; 63
    4c50:	0f 92       	push	r0
    4c52:	11 24       	eor	r1, r1
    4c54:	0b b6       	in	r0, 0x3b	; 59
    4c56:	0f 92       	push	r0
    4c58:	2f 93       	push	r18
    4c5a:	3f 93       	push	r19
    4c5c:	4f 93       	push	r20
    4c5e:	5f 93       	push	r21
    4c60:	6f 93       	push	r22
    4c62:	7f 93       	push	r23
    4c64:	8f 93       	push	r24
    4c66:	9f 93       	push	r25
    4c68:	af 93       	push	r26
    4c6a:	bf 93       	push	r27
    4c6c:	ef 93       	push	r30
    4c6e:	ff 93       	push	r31
    4c70:	e0 91 46 24 	lds	r30, 0x2446	; 0x802446 <InterruptFuncTable+0xa4>
    4c74:	f0 91 47 24 	lds	r31, 0x2447	; 0x802447 <InterruptFuncTable+0xa5>
    4c78:	30 97       	sbiw	r30, 0x00	; 0
    4c7a:	29 f0       	breq	.+10     	; 0x4c86 <__vector_82+0x3c>
    4c7c:	80 91 3c 25 	lds	r24, 0x253C	; 0x80253c <InterruptSenderTable+0xa4>
    4c80:	90 91 3d 25 	lds	r25, 0x253D	; 0x80253d <InterruptSenderTable+0xa5>
    4c84:	19 95       	eicall
    4c86:	ff 91       	pop	r31
    4c88:	ef 91       	pop	r30
    4c8a:	bf 91       	pop	r27
    4c8c:	af 91       	pop	r26
    4c8e:	9f 91       	pop	r25
    4c90:	8f 91       	pop	r24
    4c92:	7f 91       	pop	r23
    4c94:	6f 91       	pop	r22
    4c96:	5f 91       	pop	r21
    4c98:	4f 91       	pop	r20
    4c9a:	3f 91       	pop	r19
    4c9c:	2f 91       	pop	r18
    4c9e:	0f 90       	pop	r0
    4ca0:	0b be       	out	0x3b, r0	; 59
    4ca2:	0f 90       	pop	r0
    4ca4:	0f be       	out	0x3f, r0	; 63
    4ca6:	0f 90       	pop	r0
    4ca8:	1f 90       	pop	r1
    4caa:	18 95       	reti

00004cac <__vector_83>:

/* TCD1 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD1_OVF_vect)      /* Overflow Interrupt */
    4cac:	1f 92       	push	r1
    4cae:	0f 92       	push	r0
    4cb0:	0f b6       	in	r0, 0x3f	; 63
    4cb2:	0f 92       	push	r0
    4cb4:	11 24       	eor	r1, r1
    4cb6:	0b b6       	in	r0, 0x3b	; 59
    4cb8:	0f 92       	push	r0
    4cba:	2f 93       	push	r18
    4cbc:	3f 93       	push	r19
    4cbe:	4f 93       	push	r20
    4cc0:	5f 93       	push	r21
    4cc2:	6f 93       	push	r22
    4cc4:	7f 93       	push	r23
    4cc6:	8f 93       	push	r24
    4cc8:	9f 93       	push	r25
    4cca:	af 93       	push	r26
    4ccc:	bf 93       	push	r27
    4cce:	ef 93       	push	r30
    4cd0:	ff 93       	push	r31
    4cd2:	e0 91 48 24 	lds	r30, 0x2448	; 0x802448 <InterruptFuncTable+0xa6>
    4cd6:	f0 91 49 24 	lds	r31, 0x2449	; 0x802449 <InterruptFuncTable+0xa7>
    4cda:	30 97       	sbiw	r30, 0x00	; 0
    4cdc:	29 f0       	breq	.+10     	; 0x4ce8 <__vector_83+0x3c>
    4cde:	80 91 3e 25 	lds	r24, 0x253E	; 0x80253e <InterruptSenderTable+0xa6>
    4ce2:	90 91 3f 25 	lds	r25, 0x253F	; 0x80253f <InterruptSenderTable+0xa7>
    4ce6:	19 95       	eicall
    4ce8:	ff 91       	pop	r31
    4cea:	ef 91       	pop	r30
    4cec:	bf 91       	pop	r27
    4cee:	af 91       	pop	r26
    4cf0:	9f 91       	pop	r25
    4cf2:	8f 91       	pop	r24
    4cf4:	7f 91       	pop	r23
    4cf6:	6f 91       	pop	r22
    4cf8:	5f 91       	pop	r21
    4cfa:	4f 91       	pop	r20
    4cfc:	3f 91       	pop	r19
    4cfe:	2f 91       	pop	r18
    4d00:	0f 90       	pop	r0
    4d02:	0b be       	out	0x3b, r0	; 59
    4d04:	0f 90       	pop	r0
    4d06:	0f be       	out	0x3f, r0	; 63
    4d08:	0f 90       	pop	r0
    4d0a:	1f 90       	pop	r1
    4d0c:	18 95       	reti

00004d0e <__vector_84>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD1_ERR_vect)      /* Error Interrupt */
    4d0e:	1f 92       	push	r1
    4d10:	0f 92       	push	r0
    4d12:	0f b6       	in	r0, 0x3f	; 63
    4d14:	0f 92       	push	r0
    4d16:	11 24       	eor	r1, r1
    4d18:	0b b6       	in	r0, 0x3b	; 59
    4d1a:	0f 92       	push	r0
    4d1c:	2f 93       	push	r18
    4d1e:	3f 93       	push	r19
    4d20:	4f 93       	push	r20
    4d22:	5f 93       	push	r21
    4d24:	6f 93       	push	r22
    4d26:	7f 93       	push	r23
    4d28:	8f 93       	push	r24
    4d2a:	9f 93       	push	r25
    4d2c:	af 93       	push	r26
    4d2e:	bf 93       	push	r27
    4d30:	ef 93       	push	r30
    4d32:	ff 93       	push	r31
    4d34:	e0 91 4a 24 	lds	r30, 0x244A	; 0x80244a <InterruptFuncTable+0xa8>
    4d38:	f0 91 4b 24 	lds	r31, 0x244B	; 0x80244b <InterruptFuncTable+0xa9>
    4d3c:	30 97       	sbiw	r30, 0x00	; 0
    4d3e:	29 f0       	breq	.+10     	; 0x4d4a <__vector_84+0x3c>
    4d40:	80 91 40 25 	lds	r24, 0x2540	; 0x802540 <InterruptSenderTable+0xa8>
    4d44:	90 91 41 25 	lds	r25, 0x2541	; 0x802541 <InterruptSenderTable+0xa9>
    4d48:	19 95       	eicall
    4d4a:	ff 91       	pop	r31
    4d4c:	ef 91       	pop	r30
    4d4e:	bf 91       	pop	r27
    4d50:	af 91       	pop	r26
    4d52:	9f 91       	pop	r25
    4d54:	8f 91       	pop	r24
    4d56:	7f 91       	pop	r23
    4d58:	6f 91       	pop	r22
    4d5a:	5f 91       	pop	r21
    4d5c:	4f 91       	pop	r20
    4d5e:	3f 91       	pop	r19
    4d60:	2f 91       	pop	r18
    4d62:	0f 90       	pop	r0
    4d64:	0b be       	out	0x3b, r0	; 59
    4d66:	0f 90       	pop	r0
    4d68:	0f be       	out	0x3f, r0	; 63
    4d6a:	0f 90       	pop	r0
    4d6c:	1f 90       	pop	r1
    4d6e:	18 95       	reti

00004d70 <__vector_85>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD1_CCA_vect)      /* Compare or Capture A Interrupt */
    4d70:	1f 92       	push	r1
    4d72:	0f 92       	push	r0
    4d74:	0f b6       	in	r0, 0x3f	; 63
    4d76:	0f 92       	push	r0
    4d78:	11 24       	eor	r1, r1
    4d7a:	0b b6       	in	r0, 0x3b	; 59
    4d7c:	0f 92       	push	r0
    4d7e:	2f 93       	push	r18
    4d80:	3f 93       	push	r19
    4d82:	4f 93       	push	r20
    4d84:	5f 93       	push	r21
    4d86:	6f 93       	push	r22
    4d88:	7f 93       	push	r23
    4d8a:	8f 93       	push	r24
    4d8c:	9f 93       	push	r25
    4d8e:	af 93       	push	r26
    4d90:	bf 93       	push	r27
    4d92:	ef 93       	push	r30
    4d94:	ff 93       	push	r31
    4d96:	e0 91 4c 24 	lds	r30, 0x244C	; 0x80244c <InterruptFuncTable+0xaa>
    4d9a:	f0 91 4d 24 	lds	r31, 0x244D	; 0x80244d <InterruptFuncTable+0xab>
    4d9e:	30 97       	sbiw	r30, 0x00	; 0
    4da0:	29 f0       	breq	.+10     	; 0x4dac <__vector_85+0x3c>
    4da2:	80 91 42 25 	lds	r24, 0x2542	; 0x802542 <InterruptSenderTable+0xaa>
    4da6:	90 91 43 25 	lds	r25, 0x2543	; 0x802543 <InterruptSenderTable+0xab>
    4daa:	19 95       	eicall
    4dac:	ff 91       	pop	r31
    4dae:	ef 91       	pop	r30
    4db0:	bf 91       	pop	r27
    4db2:	af 91       	pop	r26
    4db4:	9f 91       	pop	r25
    4db6:	8f 91       	pop	r24
    4db8:	7f 91       	pop	r23
    4dba:	6f 91       	pop	r22
    4dbc:	5f 91       	pop	r21
    4dbe:	4f 91       	pop	r20
    4dc0:	3f 91       	pop	r19
    4dc2:	2f 91       	pop	r18
    4dc4:	0f 90       	pop	r0
    4dc6:	0b be       	out	0x3b, r0	; 59
    4dc8:	0f 90       	pop	r0
    4dca:	0f be       	out	0x3f, r0	; 63
    4dcc:	0f 90       	pop	r0
    4dce:	1f 90       	pop	r1
    4dd0:	18 95       	reti

00004dd2 <__vector_86>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCD1_CCB_vect)      /* Compare or Capture B Interrupt */
    4dd2:	1f 92       	push	r1
    4dd4:	0f 92       	push	r0
    4dd6:	0f b6       	in	r0, 0x3f	; 63
    4dd8:	0f 92       	push	r0
    4dda:	11 24       	eor	r1, r1
    4ddc:	0b b6       	in	r0, 0x3b	; 59
    4dde:	0f 92       	push	r0
    4de0:	2f 93       	push	r18
    4de2:	3f 93       	push	r19
    4de4:	4f 93       	push	r20
    4de6:	5f 93       	push	r21
    4de8:	6f 93       	push	r22
    4dea:	7f 93       	push	r23
    4dec:	8f 93       	push	r24
    4dee:	9f 93       	push	r25
    4df0:	af 93       	push	r26
    4df2:	bf 93       	push	r27
    4df4:	ef 93       	push	r30
    4df6:	ff 93       	push	r31
    4df8:	e0 91 4e 24 	lds	r30, 0x244E	; 0x80244e <InterruptFuncTable+0xac>
    4dfc:	f0 91 4f 24 	lds	r31, 0x244F	; 0x80244f <InterruptFuncTable+0xad>
    4e00:	30 97       	sbiw	r30, 0x00	; 0
    4e02:	29 f0       	breq	.+10     	; 0x4e0e <__vector_86+0x3c>
    4e04:	80 91 44 25 	lds	r24, 0x2544	; 0x802544 <InterruptSenderTable+0xac>
    4e08:	90 91 45 25 	lds	r25, 0x2545	; 0x802545 <InterruptSenderTable+0xad>
    4e0c:	19 95       	eicall
    4e0e:	ff 91       	pop	r31
    4e10:	ef 91       	pop	r30
    4e12:	bf 91       	pop	r27
    4e14:	af 91       	pop	r26
    4e16:	9f 91       	pop	r25
    4e18:	8f 91       	pop	r24
    4e1a:	7f 91       	pop	r23
    4e1c:	6f 91       	pop	r22
    4e1e:	5f 91       	pop	r21
    4e20:	4f 91       	pop	r20
    4e22:	3f 91       	pop	r19
    4e24:	2f 91       	pop	r18
    4e26:	0f 90       	pop	r0
    4e28:	0b be       	out	0x3b, r0	; 59
    4e2a:	0f 90       	pop	r0
    4e2c:	0f be       	out	0x3f, r0	; 63
    4e2e:	0f 90       	pop	r0
    4e30:	1f 90       	pop	r1
    4e32:	18 95       	reti

00004e34 <__vector_87>:

/* SPID interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(SPID_INT_vect)      /* SPI Interrupt */
    4e34:	1f 92       	push	r1
    4e36:	0f 92       	push	r0
    4e38:	0f b6       	in	r0, 0x3f	; 63
    4e3a:	0f 92       	push	r0
    4e3c:	11 24       	eor	r1, r1
    4e3e:	0b b6       	in	r0, 0x3b	; 59
    4e40:	0f 92       	push	r0
    4e42:	2f 93       	push	r18
    4e44:	3f 93       	push	r19
    4e46:	4f 93       	push	r20
    4e48:	5f 93       	push	r21
    4e4a:	6f 93       	push	r22
    4e4c:	7f 93       	push	r23
    4e4e:	8f 93       	push	r24
    4e50:	9f 93       	push	r25
    4e52:	af 93       	push	r26
    4e54:	bf 93       	push	r27
    4e56:	ef 93       	push	r30
    4e58:	ff 93       	push	r31
    4e5a:	e0 91 50 24 	lds	r30, 0x2450	; 0x802450 <InterruptFuncTable+0xae>
    4e5e:	f0 91 51 24 	lds	r31, 0x2451	; 0x802451 <InterruptFuncTable+0xaf>
    4e62:	30 97       	sbiw	r30, 0x00	; 0
    4e64:	29 f0       	breq	.+10     	; 0x4e70 <__vector_87+0x3c>
    4e66:	80 91 46 25 	lds	r24, 0x2546	; 0x802546 <InterruptSenderTable+0xae>
    4e6a:	90 91 47 25 	lds	r25, 0x2547	; 0x802547 <InterruptSenderTable+0xaf>
    4e6e:	19 95       	eicall
    4e70:	ff 91       	pop	r31
    4e72:	ef 91       	pop	r30
    4e74:	bf 91       	pop	r27
    4e76:	af 91       	pop	r26
    4e78:	9f 91       	pop	r25
    4e7a:	8f 91       	pop	r24
    4e7c:	7f 91       	pop	r23
    4e7e:	6f 91       	pop	r22
    4e80:	5f 91       	pop	r21
    4e82:	4f 91       	pop	r20
    4e84:	3f 91       	pop	r19
    4e86:	2f 91       	pop	r18
    4e88:	0f 90       	pop	r0
    4e8a:	0b be       	out	0x3b, r0	; 59
    4e8c:	0f 90       	pop	r0
    4e8e:	0f be       	out	0x3f, r0	; 63
    4e90:	0f 90       	pop	r0
    4e92:	1f 90       	pop	r1
    4e94:	18 95       	reti

00004e96 <__vector_88>:

/* USARTD0 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTD0_RXC_vect)      /* Reception Complete Interrupt */
    4e96:	1f 92       	push	r1
    4e98:	0f 92       	push	r0
    4e9a:	0f b6       	in	r0, 0x3f	; 63
    4e9c:	0f 92       	push	r0
    4e9e:	11 24       	eor	r1, r1
    4ea0:	0b b6       	in	r0, 0x3b	; 59
    4ea2:	0f 92       	push	r0
    4ea4:	2f 93       	push	r18
    4ea6:	3f 93       	push	r19
    4ea8:	4f 93       	push	r20
    4eaa:	5f 93       	push	r21
    4eac:	6f 93       	push	r22
    4eae:	7f 93       	push	r23
    4eb0:	8f 93       	push	r24
    4eb2:	9f 93       	push	r25
    4eb4:	af 93       	push	r26
    4eb6:	bf 93       	push	r27
    4eb8:	ef 93       	push	r30
    4eba:	ff 93       	push	r31
    4ebc:	e0 91 52 24 	lds	r30, 0x2452	; 0x802452 <InterruptFuncTable+0xb0>
    4ec0:	f0 91 53 24 	lds	r31, 0x2453	; 0x802453 <InterruptFuncTable+0xb1>
    4ec4:	30 97       	sbiw	r30, 0x00	; 0
    4ec6:	29 f0       	breq	.+10     	; 0x4ed2 <__vector_88+0x3c>
    4ec8:	80 91 48 25 	lds	r24, 0x2548	; 0x802548 <InterruptSenderTable+0xb0>
    4ecc:	90 91 49 25 	lds	r25, 0x2549	; 0x802549 <InterruptSenderTable+0xb1>
    4ed0:	19 95       	eicall
    4ed2:	ff 91       	pop	r31
    4ed4:	ef 91       	pop	r30
    4ed6:	bf 91       	pop	r27
    4ed8:	af 91       	pop	r26
    4eda:	9f 91       	pop	r25
    4edc:	8f 91       	pop	r24
    4ede:	7f 91       	pop	r23
    4ee0:	6f 91       	pop	r22
    4ee2:	5f 91       	pop	r21
    4ee4:	4f 91       	pop	r20
    4ee6:	3f 91       	pop	r19
    4ee8:	2f 91       	pop	r18
    4eea:	0f 90       	pop	r0
    4eec:	0b be       	out	0x3b, r0	; 59
    4eee:	0f 90       	pop	r0
    4ef0:	0f be       	out	0x3f, r0	; 63
    4ef2:	0f 90       	pop	r0
    4ef4:	1f 90       	pop	r1
    4ef6:	18 95       	reti

00004ef8 <__vector_89>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTD0_DRE_vect)      /* Data Register Empty Interrupt */
    4ef8:	1f 92       	push	r1
    4efa:	0f 92       	push	r0
    4efc:	0f b6       	in	r0, 0x3f	; 63
    4efe:	0f 92       	push	r0
    4f00:	11 24       	eor	r1, r1
    4f02:	0b b6       	in	r0, 0x3b	; 59
    4f04:	0f 92       	push	r0
    4f06:	2f 93       	push	r18
    4f08:	3f 93       	push	r19
    4f0a:	4f 93       	push	r20
    4f0c:	5f 93       	push	r21
    4f0e:	6f 93       	push	r22
    4f10:	7f 93       	push	r23
    4f12:	8f 93       	push	r24
    4f14:	9f 93       	push	r25
    4f16:	af 93       	push	r26
    4f18:	bf 93       	push	r27
    4f1a:	ef 93       	push	r30
    4f1c:	ff 93       	push	r31
    4f1e:	e0 91 54 24 	lds	r30, 0x2454	; 0x802454 <InterruptFuncTable+0xb2>
    4f22:	f0 91 55 24 	lds	r31, 0x2455	; 0x802455 <InterruptFuncTable+0xb3>
    4f26:	30 97       	sbiw	r30, 0x00	; 0
    4f28:	29 f0       	breq	.+10     	; 0x4f34 <__vector_89+0x3c>
    4f2a:	80 91 4a 25 	lds	r24, 0x254A	; 0x80254a <InterruptSenderTable+0xb2>
    4f2e:	90 91 4b 25 	lds	r25, 0x254B	; 0x80254b <InterruptSenderTable+0xb3>
    4f32:	19 95       	eicall
    4f34:	ff 91       	pop	r31
    4f36:	ef 91       	pop	r30
    4f38:	bf 91       	pop	r27
    4f3a:	af 91       	pop	r26
    4f3c:	9f 91       	pop	r25
    4f3e:	8f 91       	pop	r24
    4f40:	7f 91       	pop	r23
    4f42:	6f 91       	pop	r22
    4f44:	5f 91       	pop	r21
    4f46:	4f 91       	pop	r20
    4f48:	3f 91       	pop	r19
    4f4a:	2f 91       	pop	r18
    4f4c:	0f 90       	pop	r0
    4f4e:	0b be       	out	0x3b, r0	; 59
    4f50:	0f 90       	pop	r0
    4f52:	0f be       	out	0x3f, r0	; 63
    4f54:	0f 90       	pop	r0
    4f56:	1f 90       	pop	r1
    4f58:	18 95       	reti

00004f5a <__vector_90>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTD0_TXC_vect)      /* Transmission Complete Interrupt */
    4f5a:	1f 92       	push	r1
    4f5c:	0f 92       	push	r0
    4f5e:	0f b6       	in	r0, 0x3f	; 63
    4f60:	0f 92       	push	r0
    4f62:	11 24       	eor	r1, r1
    4f64:	0b b6       	in	r0, 0x3b	; 59
    4f66:	0f 92       	push	r0
    4f68:	2f 93       	push	r18
    4f6a:	3f 93       	push	r19
    4f6c:	4f 93       	push	r20
    4f6e:	5f 93       	push	r21
    4f70:	6f 93       	push	r22
    4f72:	7f 93       	push	r23
    4f74:	8f 93       	push	r24
    4f76:	9f 93       	push	r25
    4f78:	af 93       	push	r26
    4f7a:	bf 93       	push	r27
    4f7c:	ef 93       	push	r30
    4f7e:	ff 93       	push	r31
    4f80:	e0 91 56 24 	lds	r30, 0x2456	; 0x802456 <InterruptFuncTable+0xb4>
    4f84:	f0 91 57 24 	lds	r31, 0x2457	; 0x802457 <InterruptFuncTable+0xb5>
    4f88:	30 97       	sbiw	r30, 0x00	; 0
    4f8a:	29 f0       	breq	.+10     	; 0x4f96 <__vector_90+0x3c>
    4f8c:	80 91 4c 25 	lds	r24, 0x254C	; 0x80254c <InterruptSenderTable+0xb4>
    4f90:	90 91 4d 25 	lds	r25, 0x254D	; 0x80254d <InterruptSenderTable+0xb5>
    4f94:	19 95       	eicall
    4f96:	ff 91       	pop	r31
    4f98:	ef 91       	pop	r30
    4f9a:	bf 91       	pop	r27
    4f9c:	af 91       	pop	r26
    4f9e:	9f 91       	pop	r25
    4fa0:	8f 91       	pop	r24
    4fa2:	7f 91       	pop	r23
    4fa4:	6f 91       	pop	r22
    4fa6:	5f 91       	pop	r21
    4fa8:	4f 91       	pop	r20
    4faa:	3f 91       	pop	r19
    4fac:	2f 91       	pop	r18
    4fae:	0f 90       	pop	r0
    4fb0:	0b be       	out	0x3b, r0	; 59
    4fb2:	0f 90       	pop	r0
    4fb4:	0f be       	out	0x3f, r0	; 63
    4fb6:	0f 90       	pop	r0
    4fb8:	1f 90       	pop	r1
    4fba:	18 95       	reti

00004fbc <__vector_91>:

/* USARTD1 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTD1_RXC_vect)      /* Reception Complete Interrupt */
    4fbc:	1f 92       	push	r1
    4fbe:	0f 92       	push	r0
    4fc0:	0f b6       	in	r0, 0x3f	; 63
    4fc2:	0f 92       	push	r0
    4fc4:	11 24       	eor	r1, r1
    4fc6:	0b b6       	in	r0, 0x3b	; 59
    4fc8:	0f 92       	push	r0
    4fca:	2f 93       	push	r18
    4fcc:	3f 93       	push	r19
    4fce:	4f 93       	push	r20
    4fd0:	5f 93       	push	r21
    4fd2:	6f 93       	push	r22
    4fd4:	7f 93       	push	r23
    4fd6:	8f 93       	push	r24
    4fd8:	9f 93       	push	r25
    4fda:	af 93       	push	r26
    4fdc:	bf 93       	push	r27
    4fde:	ef 93       	push	r30
    4fe0:	ff 93       	push	r31
    4fe2:	e0 91 58 24 	lds	r30, 0x2458	; 0x802458 <InterruptFuncTable+0xb6>
    4fe6:	f0 91 59 24 	lds	r31, 0x2459	; 0x802459 <InterruptFuncTable+0xb7>
    4fea:	30 97       	sbiw	r30, 0x00	; 0
    4fec:	29 f0       	breq	.+10     	; 0x4ff8 <__vector_91+0x3c>
    4fee:	80 91 4e 25 	lds	r24, 0x254E	; 0x80254e <InterruptSenderTable+0xb6>
    4ff2:	90 91 4f 25 	lds	r25, 0x254F	; 0x80254f <InterruptSenderTable+0xb7>
    4ff6:	19 95       	eicall
    4ff8:	ff 91       	pop	r31
    4ffa:	ef 91       	pop	r30
    4ffc:	bf 91       	pop	r27
    4ffe:	af 91       	pop	r26
    5000:	9f 91       	pop	r25
    5002:	8f 91       	pop	r24
    5004:	7f 91       	pop	r23
    5006:	6f 91       	pop	r22
    5008:	5f 91       	pop	r21
    500a:	4f 91       	pop	r20
    500c:	3f 91       	pop	r19
    500e:	2f 91       	pop	r18
    5010:	0f 90       	pop	r0
    5012:	0b be       	out	0x3b, r0	; 59
    5014:	0f 90       	pop	r0
    5016:	0f be       	out	0x3f, r0	; 63
    5018:	0f 90       	pop	r0
    501a:	1f 90       	pop	r1
    501c:	18 95       	reti

0000501e <__vector_92>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTD1_DRE_vect)      /* Data Register Empty Interrupt */
    501e:	1f 92       	push	r1
    5020:	0f 92       	push	r0
    5022:	0f b6       	in	r0, 0x3f	; 63
    5024:	0f 92       	push	r0
    5026:	11 24       	eor	r1, r1
    5028:	0b b6       	in	r0, 0x3b	; 59
    502a:	0f 92       	push	r0
    502c:	2f 93       	push	r18
    502e:	3f 93       	push	r19
    5030:	4f 93       	push	r20
    5032:	5f 93       	push	r21
    5034:	6f 93       	push	r22
    5036:	7f 93       	push	r23
    5038:	8f 93       	push	r24
    503a:	9f 93       	push	r25
    503c:	af 93       	push	r26
    503e:	bf 93       	push	r27
    5040:	ef 93       	push	r30
    5042:	ff 93       	push	r31
    5044:	e0 91 5a 24 	lds	r30, 0x245A	; 0x80245a <InterruptFuncTable+0xb8>
    5048:	f0 91 5b 24 	lds	r31, 0x245B	; 0x80245b <InterruptFuncTable+0xb9>
    504c:	30 97       	sbiw	r30, 0x00	; 0
    504e:	29 f0       	breq	.+10     	; 0x505a <__vector_92+0x3c>
    5050:	80 91 50 25 	lds	r24, 0x2550	; 0x802550 <InterruptSenderTable+0xb8>
    5054:	90 91 51 25 	lds	r25, 0x2551	; 0x802551 <InterruptSenderTable+0xb9>
    5058:	19 95       	eicall
    505a:	ff 91       	pop	r31
    505c:	ef 91       	pop	r30
    505e:	bf 91       	pop	r27
    5060:	af 91       	pop	r26
    5062:	9f 91       	pop	r25
    5064:	8f 91       	pop	r24
    5066:	7f 91       	pop	r23
    5068:	6f 91       	pop	r22
    506a:	5f 91       	pop	r21
    506c:	4f 91       	pop	r20
    506e:	3f 91       	pop	r19
    5070:	2f 91       	pop	r18
    5072:	0f 90       	pop	r0
    5074:	0b be       	out	0x3b, r0	; 59
    5076:	0f 90       	pop	r0
    5078:	0f be       	out	0x3f, r0	; 63
    507a:	0f 90       	pop	r0
    507c:	1f 90       	pop	r1
    507e:	18 95       	reti

00005080 <__vector_93>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTD1_TXC_vect)      /* Transmission Complete Interrupt */
    5080:	1f 92       	push	r1
    5082:	0f 92       	push	r0
    5084:	0f b6       	in	r0, 0x3f	; 63
    5086:	0f 92       	push	r0
    5088:	11 24       	eor	r1, r1
    508a:	0b b6       	in	r0, 0x3b	; 59
    508c:	0f 92       	push	r0
    508e:	2f 93       	push	r18
    5090:	3f 93       	push	r19
    5092:	4f 93       	push	r20
    5094:	5f 93       	push	r21
    5096:	6f 93       	push	r22
    5098:	7f 93       	push	r23
    509a:	8f 93       	push	r24
    509c:	9f 93       	push	r25
    509e:	af 93       	push	r26
    50a0:	bf 93       	push	r27
    50a2:	ef 93       	push	r30
    50a4:	ff 93       	push	r31
    50a6:	e0 91 5c 24 	lds	r30, 0x245C	; 0x80245c <InterruptFuncTable+0xba>
    50aa:	f0 91 5d 24 	lds	r31, 0x245D	; 0x80245d <InterruptFuncTable+0xbb>
    50ae:	30 97       	sbiw	r30, 0x00	; 0
    50b0:	29 f0       	breq	.+10     	; 0x50bc <__vector_93+0x3c>
    50b2:	80 91 52 25 	lds	r24, 0x2552	; 0x802552 <InterruptSenderTable+0xba>
    50b6:	90 91 53 25 	lds	r25, 0x2553	; 0x802553 <InterruptSenderTable+0xbb>
    50ba:	19 95       	eicall
    50bc:	ff 91       	pop	r31
    50be:	ef 91       	pop	r30
    50c0:	bf 91       	pop	r27
    50c2:	af 91       	pop	r26
    50c4:	9f 91       	pop	r25
    50c6:	8f 91       	pop	r24
    50c8:	7f 91       	pop	r23
    50ca:	6f 91       	pop	r22
    50cc:	5f 91       	pop	r21
    50ce:	4f 91       	pop	r20
    50d0:	3f 91       	pop	r19
    50d2:	2f 91       	pop	r18
    50d4:	0f 90       	pop	r0
    50d6:	0b be       	out	0x3b, r0	; 59
    50d8:	0f 90       	pop	r0
    50da:	0f be       	out	0x3f, r0	; 63
    50dc:	0f 90       	pop	r0
    50de:	1f 90       	pop	r1
    50e0:	18 95       	reti

000050e2 <__vector_104>:

/* PORTF interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTF_INT0_vect)      /* External Interrupt 0 */
    50e2:	1f 92       	push	r1
    50e4:	0f 92       	push	r0
    50e6:	0f b6       	in	r0, 0x3f	; 63
    50e8:	0f 92       	push	r0
    50ea:	11 24       	eor	r1, r1
    50ec:	0b b6       	in	r0, 0x3b	; 59
    50ee:	0f 92       	push	r0
    50f0:	2f 93       	push	r18
    50f2:	3f 93       	push	r19
    50f4:	4f 93       	push	r20
    50f6:	5f 93       	push	r21
    50f8:	6f 93       	push	r22
    50fa:	7f 93       	push	r23
    50fc:	8f 93       	push	r24
    50fe:	9f 93       	push	r25
    5100:	af 93       	push	r26
    5102:	bf 93       	push	r27
    5104:	ef 93       	push	r30
    5106:	ff 93       	push	r31
    5108:	e0 91 72 24 	lds	r30, 0x2472	; 0x802472 <InterruptFuncTable+0xd0>
    510c:	f0 91 73 24 	lds	r31, 0x2473	; 0x802473 <InterruptFuncTable+0xd1>
    5110:	30 97       	sbiw	r30, 0x00	; 0
    5112:	29 f0       	breq	.+10     	; 0x511e <__vector_104+0x3c>
    5114:	80 91 68 25 	lds	r24, 0x2568	; 0x802568 <InterruptSenderTable+0xd0>
    5118:	90 91 69 25 	lds	r25, 0x2569	; 0x802569 <InterruptSenderTable+0xd1>
    511c:	19 95       	eicall
    511e:	ff 91       	pop	r31
    5120:	ef 91       	pop	r30
    5122:	bf 91       	pop	r27
    5124:	af 91       	pop	r26
    5126:	9f 91       	pop	r25
    5128:	8f 91       	pop	r24
    512a:	7f 91       	pop	r23
    512c:	6f 91       	pop	r22
    512e:	5f 91       	pop	r21
    5130:	4f 91       	pop	r20
    5132:	3f 91       	pop	r19
    5134:	2f 91       	pop	r18
    5136:	0f 90       	pop	r0
    5138:	0b be       	out	0x3b, r0	; 59
    513a:	0f 90       	pop	r0
    513c:	0f be       	out	0x3f, r0	; 63
    513e:	0f 90       	pop	r0
    5140:	1f 90       	pop	r1
    5142:	18 95       	reti

00005144 <__vector_105>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(PORTF_INT1_vect)      /* External Interrupt 1 */
    5144:	1f 92       	push	r1
    5146:	0f 92       	push	r0
    5148:	0f b6       	in	r0, 0x3f	; 63
    514a:	0f 92       	push	r0
    514c:	11 24       	eor	r1, r1
    514e:	0b b6       	in	r0, 0x3b	; 59
    5150:	0f 92       	push	r0
    5152:	2f 93       	push	r18
    5154:	3f 93       	push	r19
    5156:	4f 93       	push	r20
    5158:	5f 93       	push	r21
    515a:	6f 93       	push	r22
    515c:	7f 93       	push	r23
    515e:	8f 93       	push	r24
    5160:	9f 93       	push	r25
    5162:	af 93       	push	r26
    5164:	bf 93       	push	r27
    5166:	ef 93       	push	r30
    5168:	ff 93       	push	r31
    516a:	e0 91 74 24 	lds	r30, 0x2474	; 0x802474 <InterruptFuncTable+0xd2>
    516e:	f0 91 75 24 	lds	r31, 0x2475	; 0x802475 <InterruptFuncTable+0xd3>
    5172:	30 97       	sbiw	r30, 0x00	; 0
    5174:	29 f0       	breq	.+10     	; 0x5180 <__vector_105+0x3c>
    5176:	80 91 6a 25 	lds	r24, 0x256A	; 0x80256a <InterruptSenderTable+0xd2>
    517a:	90 91 6b 25 	lds	r25, 0x256B	; 0x80256b <InterruptSenderTable+0xd3>
    517e:	19 95       	eicall
    5180:	ff 91       	pop	r31
    5182:	ef 91       	pop	r30
    5184:	bf 91       	pop	r27
    5186:	af 91       	pop	r26
    5188:	9f 91       	pop	r25
    518a:	8f 91       	pop	r24
    518c:	7f 91       	pop	r23
    518e:	6f 91       	pop	r22
    5190:	5f 91       	pop	r21
    5192:	4f 91       	pop	r20
    5194:	3f 91       	pop	r19
    5196:	2f 91       	pop	r18
    5198:	0f 90       	pop	r0
    519a:	0b be       	out	0x3b, r0	; 59
    519c:	0f 90       	pop	r0
    519e:	0f be       	out	0x3f, r0	; 63
    51a0:	0f 90       	pop	r0
    51a2:	1f 90       	pop	r1
    51a4:	18 95       	reti

000051a6 <__vector_108>:

/* TCF0 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCF0_OVF_vect)      /* Overflow Interrupt */
    51a6:	1f 92       	push	r1
    51a8:	0f 92       	push	r0
    51aa:	0f b6       	in	r0, 0x3f	; 63
    51ac:	0f 92       	push	r0
    51ae:	11 24       	eor	r1, r1
    51b0:	0b b6       	in	r0, 0x3b	; 59
    51b2:	0f 92       	push	r0
    51b4:	2f 93       	push	r18
    51b6:	3f 93       	push	r19
    51b8:	4f 93       	push	r20
    51ba:	5f 93       	push	r21
    51bc:	6f 93       	push	r22
    51be:	7f 93       	push	r23
    51c0:	8f 93       	push	r24
    51c2:	9f 93       	push	r25
    51c4:	af 93       	push	r26
    51c6:	bf 93       	push	r27
    51c8:	ef 93       	push	r30
    51ca:	ff 93       	push	r31
    51cc:	e0 91 7a 24 	lds	r30, 0x247A	; 0x80247a <InterruptFuncTable+0xd8>
    51d0:	f0 91 7b 24 	lds	r31, 0x247B	; 0x80247b <InterruptFuncTable+0xd9>
    51d4:	30 97       	sbiw	r30, 0x00	; 0
    51d6:	29 f0       	breq	.+10     	; 0x51e2 <__vector_108+0x3c>
    51d8:	80 91 70 25 	lds	r24, 0x2570	; 0x802570 <InterruptSenderTable+0xd8>
    51dc:	90 91 71 25 	lds	r25, 0x2571	; 0x802571 <InterruptSenderTable+0xd9>
    51e0:	19 95       	eicall
    51e2:	ff 91       	pop	r31
    51e4:	ef 91       	pop	r30
    51e6:	bf 91       	pop	r27
    51e8:	af 91       	pop	r26
    51ea:	9f 91       	pop	r25
    51ec:	8f 91       	pop	r24
    51ee:	7f 91       	pop	r23
    51f0:	6f 91       	pop	r22
    51f2:	5f 91       	pop	r21
    51f4:	4f 91       	pop	r20
    51f6:	3f 91       	pop	r19
    51f8:	2f 91       	pop	r18
    51fa:	0f 90       	pop	r0
    51fc:	0b be       	out	0x3b, r0	; 59
    51fe:	0f 90       	pop	r0
    5200:	0f be       	out	0x3f, r0	; 63
    5202:	0f 90       	pop	r0
    5204:	1f 90       	pop	r1
    5206:	18 95       	reti

00005208 <__vector_109>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCF0_ERR_vect)      /* Error Interrupt */
    5208:	1f 92       	push	r1
    520a:	0f 92       	push	r0
    520c:	0f b6       	in	r0, 0x3f	; 63
    520e:	0f 92       	push	r0
    5210:	11 24       	eor	r1, r1
    5212:	0b b6       	in	r0, 0x3b	; 59
    5214:	0f 92       	push	r0
    5216:	2f 93       	push	r18
    5218:	3f 93       	push	r19
    521a:	4f 93       	push	r20
    521c:	5f 93       	push	r21
    521e:	6f 93       	push	r22
    5220:	7f 93       	push	r23
    5222:	8f 93       	push	r24
    5224:	9f 93       	push	r25
    5226:	af 93       	push	r26
    5228:	bf 93       	push	r27
    522a:	ef 93       	push	r30
    522c:	ff 93       	push	r31
    522e:	e0 91 7c 24 	lds	r30, 0x247C	; 0x80247c <InterruptFuncTable+0xda>
    5232:	f0 91 7d 24 	lds	r31, 0x247D	; 0x80247d <InterruptFuncTable+0xdb>
    5236:	30 97       	sbiw	r30, 0x00	; 0
    5238:	29 f0       	breq	.+10     	; 0x5244 <__vector_109+0x3c>
    523a:	80 91 72 25 	lds	r24, 0x2572	; 0x802572 <InterruptSenderTable+0xda>
    523e:	90 91 73 25 	lds	r25, 0x2573	; 0x802573 <InterruptSenderTable+0xdb>
    5242:	19 95       	eicall
    5244:	ff 91       	pop	r31
    5246:	ef 91       	pop	r30
    5248:	bf 91       	pop	r27
    524a:	af 91       	pop	r26
    524c:	9f 91       	pop	r25
    524e:	8f 91       	pop	r24
    5250:	7f 91       	pop	r23
    5252:	6f 91       	pop	r22
    5254:	5f 91       	pop	r21
    5256:	4f 91       	pop	r20
    5258:	3f 91       	pop	r19
    525a:	2f 91       	pop	r18
    525c:	0f 90       	pop	r0
    525e:	0b be       	out	0x3b, r0	; 59
    5260:	0f 90       	pop	r0
    5262:	0f be       	out	0x3f, r0	; 63
    5264:	0f 90       	pop	r0
    5266:	1f 90       	pop	r1
    5268:	18 95       	reti

0000526a <__vector_110>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCF0_CCA_vect)      /* Compare or Capture A Interrupt */
    526a:	1f 92       	push	r1
    526c:	0f 92       	push	r0
    526e:	0f b6       	in	r0, 0x3f	; 63
    5270:	0f 92       	push	r0
    5272:	11 24       	eor	r1, r1
    5274:	0b b6       	in	r0, 0x3b	; 59
    5276:	0f 92       	push	r0
    5278:	2f 93       	push	r18
    527a:	3f 93       	push	r19
    527c:	4f 93       	push	r20
    527e:	5f 93       	push	r21
    5280:	6f 93       	push	r22
    5282:	7f 93       	push	r23
    5284:	8f 93       	push	r24
    5286:	9f 93       	push	r25
    5288:	af 93       	push	r26
    528a:	bf 93       	push	r27
    528c:	ef 93       	push	r30
    528e:	ff 93       	push	r31
    5290:	e0 91 7e 24 	lds	r30, 0x247E	; 0x80247e <InterruptFuncTable+0xdc>
    5294:	f0 91 7f 24 	lds	r31, 0x247F	; 0x80247f <InterruptFuncTable+0xdd>
    5298:	30 97       	sbiw	r30, 0x00	; 0
    529a:	29 f0       	breq	.+10     	; 0x52a6 <__vector_110+0x3c>
    529c:	80 91 74 25 	lds	r24, 0x2574	; 0x802574 <InterruptSenderTable+0xdc>
    52a0:	90 91 75 25 	lds	r25, 0x2575	; 0x802575 <InterruptSenderTable+0xdd>
    52a4:	19 95       	eicall
    52a6:	ff 91       	pop	r31
    52a8:	ef 91       	pop	r30
    52aa:	bf 91       	pop	r27
    52ac:	af 91       	pop	r26
    52ae:	9f 91       	pop	r25
    52b0:	8f 91       	pop	r24
    52b2:	7f 91       	pop	r23
    52b4:	6f 91       	pop	r22
    52b6:	5f 91       	pop	r21
    52b8:	4f 91       	pop	r20
    52ba:	3f 91       	pop	r19
    52bc:	2f 91       	pop	r18
    52be:	0f 90       	pop	r0
    52c0:	0b be       	out	0x3b, r0	; 59
    52c2:	0f 90       	pop	r0
    52c4:	0f be       	out	0x3f, r0	; 63
    52c6:	0f 90       	pop	r0
    52c8:	1f 90       	pop	r1
    52ca:	18 95       	reti

000052cc <__vector_111>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCF0_CCB_vect)      /* Compare or Capture B Interrupt */
    52cc:	1f 92       	push	r1
    52ce:	0f 92       	push	r0
    52d0:	0f b6       	in	r0, 0x3f	; 63
    52d2:	0f 92       	push	r0
    52d4:	11 24       	eor	r1, r1
    52d6:	0b b6       	in	r0, 0x3b	; 59
    52d8:	0f 92       	push	r0
    52da:	2f 93       	push	r18
    52dc:	3f 93       	push	r19
    52de:	4f 93       	push	r20
    52e0:	5f 93       	push	r21
    52e2:	6f 93       	push	r22
    52e4:	7f 93       	push	r23
    52e6:	8f 93       	push	r24
    52e8:	9f 93       	push	r25
    52ea:	af 93       	push	r26
    52ec:	bf 93       	push	r27
    52ee:	ef 93       	push	r30
    52f0:	ff 93       	push	r31
    52f2:	e0 91 80 24 	lds	r30, 0x2480	; 0x802480 <InterruptFuncTable+0xde>
    52f6:	f0 91 81 24 	lds	r31, 0x2481	; 0x802481 <InterruptFuncTable+0xdf>
    52fa:	30 97       	sbiw	r30, 0x00	; 0
    52fc:	29 f0       	breq	.+10     	; 0x5308 <__vector_111+0x3c>
    52fe:	80 91 76 25 	lds	r24, 0x2576	; 0x802576 <InterruptSenderTable+0xde>
    5302:	90 91 77 25 	lds	r25, 0x2577	; 0x802577 <InterruptSenderTable+0xdf>
    5306:	19 95       	eicall
    5308:	ff 91       	pop	r31
    530a:	ef 91       	pop	r30
    530c:	bf 91       	pop	r27
    530e:	af 91       	pop	r26
    5310:	9f 91       	pop	r25
    5312:	8f 91       	pop	r24
    5314:	7f 91       	pop	r23
    5316:	6f 91       	pop	r22
    5318:	5f 91       	pop	r21
    531a:	4f 91       	pop	r20
    531c:	3f 91       	pop	r19
    531e:	2f 91       	pop	r18
    5320:	0f 90       	pop	r0
    5322:	0b be       	out	0x3b, r0	; 59
    5324:	0f 90       	pop	r0
    5326:	0f be       	out	0x3f, r0	; 63
    5328:	0f 90       	pop	r0
    532a:	1f 90       	pop	r1
    532c:	18 95       	reti

0000532e <__vector_112>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCF0_CCC_vect)      /* Compare or Capture C Interrupt */
    532e:	1f 92       	push	r1
    5330:	0f 92       	push	r0
    5332:	0f b6       	in	r0, 0x3f	; 63
    5334:	0f 92       	push	r0
    5336:	11 24       	eor	r1, r1
    5338:	0b b6       	in	r0, 0x3b	; 59
    533a:	0f 92       	push	r0
    533c:	2f 93       	push	r18
    533e:	3f 93       	push	r19
    5340:	4f 93       	push	r20
    5342:	5f 93       	push	r21
    5344:	6f 93       	push	r22
    5346:	7f 93       	push	r23
    5348:	8f 93       	push	r24
    534a:	9f 93       	push	r25
    534c:	af 93       	push	r26
    534e:	bf 93       	push	r27
    5350:	ef 93       	push	r30
    5352:	ff 93       	push	r31
    5354:	e0 91 82 24 	lds	r30, 0x2482	; 0x802482 <InterruptFuncTable+0xe0>
    5358:	f0 91 83 24 	lds	r31, 0x2483	; 0x802483 <InterruptFuncTable+0xe1>
    535c:	30 97       	sbiw	r30, 0x00	; 0
    535e:	29 f0       	breq	.+10     	; 0x536a <__vector_112+0x3c>
    5360:	80 91 78 25 	lds	r24, 0x2578	; 0x802578 <InterruptSenderTable+0xe0>
    5364:	90 91 79 25 	lds	r25, 0x2579	; 0x802579 <InterruptSenderTable+0xe1>
    5368:	19 95       	eicall
    536a:	ff 91       	pop	r31
    536c:	ef 91       	pop	r30
    536e:	bf 91       	pop	r27
    5370:	af 91       	pop	r26
    5372:	9f 91       	pop	r25
    5374:	8f 91       	pop	r24
    5376:	7f 91       	pop	r23
    5378:	6f 91       	pop	r22
    537a:	5f 91       	pop	r21
    537c:	4f 91       	pop	r20
    537e:	3f 91       	pop	r19
    5380:	2f 91       	pop	r18
    5382:	0f 90       	pop	r0
    5384:	0b be       	out	0x3b, r0	; 59
    5386:	0f 90       	pop	r0
    5388:	0f be       	out	0x3f, r0	; 63
    538a:	0f 90       	pop	r0
    538c:	1f 90       	pop	r1
    538e:	18 95       	reti

00005390 <__vector_113>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(TCF0_CCD_vect)      /* Compare or Capture D Interrupt */
    5390:	1f 92       	push	r1
    5392:	0f 92       	push	r0
    5394:	0f b6       	in	r0, 0x3f	; 63
    5396:	0f 92       	push	r0
    5398:	11 24       	eor	r1, r1
    539a:	0b b6       	in	r0, 0x3b	; 59
    539c:	0f 92       	push	r0
    539e:	2f 93       	push	r18
    53a0:	3f 93       	push	r19
    53a2:	4f 93       	push	r20
    53a4:	5f 93       	push	r21
    53a6:	6f 93       	push	r22
    53a8:	7f 93       	push	r23
    53aa:	8f 93       	push	r24
    53ac:	9f 93       	push	r25
    53ae:	af 93       	push	r26
    53b0:	bf 93       	push	r27
    53b2:	ef 93       	push	r30
    53b4:	ff 93       	push	r31
    53b6:	e0 91 84 24 	lds	r30, 0x2484	; 0x802484 <InterruptFuncTable+0xe2>
    53ba:	f0 91 85 24 	lds	r31, 0x2485	; 0x802485 <InterruptFuncTable+0xe3>
    53be:	30 97       	sbiw	r30, 0x00	; 0
    53c0:	29 f0       	breq	.+10     	; 0x53cc <__vector_113+0x3c>
    53c2:	80 91 7a 25 	lds	r24, 0x257A	; 0x80257a <InterruptSenderTable+0xe2>
    53c6:	90 91 7b 25 	lds	r25, 0x257B	; 0x80257b <InterruptSenderTable+0xe3>
    53ca:	19 95       	eicall
    53cc:	ff 91       	pop	r31
    53ce:	ef 91       	pop	r30
    53d0:	bf 91       	pop	r27
    53d2:	af 91       	pop	r26
    53d4:	9f 91       	pop	r25
    53d6:	8f 91       	pop	r24
    53d8:	7f 91       	pop	r23
    53da:	6f 91       	pop	r22
    53dc:	5f 91       	pop	r21
    53de:	4f 91       	pop	r20
    53e0:	3f 91       	pop	r19
    53e2:	2f 91       	pop	r18
    53e4:	0f 90       	pop	r0
    53e6:	0b be       	out	0x3b, r0	; 59
    53e8:	0f 90       	pop	r0
    53ea:	0f be       	out	0x3f, r0	; 63
    53ec:	0f 90       	pop	r0
    53ee:	1f 90       	pop	r1
    53f0:	18 95       	reti

000053f2 <__vector_119>:

/* USARTF0 interrupt vectors */
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTF0_RXC_vect)      /* Reception Complete Interrupt */
    53f2:	1f 92       	push	r1
    53f4:	0f 92       	push	r0
    53f6:	0f b6       	in	r0, 0x3f	; 63
    53f8:	0f 92       	push	r0
    53fa:	11 24       	eor	r1, r1
    53fc:	0b b6       	in	r0, 0x3b	; 59
    53fe:	0f 92       	push	r0
    5400:	2f 93       	push	r18
    5402:	3f 93       	push	r19
    5404:	4f 93       	push	r20
    5406:	5f 93       	push	r21
    5408:	6f 93       	push	r22
    540a:	7f 93       	push	r23
    540c:	8f 93       	push	r24
    540e:	9f 93       	push	r25
    5410:	af 93       	push	r26
    5412:	bf 93       	push	r27
    5414:	ef 93       	push	r30
    5416:	ff 93       	push	r31
    5418:	e0 91 90 24 	lds	r30, 0x2490	; 0x802490 <InterruptFuncTable+0xee>
    541c:	f0 91 91 24 	lds	r31, 0x2491	; 0x802491 <InterruptFuncTable+0xef>
    5420:	30 97       	sbiw	r30, 0x00	; 0
    5422:	29 f0       	breq	.+10     	; 0x542e <__vector_119+0x3c>
    5424:	80 91 86 25 	lds	r24, 0x2586	; 0x802586 <InterruptSenderTable+0xee>
    5428:	90 91 87 25 	lds	r25, 0x2587	; 0x802587 <InterruptSenderTable+0xef>
    542c:	19 95       	eicall
    542e:	ff 91       	pop	r31
    5430:	ef 91       	pop	r30
    5432:	bf 91       	pop	r27
    5434:	af 91       	pop	r26
    5436:	9f 91       	pop	r25
    5438:	8f 91       	pop	r24
    543a:	7f 91       	pop	r23
    543c:	6f 91       	pop	r22
    543e:	5f 91       	pop	r21
    5440:	4f 91       	pop	r20
    5442:	3f 91       	pop	r19
    5444:	2f 91       	pop	r18
    5446:	0f 90       	pop	r0
    5448:	0b be       	out	0x3b, r0	; 59
    544a:	0f 90       	pop	r0
    544c:	0f be       	out	0x3f, r0	; 63
    544e:	0f 90       	pop	r0
    5450:	1f 90       	pop	r1
    5452:	18 95       	reti

00005454 <__vector_120>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTF0_DRE_vect)      /* Data Register Empty Interrupt */
    5454:	1f 92       	push	r1
    5456:	0f 92       	push	r0
    5458:	0f b6       	in	r0, 0x3f	; 63
    545a:	0f 92       	push	r0
    545c:	11 24       	eor	r1, r1
    545e:	0b b6       	in	r0, 0x3b	; 59
    5460:	0f 92       	push	r0
    5462:	2f 93       	push	r18
    5464:	3f 93       	push	r19
    5466:	4f 93       	push	r20
    5468:	5f 93       	push	r21
    546a:	6f 93       	push	r22
    546c:	7f 93       	push	r23
    546e:	8f 93       	push	r24
    5470:	9f 93       	push	r25
    5472:	af 93       	push	r26
    5474:	bf 93       	push	r27
    5476:	ef 93       	push	r30
    5478:	ff 93       	push	r31
    547a:	e0 91 92 24 	lds	r30, 0x2492	; 0x802492 <InterruptFuncTable+0xf0>
    547e:	f0 91 93 24 	lds	r31, 0x2493	; 0x802493 <InterruptFuncTable+0xf1>
    5482:	30 97       	sbiw	r30, 0x00	; 0
    5484:	29 f0       	breq	.+10     	; 0x5490 <__vector_120+0x3c>
    5486:	80 91 88 25 	lds	r24, 0x2588	; 0x802588 <InterruptSenderTable+0xf0>
    548a:	90 91 89 25 	lds	r25, 0x2589	; 0x802589 <InterruptSenderTable+0xf1>
    548e:	19 95       	eicall
    5490:	ff 91       	pop	r31
    5492:	ef 91       	pop	r30
    5494:	bf 91       	pop	r27
    5496:	af 91       	pop	r26
    5498:	9f 91       	pop	r25
    549a:	8f 91       	pop	r24
    549c:	7f 91       	pop	r23
    549e:	6f 91       	pop	r22
    54a0:	5f 91       	pop	r21
    54a2:	4f 91       	pop	r20
    54a4:	3f 91       	pop	r19
    54a6:	2f 91       	pop	r18
    54a8:	0f 90       	pop	r0
    54aa:	0b be       	out	0x3b, r0	; 59
    54ac:	0f 90       	pop	r0
    54ae:	0f be       	out	0x3f, r0	; 63
    54b0:	0f 90       	pop	r0
    54b2:	1f 90       	pop	r1
    54b4:	18 95       	reti

000054b6 <__vector_121>:
SYS_INTERRUPT_VECTOR_HANDLER_MACRO(USARTF0_TXC_vect)      /* Transmission Complete Interrupt */
    54b6:	1f 92       	push	r1
    54b8:	0f 92       	push	r0
    54ba:	0f b6       	in	r0, 0x3f	; 63
    54bc:	0f 92       	push	r0
    54be:	11 24       	eor	r1, r1
    54c0:	0b b6       	in	r0, 0x3b	; 59
    54c2:	0f 92       	push	r0
    54c4:	2f 93       	push	r18
    54c6:	3f 93       	push	r19
    54c8:	4f 93       	push	r20
    54ca:	5f 93       	push	r21
    54cc:	6f 93       	push	r22
    54ce:	7f 93       	push	r23
    54d0:	8f 93       	push	r24
    54d2:	9f 93       	push	r25
    54d4:	af 93       	push	r26
    54d6:	bf 93       	push	r27
    54d8:	ef 93       	push	r30
    54da:	ff 93       	push	r31
    54dc:	e0 91 94 24 	lds	r30, 0x2494	; 0x802494 <InterruptFuncTable+0xf2>
    54e0:	f0 91 95 24 	lds	r31, 0x2495	; 0x802495 <InterruptFuncTable+0xf3>
    54e4:	30 97       	sbiw	r30, 0x00	; 0
    54e6:	29 f0       	breq	.+10     	; 0x54f2 <__vector_121+0x3c>
    54e8:	80 91 8a 25 	lds	r24, 0x258A	; 0x80258a <InterruptSenderTable+0xf2>
    54ec:	90 91 8b 25 	lds	r25, 0x258B	; 0x80258b <InterruptSenderTable+0xf3>
    54f0:	19 95       	eicall
    54f2:	ff 91       	pop	r31
    54f4:	ef 91       	pop	r30
    54f6:	bf 91       	pop	r27
    54f8:	af 91       	pop	r26
    54fa:	9f 91       	pop	r25
    54fc:	8f 91       	pop	r24
    54fe:	7f 91       	pop	r23
    5500:	6f 91       	pop	r22
    5502:	5f 91       	pop	r21
    5504:	4f 91       	pop	r20
    5506:	3f 91       	pop	r19
    5508:	2f 91       	pop	r18
    550a:	0f 90       	pop	r0
    550c:	0b be       	out	0x3b, r0	; 59
    550e:	0f 90       	pop	r0
    5510:	0f be       	out	0x3f, r0	; 63
    5512:	0f 90       	pop	r0
    5514:	1f 90       	pop	r1
    5516:	18 95       	reti

00005518 <__cxa_pure_virtual>:

extern "C" void __cxa_pure_virtual()
{	
	while(1)
	{
		laserBoard.BeepClassError();
    5518:	0e 94 86 33 	call	0x670c	; 0x670c <_ZN11CLaserBoard14BeepClassErrorEv>
CLaserControlApp App;
CDS18B20 D18B20;

int temperature = 0;

extern "C" void __cxa_pure_virtual()
    551c:	fd cf       	rjmp	.-6      	; 0x5518 <__cxa_pure_virtual>

0000551e <_GLOBAL__sub_I_dacSPI>:
// Utils
#include <math.h>
#include <util/delay.h>

/* Global variables */
CSPI dacSPI;
    551e:	83 ef       	ldi	r24, 0xF3	; 243
    5520:	96 e2       	ldi	r25, 0x26	; 38
    5522:	0e 94 73 16 	call	0x2ce6	; 0x2ce6 <_ZN4CSPIC1Ev>
CTimerC timer;
    5526:	80 ef       	ldi	r24, 0xF0	; 240
    5528:	96 e2       	ldi	r25, 0x26	; 38
    552a:	0e 94 f2 34 	call	0x69e4	; 0x69e4 <_ZN7CTimerCC1Ev>
CTimerD1 timeout;
    552e:	8d ee       	ldi	r24, 0xED	; 237
    5530:	96 e2       	ldi	r25, 0x26	; 38
    5532:	0e 94 1d 37 	call	0x6e3a	; 0x6e3a <_ZN8CTimerD1C1Ev>
CTimerF laserTimer;
    5536:	8a ee       	ldi	r24, 0xEA	; 234
    5538:	96 e2       	ldi	r25, 0x26	; 38
    553a:	0e 94 fe 37 	call	0x6ffc	; 0x6ffc <_ZN7CTimerFC1Ev>
CTimerC1 flowtimer;
    553e:	87 ee       	ldi	r24, 0xE7	; 231
    5540:	96 e2       	ldi	r25, 0x26	; 38
    5542:	0e 94 a1 35 	call	0x6b42	; 0x6b42 <_ZN8CTimerC1C1Ev>
CTimerD pwmtimer; // Cooling PWM
    5546:	84 ee       	ldi	r24, 0xE4	; 228
    5548:	96 e2       	ldi	r25, 0x26	; 38
    554a:	0e 94 72 36 	call	0x6ce4	; 0x6ce4 <_ZN7CTimerDC1Ev>
CDGUSUSART usart;
    554e:	82 ee       	ldi	r24, 0xE2	; 226
    5550:	96 e2       	ldi	r25, 0x26	; 38
    5552:	0e 94 7e 31 	call	0x62fc	; 0x62fc <_ZN10CDGUSUSARTC1Ev>
CDGUSDatabase Database;
    5556:	8a ed       	ldi	r24, 0xDA	; 218
    5558:	96 e2       	ldi	r25, 0x26	; 38
    555a:	0e 94 c0 02 	call	0x580	; 0x580 <_ZN13CDGUSDatabaseC1Ev>
CMBSender sender;
    555e:	8d eb       	ldi	r24, 0xBD	; 189
    5560:	96 e2       	ldi	r25, 0x26	; 38
    5562:	0e 94 77 2e 	call	0x5cee	; 0x5cee <_ZN9CMBSenderC1Ev>
CLaserBoard laserBoard;
    5566:	83 eb       	ldi	r24, 0xB3	; 179
    5568:	96 e2       	ldi	r25, 0x26	; 38
    556a:	0e 94 af 32 	call	0x655e	; 0x655e <_ZN11CLaserBoardC1Ev>
CSoundPlayer player;
    556e:	82 eb       	ldi	r24, 0xB2	; 178
    5570:	96 e2       	ldi	r25, 0x26	; 38
    5572:	0e 94 b9 33 	call	0x6772	; 0x6772 <_ZN12CSoundPlayerC1Ev>
CLaserControlApp App;
    5576:	86 e9       	ldi	r24, 0x96	; 150
    5578:	95 e2       	ldi	r25, 0x25	; 37
    557a:	0e 94 6a 05 	call	0xad4	; 0xad4 <_ZN16CLaserControlAppC1Ev>
CDS18B20 D18B20;
    557e:	82 e9       	ldi	r24, 0x92	; 146
    5580:	95 e2       	ldi	r25, 0x25	; 37
    5582:	0e 94 a0 31 	call	0x6340	; 0x6340 <_ZN8CDS18B20C1Ev>
    5586:	08 95       	ret

00005588 <_GLOBAL__sub_D_dacSPI>:
    5588:	82 e9       	ldi	r24, 0x92	; 146
    558a:	95 e2       	ldi	r25, 0x25	; 37
    558c:	0e 94 a1 31 	call	0x6342	; 0x6342 <_ZN8CDS18B20D1Ev>
CDGUSUSART usart;
CDGUSDatabase Database;
CMBSender sender;
CLaserBoard laserBoard;
CSoundPlayer player;
CLaserControlApp App;
    5590:	86 e9       	ldi	r24, 0x96	; 150
    5592:	95 e2       	ldi	r25, 0x25	; 37
    5594:	0e 94 70 05 	call	0xae0	; 0xae0 <_ZN16CLaserControlAppD1Ev>
CTimerD pwmtimer; // Cooling PWM
CDGUSUSART usart;
CDGUSDatabase Database;
CMBSender sender;
CLaserBoard laserBoard;
CSoundPlayer player;
    5598:	82 eb       	ldi	r24, 0xB2	; 178
    559a:	96 e2       	ldi	r25, 0x26	; 38
    559c:	0e 94 ba 33 	call	0x6774	; 0x6774 <_ZN12CSoundPlayerD1Ev>
CTimerC1 flowtimer;
CTimerD pwmtimer; // Cooling PWM
CDGUSUSART usart;
CDGUSDatabase Database;
CMBSender sender;
CLaserBoard laserBoard;
    55a0:	83 eb       	ldi	r24, 0xB3	; 179
    55a2:	96 e2       	ldi	r25, 0x26	; 38
    55a4:	0e 94 b0 32 	call	0x6560	; 0x6560 <_ZN11CLaserBoardD1Ev>
CTimerF laserTimer;
CTimerC1 flowtimer;
CTimerD pwmtimer; // Cooling PWM
CDGUSUSART usart;
CDGUSDatabase Database;
CMBSender sender;
    55a8:	8d eb       	ldi	r24, 0xBD	; 189
    55aa:	96 e2       	ldi	r25, 0x26	; 38
    55ac:	0e 94 ee 2e 	call	0x5ddc	; 0x5ddc <_ZN9CMBSenderD1Ev>
CTimerD1 timeout;
CTimerF laserTimer;
CTimerC1 flowtimer;
CTimerD pwmtimer; // Cooling PWM
CDGUSUSART usart;
CDGUSDatabase Database;
    55b0:	8a ed       	ldi	r24, 0xDA	; 218
    55b2:	96 e2       	ldi	r25, 0x26	; 38
    55b4:	0e 94 c1 02 	call	0x582	; 0x582 <_ZN13CDGUSDatabaseD1Ev>
CTimerC timer;
CTimerD1 timeout;
CTimerF laserTimer;
CTimerC1 flowtimer;
CTimerD pwmtimer; // Cooling PWM
CDGUSUSART usart;
    55b8:	82 ee       	ldi	r24, 0xE2	; 226
    55ba:	96 e2       	ldi	r25, 0x26	; 38
    55bc:	0e 94 8a 31 	call	0x6314	; 0x6314 <_ZN10CDGUSUSARTD1Ev>
CSPI dacSPI;
CTimerC timer;
CTimerD1 timeout;
CTimerF laserTimer;
CTimerC1 flowtimer;
CTimerD pwmtimer; // Cooling PWM
    55c0:	84 ee       	ldi	r24, 0xE4	; 228
    55c2:	96 e2       	ldi	r25, 0x26	; 38
    55c4:	0e 94 7e 36 	call	0x6cfc	; 0x6cfc <_ZN7CTimerDD1Ev>
/* Global variables */
CSPI dacSPI;
CTimerC timer;
CTimerD1 timeout;
CTimerF laserTimer;
CTimerC1 flowtimer;
    55c8:	87 ee       	ldi	r24, 0xE7	; 231
    55ca:	96 e2       	ldi	r25, 0x26	; 38
    55cc:	0e 94 ad 35 	call	0x6b5a	; 0x6b5a <_ZN8CTimerC1D1Ev>

/* Global variables */
CSPI dacSPI;
CTimerC timer;
CTimerD1 timeout;
CTimerF laserTimer;
    55d0:	8a ee       	ldi	r24, 0xEA	; 234
    55d2:	96 e2       	ldi	r25, 0x26	; 38
    55d4:	0e 94 0a 38 	call	0x7014	; 0x7014 <_ZN7CTimerFD1Ev>
#include <util/delay.h>

/* Global variables */
CSPI dacSPI;
CTimerC timer;
CTimerD1 timeout;
    55d8:	8d ee       	ldi	r24, 0xED	; 237
    55da:	96 e2       	ldi	r25, 0x26	; 38
    55dc:	0e 94 29 37 	call	0x6e52	; 0x6e52 <_ZN8CTimerD1D1Ev>
#include <math.h>
#include <util/delay.h>

/* Global variables */
CSPI dacSPI;
CTimerC timer;
    55e0:	80 ef       	ldi	r24, 0xF0	; 240
    55e2:	96 e2       	ldi	r25, 0x26	; 38
    55e4:	0e 94 fe 34 	call	0x69fc	; 0x69fc <_ZN7CTimerCD1Ev>
// Utils
#include <math.h>
#include <util/delay.h>

/* Global variables */
CSPI dacSPI;
    55e8:	83 ef       	ldi	r24, 0xF3	; 243
    55ea:	96 e2       	ldi	r25, 0x26	; 38
    55ec:	0e 94 74 16 	call	0x2ce8	; 0x2ce8 <_ZN4CSPID1Ev>
    55f0:	08 95       	ret

000055f2 <_Z16SystemInitializev>:
		laserBoard.BeepClassError();
	}
}

void SystemInitialize()
{
    55f2:	cf 92       	push	r12
    55f4:	df 92       	push	r13
    55f6:	ef 92       	push	r14
    55f8:	ff 92       	push	r15
    55fa:	0f 93       	push	r16
    55fc:	1f 93       	push	r17
	//LASER_CNT_EEPROMADDR
	//eeprom_write_dword((uint32_t*)LASER_CNT_EEPROMADDR, 0);
	
	cli();	/* Disable global interrupts */
    55fe:	f8 94       	cli
	
	EVSYS.CH0MUX = EVSYS_CHMUX_PORTC_PIN4_gc;
    5600:	84 e6       	ldi	r24, 0x64	; 100
    5602:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__TEXT_REGION_LENGTH__+0x700180>
	
	// Initialize modules
	laserBoard.InitializeIO();
    5606:	83 eb       	ldi	r24, 0xB3	; 179
    5608:	96 e2       	ldi	r25, 0x26	; 38
    560a:	0e 94 b1 32 	call	0x6562	; 0x6562 <_ZN11CLaserBoard12InitializeIOEv>
	D18B20.Initialize();
    560e:	82 e9       	ldi	r24, 0x92	; 146
    5610:	95 e2       	ldi	r25, 0x25	; 37
    5612:	0e 94 a0 32 	call	0x6540	; 0x6540 <_ZN8CDS18B2010InitializeEv>
	// TimerE0, TimerE1
	player.Initialize();
    5616:	82 eb       	ldi	r24, 0xB2	; 178
    5618:	96 e2       	ldi	r25, 0x26	; 38
    561a:	0e 94 2a 34 	call	0x6854	; 0x6854 <_ZN12CSoundPlayer10InitializeEv>
	// TimerC0 Initialize prepare timer
	timer.Initialize(WGM_Normal, CS_DIV256);
    561e:	46 e0       	ldi	r20, 0x06	; 6
    5620:	60 e0       	ldi	r22, 0x00	; 0
    5622:	80 ef       	ldi	r24, 0xF0	; 240
    5624:	96 e2       	ldi	r25, 0x26	; 38
    5626:	0e 94 35 34 	call	0x686a	; 0x686a <_ZN7CTimerC10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
	timer.SetPeriod(25000); // Every 10 ms
    562a:	68 ea       	ldi	r22, 0xA8	; 168
    562c:	71 e6       	ldi	r23, 0x61	; 97
    562e:	80 ef       	ldi	r24, 0xF0	; 240
    5630:	96 e2       	ldi	r25, 0x26	; 38
    5632:	0e 94 73 34 	call	0x68e6	; 0x68e6 <_ZN7CTimerC9SetPeriodEj>
	timer.SetOVFCallback(App.OnTimerStatic, &App, TC_OVFINTLVL_LO_gc); // Enable interrupt
    5636:	21 e0       	ldi	r18, 0x01	; 1
    5638:	46 e9       	ldi	r20, 0x96	; 150
    563a:	55 e2       	ldi	r21, 0x25	; 37
    563c:	6d e7       	ldi	r22, 0x7D	; 125
    563e:	75 e1       	ldi	r23, 0x15	; 21
    5640:	80 ef       	ldi	r24, 0xF0	; 240
    5642:	96 e2       	ldi	r25, 0x26	; 38
    5644:	0e 94 8c 34 	call	0x6918	; 0x6918 <_ZN7CTimerC14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>
	// TimerD1
	timeout.Initialize(WGM_Normal, CS_DIV1024);
    5648:	47 e0       	ldi	r20, 0x07	; 7
    564a:	60 e0       	ldi	r22, 0x00	; 0
    564c:	8d ee       	ldi	r24, 0xED	; 237
    564e:	96 e2       	ldi	r25, 0x26	; 38
    5650:	0e 94 86 36 	call	0x6d0c	; 0x6d0c <_ZN8CTimerD110InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
	timeout.SetPeriod(31250); //1s timeout
    5654:	62 e1       	ldi	r22, 0x12	; 18
    5656:	7a e7       	ldi	r23, 0x7A	; 122
    5658:	8d ee       	ldi	r24, 0xED	; 237
    565a:	96 e2       	ldi	r25, 0x26	; 38
    565c:	0e 94 ca 36 	call	0x6d94	; 0x6d94 <_ZN8CTimerD19SetPeriodEj>
	// TimerC1
	flowtimer.Initialize(WGM_Normal, CS_EventChannel0);
    5660:	48 e0       	ldi	r20, 0x08	; 8
    5662:	60 e0       	ldi	r22, 0x00	; 0
    5664:	87 ee       	ldi	r24, 0xE7	; 231
    5666:	96 e2       	ldi	r25, 0x26	; 38
    5668:	0e 94 06 35 	call	0x6a0c	; 0x6a0c <_ZN8CTimerC110InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
	flowtimer.SetPeriod(65535);
    566c:	6f ef       	ldi	r22, 0xFF	; 255
    566e:	7f ef       	ldi	r23, 0xFF	; 255
    5670:	87 ee       	ldi	r24, 0xE7	; 231
    5672:	96 e2       	ldi	r25, 0x26	; 38
    5674:	0e 94 4a 35 	call	0x6a94	; 0x6a94 <_ZN8CTimerC19SetPeriodEj>
	flowtimer.Start(65535);
    5678:	6f ef       	ldi	r22, 0xFF	; 255
    567a:	7f ef       	ldi	r23, 0xFF	; 255
    567c:	87 ee       	ldi	r24, 0xE7	; 231
    567e:	96 e2       	ldi	r25, 0x26	; 38
    5680:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <_ZN8CTimerC15StartEj>
	// TimerD0
	pwmtimer.Initialize(WGM_SingleSlopePWM, CS_DIV64);//CS_DIV256);
    5684:	45 e0       	ldi	r20, 0x05	; 5
    5686:	63 e0       	ldi	r22, 0x03	; 3
    5688:	84 ee       	ldi	r24, 0xE4	; 228
    568a:	96 e2       	ldi	r25, 0x26	; 38
    568c:	0e 94 b5 35 	call	0x6b6a	; 0x6b6a <_ZN7CTimerD10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>
	pwmtimer.SetCOMPA(512);
    5690:	60 e0       	ldi	r22, 0x00	; 0
    5692:	72 e0       	ldi	r23, 0x02	; 2
    5694:	84 ee       	ldi	r24, 0xE4	; 228
    5696:	96 e2       	ldi	r25, 0x26	; 38
    5698:	0e 94 f8 35 	call	0x6bf0	; 0x6bf0 <_ZN7CTimerD8SetCOMPAEj>
	laserBoard.PWMOn();
    569c:	83 eb       	ldi	r24, 0xB3	; 179
    569e:	96 e2       	ldi	r25, 0x26	; 38
    56a0:	0e 94 46 33 	call	0x668c	; 0x668c <_ZN11CLaserBoard5PWMOnEv>
	laserBoard.REDOn();
    56a4:	83 eb       	ldi	r24, 0xB3	; 179
    56a6:	96 e2       	ldi	r25, 0x26	; 38
    56a8:	0e 94 4e 33 	call	0x669c	; 0x669c <_ZN11CLaserBoard5REDOnEv>
	laserBoard.GRNOn();
    56ac:	83 eb       	ldi	r24, 0xB3	; 179
    56ae:	96 e2       	ldi	r25, 0x26	; 38
    56b0:	0e 94 52 33 	call	0x66a4	; 0x66a4 <_ZN11CLaserBoard5GRNOnEv>
	laserBoard.BLUOn();
    56b4:	83 eb       	ldi	r24, 0xB3	; 179
    56b6:	96 e2       	ldi	r25, 0x26	; 38
    56b8:	0e 94 56 33 	call	0x66ac	; 0x66ac <_ZN11CLaserBoard5BLUOnEv>
	//pwmtimer.EnableChannel(TIMER_CHANNEL_A);
	pwmtimer.SetOVFCallback(App.OnPWMTimerOVFStatic, &App, TC_OVFINTLVL_LO_gc);
    56bc:	21 e0       	ldi	r18, 0x01	; 1
    56be:	46 e9       	ldi	r20, 0x96	; 150
    56c0:	55 e2       	ldi	r21, 0x25	; 37
    56c2:	6a eb       	ldi	r22, 0xBA	; 186
    56c4:	76 e0       	ldi	r23, 0x06	; 6
    56c6:	84 ee       	ldi	r24, 0xE4	; 228
    56c8:	96 e2       	ldi	r25, 0x26	; 38
    56ca:	0e 94 0c 36 	call	0x6c18	; 0x6c18 <_ZN7CTimerD14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>
	pwmtimer.SetCOMPACallback(App.OnPWMTimerCMPStatic, &App, TC_CCAINTLVL_LO_gc);
    56ce:	21 e0       	ldi	r18, 0x01	; 1
    56d0:	46 e9       	ldi	r20, 0x96	; 150
    56d2:	55 e2       	ldi	r21, 0x25	; 37
    56d4:	6d eb       	ldi	r22, 0xBD	; 189
    56d6:	76 e0       	ldi	r23, 0x06	; 6
    56d8:	84 ee       	ldi	r24, 0xE4	; 228
    56da:	96 e2       	ldi	r25, 0x26	; 38
    56dc:	0e 94 2e 36 	call	0x6c5c	; 0x6c5c <_ZN7CTimerD16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>
	// Set RGB Led control
#ifndef LED_LASER_INDICATOR
	pwmtimer.SetCOMPB(256);
    56e0:	60 e0       	ldi	r22, 0x00	; 0
    56e2:	71 e0       	ldi	r23, 0x01	; 1
    56e4:	84 ee       	ldi	r24, 0xE4	; 228
    56e6:	96 e2       	ldi	r25, 0x26	; 38
    56e8:	0e 94 fd 35 	call	0x6bfa	; 0x6bfa <_ZN7CTimerD8SetCOMPBEj>
	pwmtimer.SetCOMPC(512);
    56ec:	60 e0       	ldi	r22, 0x00	; 0
    56ee:	72 e0       	ldi	r23, 0x02	; 2
    56f0:	84 ee       	ldi	r24, 0xE4	; 228
    56f2:	96 e2       	ldi	r25, 0x26	; 38
    56f4:	0e 94 02 36 	call	0x6c04	; 0x6c04 <_ZN7CTimerD8SetCOMPCEj>
	pwmtimer.SetCOMPD(768);
    56f8:	60 e0       	ldi	r22, 0x00	; 0
    56fa:	73 e0       	ldi	r23, 0x03	; 3
    56fc:	84 ee       	ldi	r24, 0xE4	; 228
    56fe:	96 e2       	ldi	r25, 0x26	; 38
    5700:	0e 94 07 36 	call	0x6c0e	; 0x6c0e <_ZN7CTimerD8SetCOMPDEj>
	pwmtimer.SetCOMPBCallback(App.OnPWMTimerREDStatic, &App, TC_CCBINTLVL_HI_gc);
    5704:	2c e0       	ldi	r18, 0x0C	; 12
    5706:	46 e9       	ldi	r20, 0x96	; 150
    5708:	55 e2       	ldi	r21, 0x25	; 37
    570a:	60 ec       	ldi	r22, 0xC0	; 192
    570c:	76 e0       	ldi	r23, 0x06	; 6
    570e:	84 ee       	ldi	r24, 0xE4	; 228
    5710:	96 e2       	ldi	r25, 0x26	; 38
    5712:	0e 94 3f 36 	call	0x6c7e	; 0x6c7e <_ZN7CTimerD16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>
	pwmtimer.SetCOMPCCallback(App.OnPWMTimerGRNStatic, &App, TC_CCCINTLVL_HI_gc);
    5716:	20 e3       	ldi	r18, 0x30	; 48
    5718:	46 e9       	ldi	r20, 0x96	; 150
    571a:	55 e2       	ldi	r21, 0x25	; 37
    571c:	61 ec       	ldi	r22, 0xC1	; 193
    571e:	76 e0       	ldi	r23, 0x06	; 6
    5720:	84 ee       	ldi	r24, 0xE4	; 228
    5722:	96 e2       	ldi	r25, 0x26	; 38
    5724:	0e 94 50 36 	call	0x6ca0	; 0x6ca0 <_ZN7CTimerD16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum>
	pwmtimer.SetCOMPDCallback(App.OnPWMTimerBLUStatic, &App, TC_CCDINTLVL_HI_gc);
    5728:	20 ec       	ldi	r18, 0xC0	; 192
    572a:	46 e9       	ldi	r20, 0x96	; 150
    572c:	55 e2       	ldi	r21, 0x25	; 37
    572e:	62 ec       	ldi	r22, 0xC2	; 194
    5730:	76 e0       	ldi	r23, 0x06	; 6
    5732:	84 ee       	ldi	r24, 0xE4	; 228
    5734:	96 e2       	ldi	r25, 0x26	; 38
    5736:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <_ZN7CTimerD16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum>
#endif
	pwmtimer.Start(1024);
    573a:	60 e0       	ldi	r22, 0x00	; 0
    573c:	74 e0       	ldi	r23, 0x04	; 4
    573e:	84 ee       	ldi	r24, 0xE4	; 228
    5740:	96 e2       	ldi	r25, 0x26	; 38
    5742:	0e 94 d0 35 	call	0x6ba0	; 0x6ba0 <_ZN7CTimerD5StartEj>
	
	dacSPI.Initialize(true, SPI_DORD_MSBtoLSB, SPI_MODE_LFSTP_TRSMP, false, SPI_PRESCALER_DIV128_gc);
    5746:	0f 2e       	mov	r0, r31
    5748:	f3 e0       	ldi	r31, 0x03	; 3
    574a:	ef 2e       	mov	r14, r31
    574c:	f0 2d       	mov	r31, r0
    574e:	00 e0       	ldi	r16, 0x00	; 0
    5750:	23 e0       	ldi	r18, 0x03	; 3
    5752:	40 e0       	ldi	r20, 0x00	; 0
    5754:	61 e0       	ldi	r22, 0x01	; 1
    5756:	83 ef       	ldi	r24, 0xF3	; 243
    5758:	96 e2       	ldi	r25, 0x26	; 38
    575a:	0e 94 75 16 	call	0x2cea	; 0x2cea <_ZN4CSPI10InitializeEb19SPI_DATA_ORDER_ENUM13SPI_MODE_ENUMb18SPI_PRESCALER_enum>
	usart.Initialize(BAUD_115200_ERM0P1, PARITY_DISABLE, STOPBITS_1BIT, true);
    575e:	01 e0       	ldi	r16, 0x01	; 1
    5760:	20 e0       	ldi	r18, 0x00	; 0
    5762:	40 e0       	ldi	r20, 0x00	; 0
    5764:	6d e0       	ldi	r22, 0x0D	; 13
    5766:	82 ee       	ldi	r24, 0xE2	; 226
    5768:	96 e2       	ldi	r25, 0x26	; 38
    576a:	0e 94 02 31 	call	0x6204	; 0x6204 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb>
	sender.Initialize(&timeout, &usart, &App, 256, 256, 31250);
    576e:	0f 2e       	mov	r0, r31
    5770:	f2 e1       	ldi	r31, 0x12	; 18
    5772:	cf 2e       	mov	r12, r31
    5774:	fa e7       	ldi	r31, 0x7A	; 122
    5776:	df 2e       	mov	r13, r31
    5778:	f0 2d       	mov	r31, r0
    577a:	e1 2c       	mov	r14, r1
    577c:	ff 24       	eor	r15, r15
    577e:	f3 94       	inc	r15
    5780:	00 e0       	ldi	r16, 0x00	; 0
    5782:	11 e0       	ldi	r17, 0x01	; 1
    5784:	26 e9       	ldi	r18, 0x96	; 150
    5786:	35 e2       	ldi	r19, 0x25	; 37
    5788:	42 ee       	ldi	r20, 0xE2	; 226
    578a:	56 e2       	ldi	r21, 0x26	; 38
    578c:	6d ee       	ldi	r22, 0xED	; 237
    578e:	76 e2       	ldi	r23, 0x26	; 38
    5790:	8d eb       	ldi	r24, 0xBD	; 189
    5792:	96 e2       	ldi	r25, 0x26	; 38
    5794:	0e 94 7d 2e 	call	0x5cfa	; 0x5cfa <_ZN9CMBSender10InitializeEP7CTimer1P6CUSARTP16CMBEventsHandlerjjj>
	Database.Initialize(&sender, VARIABLE_ADDR_DATABASE);
    5798:	40 e0       	ldi	r20, 0x00	; 0
    579a:	51 e0       	ldi	r21, 0x01	; 1
    579c:	6d eb       	ldi	r22, 0xBD	; 189
    579e:	76 e2       	ldi	r23, 0x26	; 38
    57a0:	8a ed       	ldi	r24, 0xDA	; 218
    57a2:	96 e2       	ldi	r25, 0x26	; 38
    57a4:	0e 94 c2 02 	call	0x584	; 0x584 <_ZN13CDGUSDatabase10InitializeEP9CMBSenderj>
	// TimerC0, TimerF0
	App.Initialize(&sender);
    57a8:	6d eb       	ldi	r22, 0xBD	; 189
    57aa:	76 e2       	ldi	r23, 0x26	; 38
    57ac:	86 e9       	ldi	r24, 0x96	; 150
    57ae:	95 e2       	ldi	r25, 0x25	; 37
    57b0:	0e 94 1b 0d 	call	0x1a36	; 0x1a36 <_ZN16CLaserControlApp10InitializeEP9CMBSender>
	laserBoard.InitializeClock();
    57b4:	83 eb       	ldi	r24, 0xB3	; 179
    57b6:	96 e2       	ldi	r25, 0x26	; 38
    57b8:	0e 94 11 33 	call	0x6622	; 0x6622 <_ZN11CLaserBoard15InitializeClockEv>
	
	InterruptSenderTable[PORTC_INT0_vect_num] = &App;
    57bc:	86 e9       	ldi	r24, 0x96	; 150
    57be:	95 e2       	ldi	r25, 0x25	; 37
    57c0:	80 93 9c 24 	sts	0x249C, r24	; 0x80249c <InterruptSenderTable+0x4>
    57c4:	90 93 9d 24 	sts	0x249D, r25	; 0x80249d <InterruptSenderTable+0x5>
	InterruptFuncTable[PORTC_INT0_vect_num] = App.OnINT0Static;
    57c8:	82 e3       	ldi	r24, 0x32	; 50
    57ca:	96 e1       	ldi	r25, 0x16	; 22
    57cc:	80 93 a6 23 	sts	0x23A6, r24	; 0x8023a6 <InterruptFuncTable+0x4>
    57d0:	90 93 a7 23 	sts	0x23A7, r25	; 0x8023a7 <InterruptFuncTable+0x5>
	
	sei();	/* Enable global interrupts */
    57d4:	78 94       	sei
}
    57d6:	1f 91       	pop	r17
    57d8:	0f 91       	pop	r16
    57da:	ff 90       	pop	r15
    57dc:	ef 90       	pop	r14
    57de:	df 90       	pop	r13
    57e0:	cf 90       	pop	r12
    57e2:	08 95       	ret

000057e4 <main>:

DGUS_PROFILE empty_record;
	 
int main(void)
{
    57e4:	cf 93       	push	r28
    57e6:	df 93       	push	r29
    57e8:	1f 92       	push	r1
    57ea:	1f 92       	push	r1
    57ec:	cd b7       	in	r28, 0x3d	; 61
    57ee:	de b7       	in	r29, 0x3e	; 62
	//eeprom_write_dword((uint32_t*)LASER_CNT_EEPROMADDR, 0);
	// Initialization system
	SystemInitialize();
    57f0:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <_Z16SystemInitializev>
    57f4:	2a ea       	ldi	r18, 0xAA	; 170
    57f6:	36 ee       	ldi	r19, 0xE6	; 230
    57f8:	86 e9       	ldi	r24, 0x96	; 150
    57fa:	91 e0       	ldi	r25, 0x01	; 1
    57fc:	21 50       	subi	r18, 0x01	; 1
    57fe:	30 40       	sbci	r19, 0x00	; 0
    5800:	80 40       	sbci	r24, 0x00	; 0
    5802:	90 40       	sbci	r25, 0x00	; 0
    5804:	d9 f7       	brne	.-10     	; 0x57fc <main+0x18>
    5806:	00 00       	nop
	}*/
	
	// Startup delay (Beep "Imperial March")
	//player.Play();
	_delay_ms(5000);
	laserBoard.Relay1On();
    5808:	83 eb       	ldi	r24, 0xB3	; 179
    580a:	96 e2       	ldi	r25, 0x26	; 38
    580c:	0e 94 5a 33 	call	0x66b4	; 0x66b4 <_ZN11CLaserBoard8Relay1OnEv>
    5810:	2f ef       	ldi	r18, 0xFF	; 255
    5812:	33 ec       	ldi	r19, 0xC3	; 195
    5814:	89 e0       	ldi	r24, 0x09	; 9
    5816:	21 50       	subi	r18, 0x01	; 1
    5818:	30 40       	sbci	r19, 0x00	; 0
    581a:	80 40       	sbci	r24, 0x00	; 0
    581c:	e1 f7       	brne	.-8      	; 0x5816 <main+0x32>
    581e:	00 c0       	rjmp	.+0      	; 0x5820 <main+0x3c>
    5820:	00 00       	nop
	_delay_ms(100);
	//laserBoard.Relay1Off();
	
	uint16_t data = 0;
    5822:	19 82       	std	Y+1, r1	; 0x01
    5824:	1a 82       	std	Y+2, r1	; 0x02
	dacSPI.Send((uint8_t*)&data, sizeof(data));
    5826:	42 e0       	ldi	r20, 0x02	; 2
    5828:	50 e0       	ldi	r21, 0x00	; 0
    582a:	be 01       	movw	r22, r28
    582c:	6f 5f       	subi	r22, 0xFF	; 255
    582e:	7f 4f       	sbci	r23, 0xFF	; 255
    5830:	83 ef       	ldi	r24, 0xF3	; 243
    5832:	96 e2       	ldi	r25, 0x26	; 38
    5834:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <_ZN4CSPI4SendEPhj>
	
	// Initialize application GUI
	App.Start();
    5838:	86 e9       	ldi	r24, 0x96	; 150
    583a:	95 e2       	ldi	r25, 0x25	; 37
    583c:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <_ZN16CLaserControlApp5StartEv>
			//while (dacSPI.transmitterState() > 0);
			//dacSPI.Deinitialize();
			//_delay_ms(1);
			
			static uint16_t prs = 0;
			if ((prs++ % 15) == 0)
    5840:	1f e0       	ldi	r17, 0x0F	; 15
    while (1) 
    {
		// Loop delay
		//_delay_ms(1);
		
		laserBoard.PortCheck();
    5842:	83 eb       	ldi	r24, 0xB3	; 179
    5844:	96 e2       	ldi	r25, 0x26	; 38
    5846:	0e 94 b0 33 	call	0x6760	; 0x6760 <_ZN11CLaserBoard9PortCheckEv>
		
		// Process application
		//static uint16_t prs = 0;
		//if ((prs++ % 5) == 0)
		{
			App.Run();
    584a:	86 e9       	ldi	r24, 0x96	; 150
    584c:	95 e2       	ldi	r25, 0x25	; 37
    584e:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <_ZN16CLaserControlApp3RunEv>
			//while (dacSPI.transmitterState() > 0);
			//dacSPI.Deinitialize();
			//_delay_ms(1);
			
			static uint16_t prs = 0;
			if ((prs++ % 15) == 0)
    5852:	40 91 8e 25 	lds	r20, 0x258E	; 0x80258e <_ZZ4mainE3prs>
    5856:	50 91 8f 25 	lds	r21, 0x258F	; 0x80258f <_ZZ4mainE3prs+0x1>
    585a:	ca 01       	movw	r24, r20
    585c:	01 96       	adiw	r24, 0x01	; 1
    585e:	80 93 8e 25 	sts	0x258E, r24	; 0x80258e <_ZZ4mainE3prs>
    5862:	90 93 8f 25 	sts	0x258F, r25	; 0x80258f <_ZZ4mainE3prs+0x1>
    5866:	9a 01       	movw	r18, r20
    5868:	a9 e8       	ldi	r26, 0x89	; 137
    586a:	b8 e8       	ldi	r27, 0x88	; 136
    586c:	0e 94 b4 39 	call	0x7368	; 0x7368 <__umulhisi3>
    5870:	96 95       	lsr	r25
    5872:	87 95       	ror	r24
    5874:	96 95       	lsr	r25
    5876:	87 95       	ror	r24
    5878:	96 95       	lsr	r25
    587a:	87 95       	ror	r24
    587c:	18 9f       	mul	r17, r24
    587e:	90 01       	movw	r18, r0
    5880:	19 9f       	mul	r17, r25
    5882:	30 0d       	add	r19, r0
    5884:	11 24       	eor	r1, r1
    5886:	42 17       	cp	r20, r18
    5888:	53 07       	cpc	r21, r19
    588a:	41 f4       	brne	.+16     	; 0x589c <main+0xb8>
				temperature = D18B20.temp_18b20();
    588c:	82 e9       	ldi	r24, 0x92	; 146
    588e:	95 e2       	ldi	r25, 0x25	; 37
    5890:	0e 94 29 32 	call	0x6452	; 0x6452 <_ZN8CDS18B2010temp_18b20Ev>
    5894:	80 93 90 25 	sts	0x2590, r24	; 0x802590 <temperature>
    5898:	90 93 91 25 	sts	0x2591, r25	; 0x802591 <temperature+0x1>
			
			//_delay_ms(1);
			//dacSPI.Initialize(true, SPI_DORD_MSBtoLSB, SPI_MODE_LFSTP_TRSMP, false, SPI_PRESCALER_DIV128_gc);
			
			if (temperature > 265)
    589c:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    58a0:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    58a4:	8a 30       	cpi	r24, 0x0A	; 10
    58a6:	91 40       	sbci	r25, 0x01	; 1
    58a8:	24 f0       	brlt	.+8      	; 0x58b2 <main+0xce>
				laserBoard.Relay2On();
    58aa:	83 eb       	ldi	r24, 0xB3	; 179
    58ac:	96 e2       	ldi	r25, 0x26	; 38
    58ae:	0e 94 5e 33 	call	0x66bc	; 0x66bc <_ZN11CLaserBoard8Relay2OnEv>
			
			if (temperature <255)
    58b2:	80 91 90 25 	lds	r24, 0x2590	; 0x802590 <temperature>
    58b6:	90 91 91 25 	lds	r25, 0x2591	; 0x802591 <temperature+0x1>
    58ba:	8f 3f       	cpi	r24, 0xFF	; 255
    58bc:	91 05       	cpc	r25, r1
    58be:	0c f6       	brge	.-126    	; 0x5842 <main+0x5e>
				laserBoard.Relay2Off();			
    58c0:	83 eb       	ldi	r24, 0xB3	; 179
    58c2:	96 e2       	ldi	r25, 0x26	; 38
    58c4:	0e 94 62 33 	call	0x66c4	; 0x66c4 <_ZN11CLaserBoard9Relay2OffEv>
    58c8:	bc cf       	rjmp	.-136    	; 0x5842 <main+0x5e>

000058ca <_ZN16CMBEventsHandler13FillVarDataTxEjPjj>:
	index = crch ^ data;	
	crch  = crcl ^ CRCTABH[index];
	crcl  = CRCTABL[index];

	return (crch << 8) | crcl;
}
    58ca:	ef 92       	push	r14
    58cc:	ff 92       	push	r15
    58ce:	0f 93       	push	r16
    58d0:	1f 93       	push	r17
    58d2:	cf 93       	push	r28
    58d4:	df 93       	push	r29
    58d6:	8c 01       	movw	r16, r24
    58d8:	dc 01       	movw	r26, r24
    58da:	14 96       	adiw	r26, 0x04	; 4
    58dc:	ed 91       	ld	r30, X+
    58de:	fc 91       	ld	r31, X
    58e0:	15 97       	sbiw	r26, 0x05	; 5
    58e2:	8a ea       	ldi	r24, 0xAA	; 170
    58e4:	80 83       	st	Z, r24
    58e6:	14 96       	adiw	r26, 0x04	; 4
    58e8:	ed 91       	ld	r30, X+
    58ea:	fc 91       	ld	r31, X
    58ec:	15 97       	sbiw	r26, 0x05	; 5
    58ee:	8c ec       	ldi	r24, 0xCC	; 204
    58f0:	81 83       	std	Z+1, r24	; 0x01
    58f2:	14 96       	adiw	r26, 0x04	; 4
    58f4:	ed 91       	ld	r30, X+
    58f6:	fc 91       	ld	r31, X
    58f8:	15 97       	sbiw	r26, 0x05	; 5
    58fa:	85 e0       	ldi	r24, 0x05	; 5
    58fc:	82 0f       	add	r24, r18
    58fe:	82 83       	std	Z+2, r24	; 0x02
    5900:	14 96       	adiw	r26, 0x04	; 4
    5902:	ed 91       	ld	r30, X+
    5904:	fc 91       	ld	r31, X
    5906:	15 97       	sbiw	r26, 0x05	; 5
    5908:	82 e8       	ldi	r24, 0x82	; 130
    590a:	83 83       	std	Z+3, r24	; 0x03
    590c:	14 96       	adiw	r26, 0x04	; 4
    590e:	ed 91       	ld	r30, X+
    5910:	fc 91       	ld	r31, X
    5912:	15 97       	sbiw	r26, 0x05	; 5
    5914:	74 83       	std	Z+4, r23	; 0x04
    5916:	14 96       	adiw	r26, 0x04	; 4
    5918:	ed 91       	ld	r30, X+
    591a:	fc 91       	ld	r31, X
    591c:	15 97       	sbiw	r26, 0x05	; 5
    591e:	65 83       	std	Z+5, r22	; 0x05
    5920:	86 e0       	ldi	r24, 0x06	; 6
    5922:	82 0f       	add	r24, r18
    5924:	19 96       	adiw	r26, 0x09	; 9
    5926:	8c 93       	st	X, r24
    5928:	c9 01       	movw	r24, r18
    592a:	96 95       	lsr	r25
    592c:	87 95       	ror	r24
    592e:	00 97       	sbiw	r24, 0x00	; 0
    5930:	d9 f0       	breq	.+54     	; 0x5968 <_ZN16CMBEventsHandler13FillVarDataTxEjPjj+0x9e>
    5932:	e4 2f       	mov	r30, r20
    5934:	f5 2f       	mov	r31, r21
    5936:	03 96       	adiw	r24, 0x03	; 3
    5938:	88 0f       	add	r24, r24
    593a:	99 1f       	adc	r25, r25
    593c:	46 e0       	ldi	r20, 0x06	; 6
    593e:	50 e0       	ldi	r21, 0x00	; 0
    5940:	e8 01       	movw	r28, r16
    5942:	ac 81       	ldd	r26, Y+4	; 0x04
    5944:	bd 81       	ldd	r27, Y+5	; 0x05
    5946:	a4 0f       	add	r26, r20
    5948:	b5 1f       	adc	r27, r21
    594a:	61 81       	ldd	r22, Z+1	; 0x01
    594c:	6c 93       	st	X, r22
    594e:	ac 81       	ldd	r26, Y+4	; 0x04
    5950:	bd 81       	ldd	r27, Y+5	; 0x05
    5952:	a4 0f       	add	r26, r20
    5954:	b5 1f       	adc	r27, r21
    5956:	60 81       	ld	r22, Z
    5958:	32 96       	adiw	r30, 0x02	; 2
    595a:	11 96       	adiw	r26, 0x01	; 1
    595c:	6c 93       	st	X, r22
    595e:	4e 5f       	subi	r20, 0xFE	; 254
    5960:	5f 4f       	sbci	r21, 0xFF	; 255
    5962:	48 17       	cp	r20, r24
    5964:	59 07       	cpc	r21, r25
    5966:	61 f7       	brne	.-40     	; 0x5940 <_ZN16CMBEventsHandler13FillVarDataTxEjPjj+0x76>
    5968:	f8 01       	movw	r30, r16
    596a:	81 85       	ldd	r24, Z+9	; 0x09
    596c:	a8 2f       	mov	r26, r24
    596e:	b0 e0       	ldi	r27, 0x00	; 0
    5970:	a4 30       	cpi	r26, 0x04	; 4
    5972:	b1 05       	cpc	r27, r1
    5974:	34 f1       	brlt	.+76     	; 0x59c2 <_ZN16CMBEventsHandler13FillVarDataTxEjPjj+0xf8>
    5976:	04 80       	ldd	r0, Z+4	; 0x04
    5978:	f5 81       	ldd	r31, Z+5	; 0x05
    597a:	e0 2d       	mov	r30, r0
    597c:	33 96       	adiw	r30, 0x03	; 3
    597e:	63 e0       	ldi	r22, 0x03	; 3
    5980:	70 e0       	ldi	r23, 0x00	; 0
    5982:	4f ef       	ldi	r20, 0xFF	; 255
    5984:	5f ef       	ldi	r21, 0xFF	; 255
    5986:	91 91       	ld	r25, Z+
    5988:	49 27       	eor	r20, r25
    598a:	94 2f       	mov	r25, r20
    598c:	92 95       	swap	r25
    598e:	94 27       	eor	r25, r20
    5990:	09 2e       	mov	r0, r25
    5992:	96 95       	lsr	r25
    5994:	96 95       	lsr	r25
    5996:	90 25       	eor	r25, r0
    5998:	09 2e       	mov	r0, r25
    599a:	96 95       	lsr	r25
    599c:	90 25       	eor	r25, r0
    599e:	97 70       	andi	r25, 0x07	; 7
    59a0:	04 2e       	mov	r0, r20
    59a2:	45 2f       	mov	r20, r21
    59a4:	96 95       	lsr	r25
    59a6:	07 94       	ror	r0
    59a8:	97 95       	ror	r25
    59aa:	50 2d       	mov	r21, r0
    59ac:	49 27       	eor	r20, r25
    59ae:	06 94       	lsr	r0
    59b0:	97 95       	ror	r25
    59b2:	50 25       	eor	r21, r0
    59b4:	49 27       	eor	r20, r25
    59b6:	6f 5f       	subi	r22, 0xFF	; 255
    59b8:	7f 4f       	sbci	r23, 0xFF	; 255
    59ba:	6a 17       	cp	r22, r26
    59bc:	7b 07       	cpc	r23, r27
    59be:	1c f3       	brlt	.-58     	; 0x5986 <_ZN16CMBEventsHandler13FillVarDataTxEjPjj+0xbc>
    59c0:	02 c0       	rjmp	.+4      	; 0x59c6 <_ZN16CMBEventsHandler13FillVarDataTxEjPjj+0xfc>
    59c2:	4f ef       	ldi	r20, 0xFF	; 255
    59c4:	5f ef       	ldi	r21, 0xFF	; 255
    59c6:	d8 01       	movw	r26, r16
    59c8:	14 96       	adiw	r26, 0x04	; 4
    59ca:	ed 91       	ld	r30, X+
    59cc:	fc 91       	ld	r31, X
    59ce:	15 97       	sbiw	r26, 0x05	; 5
    59d0:	e8 0f       	add	r30, r24
    59d2:	f1 1d       	adc	r31, r1
    59d4:	51 83       	std	Z+1, r21	; 0x01
    59d6:	19 96       	adiw	r26, 0x09	; 9
    59d8:	8c 91       	ld	r24, X
    59da:	19 97       	sbiw	r26, 0x09	; 9
    59dc:	14 96       	adiw	r26, 0x04	; 4
    59de:	ed 91       	ld	r30, X+
    59e0:	fc 91       	ld	r31, X
    59e2:	15 97       	sbiw	r26, 0x05	; 5
    59e4:	e8 0f       	add	r30, r24
    59e6:	f1 1d       	adc	r31, r1
    59e8:	40 83       	st	Z, r20
    59ea:	28 5f       	subi	r18, 0xF8	; 248
    59ec:	19 96       	adiw	r26, 0x09	; 9
    59ee:	2c 93       	st	X, r18
    59f0:	df 91       	pop	r29
    59f2:	cf 91       	pop	r28
    59f4:	1f 91       	pop	r17
    59f6:	0f 91       	pop	r16
    59f8:	ff 90       	pop	r15
    59fa:	ef 90       	pop	r14
    59fc:	08 95       	ret

000059fe <_ZN16CMBEventsHandler15AllocateBuffersEjj>:
    59fe:	0f 93       	push	r16
    5a00:	1f 93       	push	r17
    5a02:	cf 93       	push	r28
    5a04:	df 93       	push	r29
    5a06:	ec 01       	movw	r28, r24
    5a08:	cb 01       	movw	r24, r22
    5a0a:	8a 01       	movw	r16, r20
    5a0c:	6f 83       	std	Y+7, r22	; 0x07
    5a0e:	78 87       	std	Y+8, r23	; 0x08
    5a10:	4a 87       	std	Y+10, r20	; 0x0a
    5a12:	5b 87       	std	Y+11, r21	; 0x0b
    5a14:	0e 94 ce 39 	call	0x739c	; 0x739c <malloc>
    5a18:	8a 83       	std	Y+2, r24	; 0x02
    5a1a:	9b 83       	std	Y+3, r25	; 0x03
    5a1c:	c8 01       	movw	r24, r16
    5a1e:	0e 94 ce 39 	call	0x739c	; 0x739c <malloc>
    5a22:	8c 83       	std	Y+4, r24	; 0x04
    5a24:	9d 83       	std	Y+5, r25	; 0x05
    5a26:	19 86       	std	Y+9, r1	; 0x09
    5a28:	1e 82       	std	Y+6, r1	; 0x06
    5a2a:	df 91       	pop	r29
    5a2c:	cf 91       	pop	r28
    5a2e:	1f 91       	pop	r17
    5a30:	0f 91       	pop	r16
    5a32:	08 95       	ret

00005a34 <_ZN16CMBEventsHandler11FreeBuffersEv>:
    5a34:	cf 93       	push	r28
    5a36:	df 93       	push	r29
    5a38:	ec 01       	movw	r28, r24
    5a3a:	8a 81       	ldd	r24, Y+2	; 0x02
    5a3c:	9b 81       	ldd	r25, Y+3	; 0x03
    5a3e:	0e 94 63 3a 	call	0x74c6	; 0x74c6 <free>
    5a42:	8c 81       	ldd	r24, Y+4	; 0x04
    5a44:	9d 81       	ldd	r25, Y+5	; 0x05
    5a46:	0e 94 63 3a 	call	0x74c6	; 0x74c6 <free>
    5a4a:	df 91       	pop	r29
    5a4c:	cf 91       	pop	r28
    5a4e:	08 95       	ret

00005a50 <_ZN16CMBEventsHandler13FillRegDataRqEhh>:
    5a50:	cf 93       	push	r28
    5a52:	df 93       	push	r29
    5a54:	dc 01       	movw	r26, r24
    5a56:	14 96       	adiw	r26, 0x04	; 4
    5a58:	ed 91       	ld	r30, X+
    5a5a:	fc 91       	ld	r31, X
    5a5c:	15 97       	sbiw	r26, 0x05	; 5
    5a5e:	8a ea       	ldi	r24, 0xAA	; 170
    5a60:	80 83       	st	Z, r24
    5a62:	14 96       	adiw	r26, 0x04	; 4
    5a64:	ed 91       	ld	r30, X+
    5a66:	fc 91       	ld	r31, X
    5a68:	15 97       	sbiw	r26, 0x05	; 5
    5a6a:	8c ec       	ldi	r24, 0xCC	; 204
    5a6c:	81 83       	std	Z+1, r24	; 0x01
    5a6e:	14 96       	adiw	r26, 0x04	; 4
    5a70:	ed 91       	ld	r30, X+
    5a72:	fc 91       	ld	r31, X
    5a74:	15 97       	sbiw	r26, 0x05	; 5
    5a76:	85 e0       	ldi	r24, 0x05	; 5
    5a78:	82 83       	std	Z+2, r24	; 0x02
    5a7a:	14 96       	adiw	r26, 0x04	; 4
    5a7c:	ed 91       	ld	r30, X+
    5a7e:	fc 91       	ld	r31, X
    5a80:	15 97       	sbiw	r26, 0x05	; 5
    5a82:	81 e8       	ldi	r24, 0x81	; 129
    5a84:	83 83       	std	Z+3, r24	; 0x03
    5a86:	14 96       	adiw	r26, 0x04	; 4
    5a88:	ed 91       	ld	r30, X+
    5a8a:	fc 91       	ld	r31, X
    5a8c:	15 97       	sbiw	r26, 0x05	; 5
    5a8e:	64 83       	std	Z+4, r22	; 0x04
    5a90:	14 96       	adiw	r26, 0x04	; 4
    5a92:	ed 91       	ld	r30, X+
    5a94:	fc 91       	ld	r31, X
    5a96:	15 97       	sbiw	r26, 0x05	; 5
    5a98:	45 83       	std	Z+5, r20	; 0x05
    5a9a:	86 e0       	ldi	r24, 0x06	; 6
    5a9c:	19 96       	adiw	r26, 0x09	; 9
    5a9e:	8c 93       	st	X, r24
    5aa0:	19 97       	sbiw	r26, 0x09	; 9
    5aa2:	14 96       	adiw	r26, 0x04	; 4
    5aa4:	cd 91       	ld	r28, X+
    5aa6:	dc 91       	ld	r29, X
    5aa8:	15 97       	sbiw	r26, 0x05	; 5
    5aaa:	fe 01       	movw	r30, r28
    5aac:	33 96       	adiw	r30, 0x03	; 3
    5aae:	be 01       	movw	r22, r28
    5ab0:	6a 5f       	subi	r22, 0xFA	; 250
    5ab2:	7f 4f       	sbci	r23, 0xFF	; 255
    5ab4:	2f ef       	ldi	r18, 0xFF	; 255
    5ab6:	3f ef       	ldi	r19, 0xFF	; 255
    5ab8:	91 91       	ld	r25, Z+
    5aba:	29 27       	eor	r18, r25
    5abc:	92 2f       	mov	r25, r18
    5abe:	92 95       	swap	r25
    5ac0:	92 27       	eor	r25, r18
    5ac2:	09 2e       	mov	r0, r25
    5ac4:	96 95       	lsr	r25
    5ac6:	96 95       	lsr	r25
    5ac8:	90 25       	eor	r25, r0
    5aca:	09 2e       	mov	r0, r25
    5acc:	96 95       	lsr	r25
    5ace:	90 25       	eor	r25, r0
    5ad0:	97 70       	andi	r25, 0x07	; 7
    5ad2:	02 2e       	mov	r0, r18
    5ad4:	23 2f       	mov	r18, r19
    5ad6:	96 95       	lsr	r25
    5ad8:	07 94       	ror	r0
    5ada:	97 95       	ror	r25
    5adc:	30 2d       	mov	r19, r0
    5ade:	29 27       	eor	r18, r25
    5ae0:	06 94       	lsr	r0
    5ae2:	97 95       	ror	r25
    5ae4:	30 25       	eor	r19, r0
    5ae6:	29 27       	eor	r18, r25
    5ae8:	e6 17       	cp	r30, r22
    5aea:	f7 07       	cpc	r31, r23
    5aec:	29 f7       	brne	.-54     	; 0x5ab8 <_ZN16CMBEventsHandler13FillRegDataRqEhh+0x68>
    5aee:	3f 83       	std	Y+7, r19	; 0x07
    5af0:	19 96       	adiw	r26, 0x09	; 9
    5af2:	8c 91       	ld	r24, X
    5af4:	19 97       	sbiw	r26, 0x09	; 9
    5af6:	14 96       	adiw	r26, 0x04	; 4
    5af8:	ed 91       	ld	r30, X+
    5afa:	fc 91       	ld	r31, X
    5afc:	15 97       	sbiw	r26, 0x05	; 5
    5afe:	e8 0f       	add	r30, r24
    5b00:	f1 1d       	adc	r31, r1
    5b02:	20 83       	st	Z, r18
    5b04:	48 5f       	subi	r20, 0xF8	; 248
    5b06:	19 96       	adiw	r26, 0x09	; 9
    5b08:	4c 93       	st	X, r20
    5b0a:	df 91       	pop	r29
    5b0c:	cf 91       	pop	r28
    5b0e:	08 95       	ret

00005b10 <_ZN16CMBEventsHandler13FillVarDataRqEjj>:
    5b10:	cf 93       	push	r28
    5b12:	df 93       	push	r29
    5b14:	dc 01       	movw	r26, r24
    5b16:	14 96       	adiw	r26, 0x04	; 4
    5b18:	ed 91       	ld	r30, X+
    5b1a:	fc 91       	ld	r31, X
    5b1c:	15 97       	sbiw	r26, 0x05	; 5
    5b1e:	8a ea       	ldi	r24, 0xAA	; 170
    5b20:	80 83       	st	Z, r24
    5b22:	14 96       	adiw	r26, 0x04	; 4
    5b24:	ed 91       	ld	r30, X+
    5b26:	fc 91       	ld	r31, X
    5b28:	15 97       	sbiw	r26, 0x05	; 5
    5b2a:	8c ec       	ldi	r24, 0xCC	; 204
    5b2c:	81 83       	std	Z+1, r24	; 0x01
    5b2e:	14 96       	adiw	r26, 0x04	; 4
    5b30:	ed 91       	ld	r30, X+
    5b32:	fc 91       	ld	r31, X
    5b34:	15 97       	sbiw	r26, 0x05	; 5
    5b36:	86 e0       	ldi	r24, 0x06	; 6
    5b38:	82 83       	std	Z+2, r24	; 0x02
    5b3a:	14 96       	adiw	r26, 0x04	; 4
    5b3c:	ed 91       	ld	r30, X+
    5b3e:	fc 91       	ld	r31, X
    5b40:	15 97       	sbiw	r26, 0x05	; 5
    5b42:	83 e8       	ldi	r24, 0x83	; 131
    5b44:	83 83       	std	Z+3, r24	; 0x03
    5b46:	14 96       	adiw	r26, 0x04	; 4
    5b48:	ed 91       	ld	r30, X+
    5b4a:	fc 91       	ld	r31, X
    5b4c:	15 97       	sbiw	r26, 0x05	; 5
    5b4e:	74 83       	std	Z+4, r23	; 0x04
    5b50:	14 96       	adiw	r26, 0x04	; 4
    5b52:	ed 91       	ld	r30, X+
    5b54:	fc 91       	ld	r31, X
    5b56:	15 97       	sbiw	r26, 0x05	; 5
    5b58:	65 83       	std	Z+5, r22	; 0x05
    5b5a:	14 96       	adiw	r26, 0x04	; 4
    5b5c:	ed 91       	ld	r30, X+
    5b5e:	fc 91       	ld	r31, X
    5b60:	15 97       	sbiw	r26, 0x05	; 5
    5b62:	46 83       	std	Z+6, r20	; 0x06
    5b64:	87 e0       	ldi	r24, 0x07	; 7
    5b66:	19 96       	adiw	r26, 0x09	; 9
    5b68:	8c 93       	st	X, r24
    5b6a:	19 97       	sbiw	r26, 0x09	; 9
    5b6c:	14 96       	adiw	r26, 0x04	; 4
    5b6e:	cd 91       	ld	r28, X+
    5b70:	dc 91       	ld	r29, X
    5b72:	15 97       	sbiw	r26, 0x05	; 5
    5b74:	fe 01       	movw	r30, r28
    5b76:	33 96       	adiw	r30, 0x03	; 3
    5b78:	ae 01       	movw	r20, r28
    5b7a:	49 5f       	subi	r20, 0xF9	; 249
    5b7c:	5f 4f       	sbci	r21, 0xFF	; 255
    5b7e:	2f ef       	ldi	r18, 0xFF	; 255
    5b80:	3f ef       	ldi	r19, 0xFF	; 255
    5b82:	91 91       	ld	r25, Z+
    5b84:	29 27       	eor	r18, r25
    5b86:	92 2f       	mov	r25, r18
    5b88:	92 95       	swap	r25
    5b8a:	92 27       	eor	r25, r18
    5b8c:	09 2e       	mov	r0, r25
    5b8e:	96 95       	lsr	r25
    5b90:	96 95       	lsr	r25
    5b92:	90 25       	eor	r25, r0
    5b94:	09 2e       	mov	r0, r25
    5b96:	96 95       	lsr	r25
    5b98:	90 25       	eor	r25, r0
    5b9a:	97 70       	andi	r25, 0x07	; 7
    5b9c:	02 2e       	mov	r0, r18
    5b9e:	23 2f       	mov	r18, r19
    5ba0:	96 95       	lsr	r25
    5ba2:	07 94       	ror	r0
    5ba4:	97 95       	ror	r25
    5ba6:	30 2d       	mov	r19, r0
    5ba8:	29 27       	eor	r18, r25
    5baa:	06 94       	lsr	r0
    5bac:	97 95       	ror	r25
    5bae:	30 25       	eor	r19, r0
    5bb0:	29 27       	eor	r18, r25
    5bb2:	e4 17       	cp	r30, r20
    5bb4:	f5 07       	cpc	r31, r21
    5bb6:	29 f7       	brne	.-54     	; 0x5b82 <_ZN16CMBEventsHandler13FillVarDataRqEjj+0x72>
    5bb8:	38 87       	std	Y+8, r19	; 0x08
    5bba:	19 96       	adiw	r26, 0x09	; 9
    5bbc:	8c 91       	ld	r24, X
    5bbe:	19 97       	sbiw	r26, 0x09	; 9
    5bc0:	14 96       	adiw	r26, 0x04	; 4
    5bc2:	ed 91       	ld	r30, X+
    5bc4:	fc 91       	ld	r31, X
    5bc6:	15 97       	sbiw	r26, 0x05	; 5
    5bc8:	e8 0f       	add	r30, r24
    5bca:	f1 1d       	adc	r31, r1
    5bcc:	20 83       	st	Z, r18
    5bce:	89 e0       	ldi	r24, 0x09	; 9
    5bd0:	19 96       	adiw	r26, 0x09	; 9
    5bd2:	8c 93       	st	X, r24
    5bd4:	df 91       	pop	r29
    5bd6:	cf 91       	pop	r28
    5bd8:	08 95       	ret

00005bda <_ZN16CMBEventsHandler13FillRegDataTxEhPhh>:
    5bda:	cf 93       	push	r28
    5bdc:	df 93       	push	r29
    5bde:	ec 01       	movw	r28, r24
    5be0:	ec 81       	ldd	r30, Y+4	; 0x04
    5be2:	fd 81       	ldd	r31, Y+5	; 0x05
    5be4:	8a ea       	ldi	r24, 0xAA	; 170
    5be6:	80 83       	st	Z, r24
    5be8:	ec 81       	ldd	r30, Y+4	; 0x04
    5bea:	fd 81       	ldd	r31, Y+5	; 0x05
    5bec:	8c ec       	ldi	r24, 0xCC	; 204
    5bee:	81 83       	std	Z+1, r24	; 0x01
    5bf0:	ec 81       	ldd	r30, Y+4	; 0x04
    5bf2:	fd 81       	ldd	r31, Y+5	; 0x05
    5bf4:	84 e0       	ldi	r24, 0x04	; 4
    5bf6:	82 0f       	add	r24, r18
    5bf8:	82 83       	std	Z+2, r24	; 0x02
    5bfa:	ec 81       	ldd	r30, Y+4	; 0x04
    5bfc:	fd 81       	ldd	r31, Y+5	; 0x05
    5bfe:	80 e8       	ldi	r24, 0x80	; 128
    5c00:	83 83       	std	Z+3, r24	; 0x03
    5c02:	ec 81       	ldd	r30, Y+4	; 0x04
    5c04:	fd 81       	ldd	r31, Y+5	; 0x05
    5c06:	64 83       	std	Z+4, r22	; 0x04
    5c08:	85 e0       	ldi	r24, 0x05	; 5
    5c0a:	82 0f       	add	r24, r18
    5c0c:	89 87       	std	Y+9, r24	; 0x09
    5c0e:	82 2f       	mov	r24, r18
    5c10:	90 e0       	ldi	r25, 0x00	; 0
    5c12:	00 97       	sbiw	r24, 0x00	; 0
    5c14:	81 f0       	breq	.+32     	; 0x5c36 <_ZN16CMBEventsHandler13FillRegDataTxEhPhh+0x5c>
    5c16:	da 01       	movw	r26, r20
    5c18:	48 0f       	add	r20, r24
    5c1a:	59 1f       	adc	r21, r25
    5c1c:	65 e0       	ldi	r22, 0x05	; 5
    5c1e:	70 e0       	ldi	r23, 0x00	; 0
    5c20:	8d 91       	ld	r24, X+
    5c22:	ec 81       	ldd	r30, Y+4	; 0x04
    5c24:	fd 81       	ldd	r31, Y+5	; 0x05
    5c26:	e6 0f       	add	r30, r22
    5c28:	f7 1f       	adc	r31, r23
    5c2a:	80 83       	st	Z, r24
    5c2c:	6f 5f       	subi	r22, 0xFF	; 255
    5c2e:	7f 4f       	sbci	r23, 0xFF	; 255
    5c30:	a4 17       	cp	r26, r20
    5c32:	b5 07       	cpc	r27, r21
    5c34:	a9 f7       	brne	.-22     	; 0x5c20 <_ZN16CMBEventsHandler13FillRegDataTxEhPhh+0x46>
    5c36:	a9 85       	ldd	r26, Y+9	; 0x09
    5c38:	b0 e0       	ldi	r27, 0x00	; 0
    5c3a:	a4 30       	cpi	r26, 0x04	; 4
    5c3c:	b1 05       	cpc	r27, r1
    5c3e:	28 f1       	brcs	.+74     	; 0x5c8a <_ZN16CMBEventsHandler13FillRegDataTxEhPhh+0xb0>
    5c40:	ec 81       	ldd	r30, Y+4	; 0x04
    5c42:	fd 81       	ldd	r31, Y+5	; 0x05
    5c44:	33 96       	adiw	r30, 0x03	; 3
    5c46:	63 e0       	ldi	r22, 0x03	; 3
    5c48:	70 e0       	ldi	r23, 0x00	; 0
    5c4a:	4f ef       	ldi	r20, 0xFF	; 255
    5c4c:	5f ef       	ldi	r21, 0xFF	; 255
    5c4e:	91 91       	ld	r25, Z+
    5c50:	49 27       	eor	r20, r25
    5c52:	94 2f       	mov	r25, r20
    5c54:	92 95       	swap	r25
    5c56:	94 27       	eor	r25, r20
    5c58:	09 2e       	mov	r0, r25
    5c5a:	96 95       	lsr	r25
    5c5c:	96 95       	lsr	r25
    5c5e:	90 25       	eor	r25, r0
    5c60:	09 2e       	mov	r0, r25
    5c62:	96 95       	lsr	r25
    5c64:	90 25       	eor	r25, r0
    5c66:	97 70       	andi	r25, 0x07	; 7
    5c68:	04 2e       	mov	r0, r20
    5c6a:	45 2f       	mov	r20, r21
    5c6c:	96 95       	lsr	r25
    5c6e:	07 94       	ror	r0
    5c70:	97 95       	ror	r25
    5c72:	50 2d       	mov	r21, r0
    5c74:	49 27       	eor	r20, r25
    5c76:	06 94       	lsr	r0
    5c78:	97 95       	ror	r25
    5c7a:	50 25       	eor	r21, r0
    5c7c:	49 27       	eor	r20, r25
    5c7e:	6f 5f       	subi	r22, 0xFF	; 255
    5c80:	7f 4f       	sbci	r23, 0xFF	; 255
    5c82:	6a 17       	cp	r22, r26
    5c84:	7b 07       	cpc	r23, r27
    5c86:	18 f3       	brcs	.-58     	; 0x5c4e <_ZN16CMBEventsHandler13FillRegDataTxEhPhh+0x74>
    5c88:	02 c0       	rjmp	.+4      	; 0x5c8e <_ZN16CMBEventsHandler13FillRegDataTxEhPhh+0xb4>
    5c8a:	4f ef       	ldi	r20, 0xFF	; 255
    5c8c:	5f ef       	ldi	r21, 0xFF	; 255
    5c8e:	8c 81       	ldd	r24, Y+4	; 0x04
    5c90:	9d 81       	ldd	r25, Y+5	; 0x05
    5c92:	a8 0f       	add	r26, r24
    5c94:	b9 1f       	adc	r27, r25
    5c96:	11 96       	adiw	r26, 0x01	; 1
    5c98:	5c 93       	st	X, r21
    5c9a:	89 85       	ldd	r24, Y+9	; 0x09
    5c9c:	ec 81       	ldd	r30, Y+4	; 0x04
    5c9e:	fd 81       	ldd	r31, Y+5	; 0x05
    5ca0:	e8 0f       	add	r30, r24
    5ca2:	f1 1d       	adc	r31, r1
    5ca4:	40 83       	st	Z, r20
    5ca6:	29 5f       	subi	r18, 0xF9	; 249
    5ca8:	29 87       	std	Y+9, r18	; 0x09
    5caa:	df 91       	pop	r29
    5cac:	cf 91       	pop	r28
    5cae:	08 95       	ret

00005cb0 <_ZN16CMBEventsHandlerD1Ev>:

CMBEventsHandler::~CMBEventsHandler()
    5cb0:	08 95       	ret

00005cb2 <_ZN9CMBSender18OnVariableReceivedEjPjj>:
	return Complete;
}

void CMBSender::StopMODBUSTransmitter()
{
	modbus_transmitter_state = tx_Idle;
    5cb2:	dc 01       	movw	r26, r24
    5cb4:	5b 96       	adiw	r26, 0x1b	; 27
    5cb6:	8d 91       	ld	r24, X+
    5cb8:	9c 91       	ld	r25, X
    5cba:	5c 97       	sbiw	r26, 0x1c	; 28
    5cbc:	00 97       	sbiw	r24, 0x00	; 0
    5cbe:	39 f0       	breq	.+14     	; 0x5cce <_ZN9CMBSender18OnVariableReceivedEjPjj+0x1c>
    5cc0:	dc 01       	movw	r26, r24
    5cc2:	ed 91       	ld	r30, X+
    5cc4:	fc 91       	ld	r31, X
    5cc6:	02 80       	ldd	r0, Z+2	; 0x02
    5cc8:	f3 81       	ldd	r31, Z+3	; 0x03
    5cca:	e0 2d       	mov	r30, r0
    5ccc:	19 95       	eicall
    5cce:	08 95       	ret

00005cd0 <_ZN9CMBSender18OnRegisterReceivedEhPhh>:
    5cd0:	dc 01       	movw	r26, r24
    5cd2:	5b 96       	adiw	r26, 0x1b	; 27
    5cd4:	8d 91       	ld	r24, X+
    5cd6:	9c 91       	ld	r25, X
    5cd8:	5c 97       	sbiw	r26, 0x1c	; 28
    5cda:	00 97       	sbiw	r24, 0x00	; 0
    5cdc:	39 f0       	breq	.+14     	; 0x5cec <_ZN9CMBSender18OnRegisterReceivedEhPhh+0x1c>
    5cde:	dc 01       	movw	r26, r24
    5ce0:	ed 91       	ld	r30, X+
    5ce2:	fc 91       	ld	r31, X
    5ce4:	04 80       	ldd	r0, Z+4	; 0x04
    5ce6:	f5 81       	ldd	r31, Z+5	; 0x05
    5ce8:	e0 2d       	mov	r30, r0
    5cea:	19 95       	eicall
    5cec:	08 95       	ret

00005cee <_ZN9CMBSenderC1Ev>:
    5cee:	2a ec       	ldi	r18, 0xCA	; 202
    5cf0:	32 e2       	ldi	r19, 0x22	; 34
    5cf2:	fc 01       	movw	r30, r24
    5cf4:	20 83       	st	Z, r18
    5cf6:	31 83       	std	Z+1, r19	; 0x01
    5cf8:	08 95       	ret

00005cfa <_ZN9CMBSender10InitializeEP7CTimer1P6CUSARTP16CMBEventsHandlerjjj>:
    5cfa:	6f 92       	push	r6
    5cfc:	7f 92       	push	r7
    5cfe:	8f 92       	push	r8
    5d00:	9f 92       	push	r9
    5d02:	af 92       	push	r10
    5d04:	bf 92       	push	r11
    5d06:	cf 92       	push	r12
    5d08:	df 92       	push	r13
    5d0a:	ef 92       	push	r14
    5d0c:	ff 92       	push	r15
    5d0e:	0f 93       	push	r16
    5d10:	1f 93       	push	r17
    5d12:	cf 93       	push	r28
    5d14:	df 93       	push	r29
    5d16:	ec 01       	movw	r28, r24
    5d18:	4b 01       	movw	r8, r22
    5d1a:	5a 01       	movw	r10, r20
    5d1c:	39 01       	movw	r6, r18
    5d1e:	c8 01       	movw	r24, r16
    5d20:	0f 83       	std	Y+7, r16	; 0x07
    5d22:	18 87       	std	Y+8, r17	; 0x08
    5d24:	ea 86       	std	Y+10, r14	; 0x0a
    5d26:	fb 86       	std	Y+11, r15	; 0x0b
    5d28:	0e 94 ce 39 	call	0x739c	; 0x739c <malloc>
    5d2c:	8a 83       	std	Y+2, r24	; 0x02
    5d2e:	9b 83       	std	Y+3, r25	; 0x03
    5d30:	c7 01       	movw	r24, r14
    5d32:	0e 94 ce 39 	call	0x739c	; 0x739c <malloc>
    5d36:	8c 83       	std	Y+4, r24	; 0x04
    5d38:	9d 83       	std	Y+5, r25	; 0x05
    5d3a:	19 8e       	std	Y+25, r1	; 0x19
    5d3c:	19 86       	std	Y+9, r1	; 0x09
    5d3e:	19 8a       	std	Y+17, r1	; 0x11
    5d40:	1e 82       	std	Y+6, r1	; 0x06
    5d42:	1c 8a       	std	Y+20, r1	; 0x14
    5d44:	1d 8a       	std	Y+21, r1	; 0x15
    5d46:	8f ef       	ldi	r24, 0xFF	; 255
    5d48:	9f ef       	ldi	r25, 0xFF	; 255
    5d4a:	8e 8b       	std	Y+22, r24	; 0x16
    5d4c:	9f 8b       	std	Y+23, r25	; 0x17
    5d4e:	87 e0       	ldi	r24, 0x07	; 7
    5d50:	88 8b       	std	Y+16, r24	; 0x10
    5d52:	82 e0       	ldi	r24, 0x02	; 2
    5d54:	88 8f       	std	Y+24, r24	; 0x18
    5d56:	1a 8e       	std	Y+26, r1	; 0x1a
    5d58:	ca 8a       	std	Y+18, r12	; 0x12
    5d5a:	db 8a       	std	Y+19, r13	; 0x13
    5d5c:	ac 86       	std	Y+12, r10	; 0x0c
    5d5e:	bd 86       	std	Y+13, r11	; 0x0d
    5d60:	d5 01       	movw	r26, r10
    5d62:	ed 91       	ld	r30, X+
    5d64:	fc 91       	ld	r31, X
    5d66:	04 84       	ldd	r0, Z+12	; 0x0c
    5d68:	f5 85       	ldd	r31, Z+13	; 0x0d
    5d6a:	e0 2d       	mov	r30, r0
    5d6c:	4f eb       	ldi	r20, 0xBF	; 191
    5d6e:	5f e2       	ldi	r21, 0x2F	; 47
    5d70:	be 01       	movw	r22, r28
    5d72:	c5 01       	movw	r24, r10
    5d74:	19 95       	eicall
    5d76:	d5 01       	movw	r26, r10
    5d78:	ed 91       	ld	r30, X+
    5d7a:	fc 91       	ld	r31, X
    5d7c:	06 84       	ldd	r0, Z+14	; 0x0e
    5d7e:	f7 85       	ldd	r31, Z+15	; 0x0f
    5d80:	e0 2d       	mov	r30, r0
    5d82:	4b e4       	ldi	r20, 0x4B	; 75
    5d84:	50 e3       	ldi	r21, 0x30	; 48
    5d86:	be 01       	movw	r22, r28
    5d88:	c5 01       	movw	r24, r10
    5d8a:	19 95       	eicall
    5d8c:	61 14       	cp	r6, r1
    5d8e:	71 04       	cpc	r7, r1
    5d90:	19 f0       	breq	.+6      	; 0x5d98 <_ZN9CMBSender10InitializeEP7CTimer1P6CUSARTP16CMBEventsHandlerjjj+0x9e>
    5d92:	6b 8e       	std	Y+27, r6	; 0x1b
    5d94:	7c 8e       	std	Y+28, r7	; 0x1c
    5d96:	02 c0       	rjmp	.+4      	; 0x5d9c <_ZN9CMBSender10InitializeEP7CTimer1P6CUSARTP16CMBEventsHandlerjjj+0xa2>
    5d98:	cb 8f       	std	Y+27, r28	; 0x1b
    5d9a:	dc 8f       	std	Y+28, r29	; 0x1c
    5d9c:	8e 86       	std	Y+14, r8	; 0x0e
    5d9e:	9f 86       	std	Y+15, r9	; 0x0f
    5da0:	81 14       	cp	r8, r1
    5da2:	91 04       	cpc	r9, r1
    5da4:	61 f0       	breq	.+24     	; 0x5dbe <_ZN9CMBSender10InitializeEP7CTimer1P6CUSARTP16CMBEventsHandlerjjj+0xc4>
    5da6:	d4 01       	movw	r26, r8
    5da8:	ed 91       	ld	r30, X+
    5daa:	fc 91       	ld	r31, X
    5dac:	02 88       	ldd	r0, Z+18	; 0x12
    5dae:	f3 89       	ldd	r31, Z+19	; 0x13
    5db0:	e0 2d       	mov	r30, r0
    5db2:	21 e0       	ldi	r18, 0x01	; 1
    5db4:	ae 01       	movw	r20, r28
    5db6:	66 ee       	ldi	r22, 0xE6	; 230
    5db8:	7f e2       	ldi	r23, 0x2F	; 47
    5dba:	c4 01       	movw	r24, r8
    5dbc:	19 95       	eicall
    5dbe:	df 91       	pop	r29
    5dc0:	cf 91       	pop	r28
    5dc2:	1f 91       	pop	r17
    5dc4:	0f 91       	pop	r16
    5dc6:	ff 90       	pop	r15
    5dc8:	ef 90       	pop	r14
    5dca:	df 90       	pop	r13
    5dcc:	cf 90       	pop	r12
    5dce:	bf 90       	pop	r11
    5dd0:	af 90       	pop	r10
    5dd2:	9f 90       	pop	r9
    5dd4:	8f 90       	pop	r8
    5dd6:	7f 90       	pop	r7
    5dd8:	6f 90       	pop	r6
    5dda:	08 95       	ret

00005ddc <_ZN9CMBSenderD1Ev>:
    5ddc:	2a ec       	ldi	r18, 0xCA	; 202
    5dde:	32 e2       	ldi	r19, 0x22	; 34
    5de0:	fc 01       	movw	r30, r24
    5de2:	20 83       	st	Z, r18
    5de4:	31 83       	std	Z+1, r19	; 0x01
    5de6:	0e 94 58 2e 	call	0x5cb0	; 0x5cb0 <_ZN16CMBEventsHandlerD1Ev>
    5dea:	08 95       	ret

00005dec <_ZN9CMBSender13OnReceiveByteEh>:
    5dec:	cf 93       	push	r28
    5dee:	df 93       	push	r29
    5df0:	dc 01       	movw	r26, r24
    5df2:	96 2f       	mov	r25, r22
    5df4:	50 96       	adiw	r26, 0x10	; 16
    5df6:	4c 91       	ld	r20, X
    5df8:	50 97       	sbiw	r26, 0x10	; 16
    5dfa:	50 e0       	ldi	r21, 0x00	; 0
    5dfc:	4b 30       	cpi	r20, 0x0B	; 11
    5dfe:	51 05       	cpc	r21, r1
    5e00:	08 f0       	brcs	.+2      	; 0x5e04 <_ZN9CMBSender13OnReceiveByteEh+0x18>
    5e02:	ba c0       	rjmp	.+372    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5e04:	fa 01       	movw	r30, r20
    5e06:	88 27       	eor	r24, r24
    5e08:	e0 5c       	subi	r30, 0xC0	; 192
    5e0a:	fe 4f       	sbci	r31, 0xFE	; 254
    5e0c:	8f 4f       	sbci	r24, 0xFF	; 255
    5e0e:	0c 94 ac 39 	jmp	0x7358	; 0x7358 <__tablejump2__>
    5e12:	9a 3a       	cpi	r25, 0xAA	; 170
    5e14:	21 f4       	brne	.+8      	; 0x5e1e <_ZN9CMBSender13OnReceiveByteEh+0x32>
    5e16:	82 e0       	ldi	r24, 0x02	; 2
    5e18:	50 96       	adiw	r26, 0x10	; 16
    5e1a:	8c 93       	st	X, r24
    5e1c:	ad c0       	rjmp	.+346    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5e1e:	81 e0       	ldi	r24, 0x01	; 1
    5e20:	50 96       	adiw	r26, 0x10	; 16
    5e22:	8c 93       	st	X, r24
    5e24:	a9 c0       	rjmp	.+338    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5e26:	9c 3c       	cpi	r25, 0xCC	; 204
    5e28:	21 f4       	brne	.+8      	; 0x5e32 <_ZN9CMBSender13OnReceiveByteEh+0x46>
    5e2a:	83 e0       	ldi	r24, 0x03	; 3
    5e2c:	50 96       	adiw	r26, 0x10	; 16
    5e2e:	8c 93       	st	X, r24
    5e30:	a3 c0       	rjmp	.+326    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5e32:	81 e0       	ldi	r24, 0x01	; 1
    5e34:	50 96       	adiw	r26, 0x10	; 16
    5e36:	8c 93       	st	X, r24
    5e38:	9f c0       	rjmp	.+318    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5e3a:	16 96       	adiw	r26, 0x06	; 6
    5e3c:	9c 93       	st	X, r25
    5e3e:	16 97       	sbiw	r26, 0x06	; 6
    5e40:	51 96       	adiw	r26, 0x11	; 17
    5e42:	1c 92       	st	X, r1
    5e44:	51 97       	sbiw	r26, 0x11	; 17
    5e46:	8f ef       	ldi	r24, 0xFF	; 255
    5e48:	9f ef       	ldi	r25, 0xFF	; 255
    5e4a:	56 96       	adiw	r26, 0x16	; 22
    5e4c:	8d 93       	st	X+, r24
    5e4e:	9c 93       	st	X, r25
    5e50:	57 97       	sbiw	r26, 0x17	; 23
    5e52:	84 e0       	ldi	r24, 0x04	; 4
    5e54:	50 96       	adiw	r26, 0x10	; 16
    5e56:	8c 93       	st	X, r24
    5e58:	8f c0       	rjmp	.+286    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5e5a:	51 96       	adiw	r26, 0x11	; 17
    5e5c:	8c 91       	ld	r24, X
    5e5e:	51 97       	sbiw	r26, 0x11	; 17
    5e60:	12 96       	adiw	r26, 0x02	; 2
    5e62:	ed 91       	ld	r30, X+
    5e64:	fc 91       	ld	r31, X
    5e66:	13 97       	sbiw	r26, 0x03	; 3
    5e68:	e8 0f       	add	r30, r24
    5e6a:	f1 1d       	adc	r31, r1
    5e6c:	90 83       	st	Z, r25
    5e6e:	51 96       	adiw	r26, 0x11	; 17
    5e70:	2c 91       	ld	r18, X
    5e72:	51 97       	sbiw	r26, 0x11	; 17
    5e74:	30 e0       	ldi	r19, 0x00	; 0
    5e76:	17 96       	adiw	r26, 0x07	; 7
    5e78:	4d 91       	ld	r20, X+
    5e7a:	5c 91       	ld	r21, X
    5e7c:	18 97       	sbiw	r26, 0x08	; 8
    5e7e:	42 17       	cp	r20, r18
    5e80:	53 07       	cpc	r21, r19
    5e82:	20 f4       	brcc	.+8      	; 0x5e8c <_ZN9CMBSender13OnReceiveByteEh+0xa0>
    5e84:	89 e0       	ldi	r24, 0x09	; 9
    5e86:	50 96       	adiw	r26, 0x10	; 16
    5e88:	8c 93       	st	X, r24
    5e8a:	76 c0       	rjmp	.+236    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5e8c:	56 96       	adiw	r26, 0x16	; 22
    5e8e:	2d 91       	ld	r18, X+
    5e90:	3c 91       	ld	r19, X
    5e92:	57 97       	sbiw	r26, 0x17	; 23
    5e94:	29 27       	eor	r18, r25
    5e96:	62 2f       	mov	r22, r18
    5e98:	62 95       	swap	r22
    5e9a:	62 27       	eor	r22, r18
    5e9c:	06 2e       	mov	r0, r22
    5e9e:	66 95       	lsr	r22
    5ea0:	66 95       	lsr	r22
    5ea2:	60 25       	eor	r22, r0
    5ea4:	06 2e       	mov	r0, r22
    5ea6:	66 95       	lsr	r22
    5ea8:	60 25       	eor	r22, r0
    5eaa:	67 70       	andi	r22, 0x07	; 7
    5eac:	02 2e       	mov	r0, r18
    5eae:	23 2f       	mov	r18, r19
    5eb0:	66 95       	lsr	r22
    5eb2:	07 94       	ror	r0
    5eb4:	67 95       	ror	r22
    5eb6:	30 2d       	mov	r19, r0
    5eb8:	26 27       	eor	r18, r22
    5eba:	06 94       	lsr	r0
    5ebc:	67 95       	ror	r22
    5ebe:	30 25       	eor	r19, r0
    5ec0:	26 27       	eor	r18, r22
    5ec2:	56 96       	adiw	r26, 0x16	; 22
    5ec4:	2d 93       	st	X+, r18
    5ec6:	3c 93       	st	X, r19
    5ec8:	57 97       	sbiw	r26, 0x17	; 23
    5eca:	51 96       	adiw	r26, 0x11	; 17
    5ecc:	8c 91       	ld	r24, X
    5ece:	51 97       	sbiw	r26, 0x11	; 17
    5ed0:	8f 5f       	subi	r24, 0xFF	; 255
    5ed2:	51 96       	adiw	r26, 0x11	; 17
    5ed4:	8c 93       	st	X, r24
    5ed6:	51 97       	sbiw	r26, 0x11	; 17
    5ed8:	51 96       	adiw	r26, 0x11	; 17
    5eda:	2c 91       	ld	r18, X
    5edc:	51 97       	sbiw	r26, 0x11	; 17
    5ede:	30 e0       	ldi	r19, 0x00	; 0
    5ee0:	16 96       	adiw	r26, 0x06	; 6
    5ee2:	8c 91       	ld	r24, X
    5ee4:	16 97       	sbiw	r26, 0x06	; 6
    5ee6:	90 e0       	ldi	r25, 0x00	; 0
    5ee8:	02 97       	sbiw	r24, 0x02	; 2
    5eea:	28 17       	cp	r18, r24
    5eec:	39 07       	cpc	r19, r25
    5eee:	09 f0       	breq	.+2      	; 0x5ef2 <_ZN9CMBSender13OnReceiveByteEh+0x106>
    5ef0:	43 c0       	rjmp	.+134    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5ef2:	85 e0       	ldi	r24, 0x05	; 5
    5ef4:	50 96       	adiw	r26, 0x10	; 16
    5ef6:	8c 93       	st	X, r24
    5ef8:	3f c0       	rjmp	.+126    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5efa:	69 2f       	mov	r22, r25
    5efc:	70 e0       	ldi	r23, 0x00	; 0
    5efe:	54 96       	adiw	r26, 0x14	; 20
    5f00:	6d 93       	st	X+, r22
    5f02:	7c 93       	st	X, r23
    5f04:	55 97       	sbiw	r26, 0x15	; 21
    5f06:	86 e0       	ldi	r24, 0x06	; 6
    5f08:	50 96       	adiw	r26, 0x10	; 16
    5f0a:	8c 93       	st	X, r24
    5f0c:	35 c0       	rjmp	.+106    	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5f0e:	54 96       	adiw	r26, 0x14	; 20
    5f10:	2d 91       	ld	r18, X+
    5f12:	3c 91       	ld	r19, X
    5f14:	55 97       	sbiw	r26, 0x15	; 21
    5f16:	a9 01       	movw	r20, r18
    5f18:	59 2b       	or	r21, r25
    5f1a:	54 96       	adiw	r26, 0x14	; 20
    5f1c:	4d 93       	st	X+, r20
    5f1e:	5c 93       	st	X, r21
    5f20:	55 97       	sbiw	r26, 0x15	; 21
    5f22:	56 96       	adiw	r26, 0x16	; 22
    5f24:	2d 91       	ld	r18, X+
    5f26:	3c 91       	ld	r19, X
    5f28:	57 97       	sbiw	r26, 0x17	; 23
    5f2a:	42 17       	cp	r20, r18
    5f2c:	53 07       	cpc	r21, r19
    5f2e:	f1 f4       	brne	.+60     	; 0x5f6c <_ZN9CMBSender13OnReceiveByteEh+0x180>
    5f30:	ed 01       	movw	r28, r26
    5f32:	88 e0       	ldi	r24, 0x08	; 8
    5f34:	88 8b       	std	Y+16, r24	; 0x10
    5f36:	e8 81       	ld	r30, Y
    5f38:	f9 81       	ldd	r31, Y+1	; 0x01
    5f3a:	4e 81       	ldd	r20, Y+6	; 0x06
    5f3c:	50 e0       	ldi	r21, 0x00	; 0
    5f3e:	6a 81       	ldd	r22, Y+2	; 0x02
    5f40:	7b 81       	ldd	r23, Y+3	; 0x03
    5f42:	01 90       	ld	r0, Z+
    5f44:	f0 81       	ld	r31, Z
    5f46:	e0 2d       	mov	r30, r0
    5f48:	cd 01       	movw	r24, r26
    5f4a:	19 95       	eicall
    5f4c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5f4e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5f50:	00 97       	sbiw	r24, 0x00	; 0
    5f52:	91 f0       	breq	.+36     	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5f54:	dc 01       	movw	r26, r24
    5f56:	ed 91       	ld	r30, X+
    5f58:	fc 91       	ld	r31, X
    5f5a:	4e 81       	ldd	r20, Y+6	; 0x06
    5f5c:	50 e0       	ldi	r21, 0x00	; 0
    5f5e:	6a 81       	ldd	r22, Y+2	; 0x02
    5f60:	7b 81       	ldd	r23, Y+3	; 0x03
    5f62:	01 90       	ld	r0, Z+
    5f64:	f0 81       	ld	r31, Z
    5f66:	e0 2d       	mov	r30, r0
    5f68:	19 95       	eicall
    5f6a:	06 c0       	rjmp	.+12     	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5f6c:	89 e0       	ldi	r24, 0x09	; 9
    5f6e:	50 96       	adiw	r26, 0x10	; 16
    5f70:	8c 93       	st	X, r24
    5f72:	02 c0       	rjmp	.+4      	; 0x5f78 <_ZN9CMBSender13OnReceiveByteEh+0x18c>
    5f74:	5a 96       	adiw	r26, 0x1a	; 26
    5f76:	1c 92       	st	X, r1
    5f78:	df 91       	pop	r29
    5f7a:	cf 91       	pop	r28
    5f7c:	08 95       	ret

00005f7e <_ZN9CMBSender18OnUSARTRxInterruptEPv>:
    5f7e:	cf 93       	push	r28
    5f80:	df 93       	push	r29
    5f82:	ec 01       	movw	r28, r24
    5f84:	8c 85       	ldd	r24, Y+12	; 0x0c
    5f86:	9d 85       	ldd	r25, Y+13	; 0x0d
    5f88:	dc 01       	movw	r26, r24
    5f8a:	ed 91       	ld	r30, X+
    5f8c:	fc 91       	ld	r31, X
    5f8e:	02 80       	ldd	r0, Z+2	; 0x02
    5f90:	f3 81       	ldd	r31, Z+3	; 0x03
    5f92:	e0 2d       	mov	r30, r0
    5f94:	19 95       	eicall
    5f96:	68 2f       	mov	r22, r24
    5f98:	ce 01       	movw	r24, r28
    5f9a:	0e 94 f6 2e 	call	0x5dec	; 0x5dec <_ZN9CMBSender13OnReceiveByteEh>
    5f9e:	df 91       	pop	r29
    5fa0:	cf 91       	pop	r28
    5fa2:	08 95       	ret

00005fa4 <_ZN9CMBSender9OnTimeoutEv>:
    5fa4:	cf 93       	push	r28
    5fa6:	df 93       	push	r29
    5fa8:	ec 01       	movw	r28, r24
    5faa:	8e 85       	ldd	r24, Y+14	; 0x0e
    5fac:	9f 85       	ldd	r25, Y+15	; 0x0f
    5fae:	dc 01       	movw	r26, r24
    5fb0:	ed 91       	ld	r30, X+
    5fb2:	fc 91       	ld	r31, X
    5fb4:	04 80       	ldd	r0, Z+4	; 0x04
    5fb6:	f5 81       	ldd	r31, Z+5	; 0x05
    5fb8:	e0 2d       	mov	r30, r0
    5fba:	19 95       	eicall
    5fbc:	88 89       	ldd	r24, Y+16	; 0x10
    5fbe:	88 30       	cpi	r24, 0x08	; 8
    5fc0:	11 f0       	breq	.+4      	; 0x5fc6 <_ZN9CMBSender9OnTimeoutEv+0x22>
    5fc2:	8a e0       	ldi	r24, 0x0A	; 10
    5fc4:	88 8b       	std	Y+16, r24	; 0x10
    5fc6:	df 91       	pop	r29
    5fc8:	cf 91       	pop	r28
    5fca:	08 95       	ret

00005fcc <_ZN9CMBSender18OnTimeoutInterruptEPv>:
    5fcc:	0e 94 d2 2f 	call	0x5fa4	; 0x5fa4 <_ZN9CMBSender9OnTimeoutEv>
    5fd0:	08 95       	ret

00005fd2 <_ZN9CMBSender19StartMODBUSListenerEv>:
    5fd2:	cf 93       	push	r28
    5fd4:	df 93       	push	r29
    5fd6:	fc 01       	movw	r30, r24
    5fd8:	11 8a       	std	Z+17, r1	; 0x11
    5fda:	16 82       	std	Z+6, r1	; 0x06
    5fdc:	14 8a       	std	Z+20, r1	; 0x14
    5fde:	15 8a       	std	Z+21, r1	; 0x15
    5fe0:	16 8a       	std	Z+22, r1	; 0x16
    5fe2:	17 8a       	std	Z+23, r1	; 0x17
    5fe4:	10 8a       	std	Z+16, r1	; 0x10
    5fe6:	86 85       	ldd	r24, Z+14	; 0x0e
    5fe8:	97 85       	ldd	r25, Z+15	; 0x0f
    5fea:	ec 01       	movw	r28, r24
    5fec:	a8 81       	ld	r26, Y
    5fee:	b9 81       	ldd	r27, Y+1	; 0x01
    5ff0:	62 89       	ldd	r22, Z+18	; 0x12
    5ff2:	73 89       	ldd	r23, Z+19	; 0x13
    5ff4:	12 96       	adiw	r26, 0x02	; 2
    5ff6:	ed 91       	ld	r30, X+
    5ff8:	fc 91       	ld	r31, X
    5ffa:	13 97       	sbiw	r26, 0x03	; 3
    5ffc:	19 95       	eicall
    5ffe:	df 91       	pop	r29
    6000:	cf 91       	pop	r28
    6002:	08 95       	ret

00006004 <_ZN9CMBSender14OnTransmitByteEv>:
    6004:	cf 93       	push	r28
    6006:	df 93       	push	r29
    6008:	ec 01       	movw	r28, r24
    600a:	88 8d       	ldd	r24, Y+24	; 0x18
    600c:	84 30       	cpi	r24, 0x04	; 4
    600e:	38 f4       	brcc	.+14     	; 0x601e <_ZN9CMBSender14OnTransmitByteEv+0x1a>
    6010:	82 30       	cpi	r24, 0x02	; 2
    6012:	b8 f5       	brcc	.+110    	; 0x6082 <_ZN9CMBSender14OnTransmitByteEv+0x7e>
    6014:	88 23       	and	r24, r24
    6016:	31 f0       	breq	.+12     	; 0x6024 <_ZN9CMBSender14OnTransmitByteEv+0x20>
    6018:	81 30       	cpi	r24, 0x01	; 1
    601a:	d1 f0       	breq	.+52     	; 0x6050 <_ZN9CMBSender14OnTransmitByteEv+0x4c>
    601c:	39 c0       	rjmp	.+114    	; 0x6090 <_ZN9CMBSender14OnTransmitByteEv+0x8c>
    601e:	85 30       	cpi	r24, 0x05	; 5
    6020:	81 f1       	breq	.+96     	; 0x6082 <_ZN9CMBSender14OnTransmitByteEv+0x7e>
    6022:	36 c0       	rjmp	.+108    	; 0x6090 <_ZN9CMBSender14OnTransmitByteEv+0x8c>
    6024:	81 e0       	ldi	r24, 0x01	; 1
    6026:	88 8f       	std	Y+24, r24	; 0x18
    6028:	19 8e       	std	Y+25, r1	; 0x19
    602a:	8c 85       	ldd	r24, Y+12	; 0x0c
    602c:	9d 85       	ldd	r25, Y+13	; 0x0d
    602e:	29 8d       	ldd	r18, Y+25	; 0x19
    6030:	dc 01       	movw	r26, r24
    6032:	ed 91       	ld	r30, X+
    6034:	fc 91       	ld	r31, X
    6036:	ac 81       	ldd	r26, Y+4	; 0x04
    6038:	bd 81       	ldd	r27, Y+5	; 0x05
    603a:	a2 0f       	add	r26, r18
    603c:	b1 1d       	adc	r27, r1
    603e:	04 80       	ldd	r0, Z+4	; 0x04
    6040:	f5 81       	ldd	r31, Z+5	; 0x05
    6042:	e0 2d       	mov	r30, r0
    6044:	6c 91       	ld	r22, X
    6046:	19 95       	eicall
    6048:	89 8d       	ldd	r24, Y+25	; 0x19
    604a:	8f 5f       	subi	r24, 0xFF	; 255
    604c:	89 8f       	std	Y+25, r24	; 0x19
    604e:	20 c0       	rjmp	.+64     	; 0x6090 <_ZN9CMBSender14OnTransmitByteEv+0x8c>
    6050:	8c 85       	ldd	r24, Y+12	; 0x0c
    6052:	9d 85       	ldd	r25, Y+13	; 0x0d
    6054:	29 8d       	ldd	r18, Y+25	; 0x19
    6056:	dc 01       	movw	r26, r24
    6058:	ed 91       	ld	r30, X+
    605a:	fc 91       	ld	r31, X
    605c:	ac 81       	ldd	r26, Y+4	; 0x04
    605e:	bd 81       	ldd	r27, Y+5	; 0x05
    6060:	a2 0f       	add	r26, r18
    6062:	b1 1d       	adc	r27, r1
    6064:	04 80       	ldd	r0, Z+4	; 0x04
    6066:	f5 81       	ldd	r31, Z+5	; 0x05
    6068:	e0 2d       	mov	r30, r0
    606a:	6c 91       	ld	r22, X
    606c:	19 95       	eicall
    606e:	89 8d       	ldd	r24, Y+25	; 0x19
    6070:	8f 5f       	subi	r24, 0xFF	; 255
    6072:	89 8f       	std	Y+25, r24	; 0x19
    6074:	99 8d       	ldd	r25, Y+25	; 0x19
    6076:	89 85       	ldd	r24, Y+9	; 0x09
    6078:	98 13       	cpse	r25, r24
    607a:	0a c0       	rjmp	.+20     	; 0x6090 <_ZN9CMBSender14OnTransmitByteEv+0x8c>
    607c:	83 e0       	ldi	r24, 0x03	; 3
    607e:	88 8f       	std	Y+24, r24	; 0x18
    6080:	07 c0       	rjmp	.+14     	; 0x6090 <_ZN9CMBSender14OnTransmitByteEv+0x8c>
    6082:	8a 8d       	ldd	r24, Y+26	; 0x1a
    6084:	88 23       	and	r24, r24
    6086:	19 f0       	breq	.+6      	; 0x608e <_ZN9CMBSender14OnTransmitByteEv+0x8a>
    6088:	ce 01       	movw	r24, r28
    608a:	0e 94 e9 2f 	call	0x5fd2	; 0x5fd2 <_ZN9CMBSender19StartMODBUSListenerEv>
    608e:	1a 8e       	std	Y+26, r1	; 0x1a
    6090:	df 91       	pop	r29
    6092:	cf 91       	pop	r28
    6094:	08 95       	ret

00006096 <_ZN9CMBSender18OnUSARTTxInterruptEPv>:
    6096:	0e 94 02 30 	call	0x6004	; 0x6004 <_ZN9CMBSender14OnTransmitByteEv>
    609a:	08 95       	ret

0000609c <_ZN9CMBSender18WaitMODBUSListenerEv>:
    609c:	fc 01       	movw	r30, r24
    609e:	06 c0       	rjmp	.+12     	; 0x60ac <_ZN9CMBSender18WaitMODBUSListenerEv+0x10>
    60a0:	80 89       	ldd	r24, Z+16	; 0x10
    60a2:	89 30       	cpi	r24, 0x09	; 9
    60a4:	41 f0       	breq	.+16     	; 0x60b6 <_ZN9CMBSender18WaitMODBUSListenerEv+0x1a>
    60a6:	80 89       	ldd	r24, Z+16	; 0x10
    60a8:	8a 30       	cpi	r24, 0x0A	; 10
    60aa:	39 f0       	breq	.+14     	; 0x60ba <_ZN9CMBSender18WaitMODBUSListenerEv+0x1e>
    60ac:	80 89       	ldd	r24, Z+16	; 0x10
    60ae:	88 30       	cpi	r24, 0x08	; 8
    60b0:	b9 f7       	brne	.-18     	; 0x60a0 <_ZN9CMBSender18WaitMODBUSListenerEv+0x4>
    60b2:	81 e0       	ldi	r24, 0x01	; 1
    60b4:	08 95       	ret
    60b6:	82 e0       	ldi	r24, 0x02	; 2
    60b8:	08 95       	ret
    60ba:	83 e0       	ldi	r24, 0x03	; 3
    60bc:	08 95       	ret

000060be <_ZN9CMBSender22StartMODBUSTransmitterEv>:
    60be:	cf 93       	push	r28
    60c0:	df 93       	push	r29
    60c2:	ec 01       	movw	r28, r24
    60c4:	19 8e       	std	Y+25, r1	; 0x19
    60c6:	18 8e       	std	Y+24, r1	; 0x18
    60c8:	0e 94 02 30 	call	0x6004	; 0x6004 <_ZN9CMBSender14OnTransmitByteEv>
    60cc:	8e 85       	ldd	r24, Y+14	; 0x0e
    60ce:	9f 85       	ldd	r25, Y+15	; 0x0f
    60d0:	dc 01       	movw	r26, r24
    60d2:	ed 91       	ld	r30, X+
    60d4:	fc 91       	ld	r31, X
    60d6:	6a 89       	ldd	r22, Y+18	; 0x12
    60d8:	7b 89       	ldd	r23, Y+19	; 0x13
    60da:	02 80       	ldd	r0, Z+2	; 0x02
    60dc:	f3 81       	ldd	r31, Z+3	; 0x03
    60de:	e0 2d       	mov	r30, r0
    60e0:	19 95       	eicall
    60e2:	df 91       	pop	r29
    60e4:	cf 91       	pop	r28
    60e6:	08 95       	ret

000060e8 <_ZN9CMBSender24WriteDataToRegisterAsyncEhPhh>:
    60e8:	cf 93       	push	r28
    60ea:	df 93       	push	r29
    60ec:	ec 01       	movw	r28, r24
    60ee:	e8 81       	ld	r30, Y
    60f0:	f9 81       	ldd	r31, Y+1	; 0x01
    60f2:	02 84       	ldd	r0, Z+10	; 0x0a
    60f4:	f3 85       	ldd	r31, Z+11	; 0x0b
    60f6:	e0 2d       	mov	r30, r0
    60f8:	19 95       	eicall
    60fa:	ce 01       	movw	r24, r28
    60fc:	0e 94 5f 30 	call	0x60be	; 0x60be <_ZN9CMBSender22StartMODBUSTransmitterEv>
    6100:	df 91       	pop	r29
    6102:	cf 91       	pop	r28
    6104:	08 95       	ret

00006106 <_ZN9CMBSender20WriteDataToSRAMAsyncEjPjj>:
    6106:	cf 93       	push	r28
    6108:	df 93       	push	r29
    610a:	ec 01       	movw	r28, r24
    610c:	e8 81       	ld	r30, Y
    610e:	f9 81       	ldd	r31, Y+1	; 0x01
    6110:	06 84       	ldd	r0, Z+14	; 0x0e
    6112:	f7 85       	ldd	r31, Z+15	; 0x0f
    6114:	e0 2d       	mov	r30, r0
    6116:	19 95       	eicall
    6118:	ce 01       	movw	r24, r28
    611a:	0e 94 5f 30 	call	0x60be	; 0x60be <_ZN9CMBSender22StartMODBUSTransmitterEv>
    611e:	df 91       	pop	r29
    6120:	cf 91       	pop	r28
    6122:	08 95       	ret

00006124 <_ZN9CMBSender28RequestDataFromRegisterAsyncEhh>:
    6124:	cf 93       	push	r28
    6126:	df 93       	push	r29
    6128:	ec 01       	movw	r28, r24
    612a:	e8 81       	ld	r30, Y
    612c:	f9 81       	ldd	r31, Y+1	; 0x01
    612e:	04 84       	ldd	r0, Z+12	; 0x0c
    6130:	f5 85       	ldd	r31, Z+13	; 0x0d
    6132:	e0 2d       	mov	r30, r0
    6134:	19 95       	eicall
    6136:	ce 01       	movw	r24, r28
    6138:	0e 94 5f 30 	call	0x60be	; 0x60be <_ZN9CMBSender22StartMODBUSTransmitterEv>
    613c:	df 91       	pop	r29
    613e:	cf 91       	pop	r28
    6140:	08 95       	ret

00006142 <_ZN9CMBSender24RequestDataFromSRAMAsyncEjh>:
    6142:	cf 93       	push	r28
    6144:	df 93       	push	r29
    6146:	ec 01       	movw	r28, r24
    6148:	e8 81       	ld	r30, Y
    614a:	f9 81       	ldd	r31, Y+1	; 0x01
    614c:	50 e0       	ldi	r21, 0x00	; 0
    614e:	00 88       	ldd	r0, Z+16	; 0x10
    6150:	f1 89       	ldd	r31, Z+17	; 0x11
    6152:	e0 2d       	mov	r30, r0
    6154:	19 95       	eicall
    6156:	ce 01       	movw	r24, r28
    6158:	0e 94 5f 30 	call	0x60be	; 0x60be <_ZN9CMBSender22StartMODBUSTransmitterEv>
    615c:	df 91       	pop	r29
    615e:	cf 91       	pop	r28
    6160:	08 95       	ret

00006162 <_ZN9CMBSender21WaitMODBUSTransmitterEv>:
    6162:	fc 01       	movw	r30, r24
    6164:	06 c0       	rjmp	.+12     	; 0x6172 <_ZN9CMBSender21WaitMODBUSTransmitterEv+0x10>
    6166:	80 8d       	ldd	r24, Z+24	; 0x18
    6168:	84 30       	cpi	r24, 0x04	; 4
    616a:	41 f0       	breq	.+16     	; 0x617c <_ZN9CMBSender21WaitMODBUSTransmitterEv+0x1a>
    616c:	80 8d       	ldd	r24, Z+24	; 0x18
    616e:	85 30       	cpi	r24, 0x05	; 5
    6170:	39 f0       	breq	.+14     	; 0x6180 <_ZN9CMBSender21WaitMODBUSTransmitterEv+0x1e>
    6172:	80 8d       	ldd	r24, Z+24	; 0x18
    6174:	83 30       	cpi	r24, 0x03	; 3
    6176:	b9 f7       	brne	.-18     	; 0x6166 <_ZN9CMBSender21WaitMODBUSTransmitterEv+0x4>
    6178:	81 e0       	ldi	r24, 0x01	; 1
    617a:	08 95       	ret
    617c:	82 e0       	ldi	r24, 0x02	; 2
    617e:	08 95       	ret
    6180:	83 e0       	ldi	r24, 0x03	; 3
    6182:	08 95       	ret

00006184 <_ZN9CMBSender30StartMODBUSRegisterTransactionEhh>:
	owner->OnTimeout();
}

void CMBSender::StartMODBUSRegisterTransaction(uint8_t addr, uint8_t length)
{
	isTransaction = true;
    6184:	21 e0       	ldi	r18, 0x01	; 1
    6186:	fc 01       	movw	r30, r24
    6188:	22 8f       	std	Z+26, r18	; 0x1a
	RequestDataFromRegisterAsync(addr, length);
    618a:	0e 94 92 30 	call	0x6124	; 0x6124 <_ZN9CMBSender28RequestDataFromRegisterAsyncEhh>
    618e:	08 95       	ret

00006190 <_ZN9CMBSender30StartMODBUSVariableTransactionEjh>:
}

void CMBSender::StartMODBUSVariableTransaction(uint16_t addr, uint8_t length)
{
	isTransaction = true;
    6190:	21 e0       	ldi	r18, 0x01	; 1
    6192:	fc 01       	movw	r30, r24
    6194:	22 8f       	std	Z+26, r18	; 0x1a
	RequestDataFromSRAMAsync(addr, length);
    6196:	0e 94 a1 30 	call	0x6142	; 0x6142 <_ZN9CMBSender24RequestDataFromSRAMAsyncEjh>
    619a:	08 95       	ret

0000619c <_ZN9CMBSender18ProcessTransactionEPhj>:
}

void CMBSender::ProcessTransaction(uint8_t* data, uint16_t length)
{
    619c:	0f 93       	push	r16
    619e:	1f 93       	push	r17
    61a0:	cf 93       	push	r28
    61a2:	df 93       	push	r29
    61a4:	8c 01       	movw	r16, r24
    61a6:	eb 01       	movw	r28, r22
	if (data[0] == 0x81)
    61a8:	98 81       	ld	r25, Y
    61aa:	91 38       	cpi	r25, 0x81	; 129
    61ac:	69 f4       	brne	.+26     	; 0x61c8 <_ZN9CMBSender18ProcessTransactionEPhj+0x2c>
	{
		OnRegisterReceived(data[1], &data[3], data[2]);
    61ae:	d8 01       	movw	r26, r16
    61b0:	ed 91       	ld	r30, X+
    61b2:	fc 91       	ld	r31, X
    61b4:	04 80       	ldd	r0, Z+4	; 0x04
    61b6:	f5 81       	ldd	r31, Z+5	; 0x05
    61b8:	e0 2d       	mov	r30, r0
    61ba:	2a 81       	ldd	r18, Y+2	; 0x02
    61bc:	ab 01       	movw	r20, r22
    61be:	4d 5f       	subi	r20, 0xFD	; 253
    61c0:	5f 4f       	sbci	r21, 0xFF	; 255
    61c2:	69 81       	ldd	r22, Y+1	; 0x01
    61c4:	c8 01       	movw	r24, r16
    61c6:	19 95       	eicall
	}
	if (data[0] == 0x83)
    61c8:	98 81       	ld	r25, Y
    61ca:	93 38       	cpi	r25, 0x83	; 131
    61cc:	99 f4       	brne	.+38     	; 0x61f4 <_ZN9CMBSender18ProcessTransactionEPhj+0x58>
	{
		OnVariableReceived((data[1] << 8) | data[2], (uint16_t*)&data[4], data[3]);
    61ce:	d8 01       	movw	r26, r16
    61d0:	ed 91       	ld	r30, X+
    61d2:	fc 91       	ld	r31, X
    61d4:	2b 81       	ldd	r18, Y+3	; 0x03
    61d6:	30 e0       	ldi	r19, 0x00	; 0
    61d8:	ae 01       	movw	r20, r28
    61da:	4c 5f       	subi	r20, 0xFC	; 252
    61dc:	5f 4f       	sbci	r21, 0xFF	; 255
    61de:	69 81       	ldd	r22, Y+1	; 0x01
    61e0:	70 e0       	ldi	r23, 0x00	; 0
    61e2:	76 2f       	mov	r23, r22
    61e4:	66 27       	eor	r22, r22
    61e6:	8a 81       	ldd	r24, Y+2	; 0x02
    61e8:	68 2b       	or	r22, r24
    61ea:	02 80       	ldd	r0, Z+2	; 0x02
    61ec:	f3 81       	ldd	r31, Z+3	; 0x03
    61ee:	e0 2d       	mov	r30, r0
    61f0:	c8 01       	movw	r24, r16
    61f2:	19 95       	eicall
	}
}
    61f4:	df 91       	pop	r29
    61f6:	cf 91       	pop	r28
    61f8:	1f 91       	pop	r17
    61fa:	0f 91       	pop	r16
    61fc:	08 95       	ret

000061fe <_ZN9CMBSender21OnTransactionCallbackEPhj>:

void CMBSender::OnTransactionCallback(uint8_t* data, uint16_t length)
{
	CMBSender::ProcessTransaction(data, length);
    61fe:	0e 94 ce 30 	call	0x619c	; 0x619c <_ZN9CMBSender18ProcessTransactionEPhj>
    6202:	08 95       	ret

00006204 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb>:
{
} //~CDGUSUSART


void CDGUSUSART::Initialize(BAUDRATE baud, PARITY parity, STOPBITS stopbits, bool Async)
{
    6204:	0f 93       	push	r16
	PORTD.DIRSET = PIN3_bm; // Set TX to output
    6206:	e0 e6       	ldi	r30, 0x60	; 96
    6208:	f6 e0       	ldi	r31, 0x06	; 6
    620a:	88 e0       	ldi	r24, 0x08	; 8
    620c:	81 83       	std	Z+1, r24	; 0x01
	PORTD.DIRCLR = PIN2_bm; // Set RX to input
    620e:	84 e0       	ldi	r24, 0x04	; 4
    6210:	82 83       	std	Z+2, r24	; 0x02
	
	PORTD.PIN2CTRL = PORT_OPC_TOTEM_gc;	// | PORT_SRLEN_bm;
    6212:	12 8a       	std	Z+18, r1	; 0x12
	PORTD.PIN3CTRL = PORT_OPC_TOTEM_gc;	// | PORT_SRLEN_bm;
    6214:	13 8a       	std	Z+19, r1	; 0x13
	
	// Turn on interrupts
	USARTD0.CTRLA = USART_RXCINTLVL_LO_gc | USART_TXCINTLVL_LO_gc/* | USART_DREINTLVL_LO_gc*/;
    6216:	e0 ea       	ldi	r30, 0xA0	; 160
    6218:	f9 e0       	ldi	r31, 0x09	; 9
    621a:	84 e1       	ldi	r24, 0x14	; 20
    621c:	83 83       	std	Z+3, r24	; 0x03
	
	// Enable RX, TX
	USARTD0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
    621e:	88 e1       	ldi	r24, 0x18	; 24
    6220:	84 83       	std	Z+4, r24	; 0x04
	
	// Double transmission speed
#ifdef U2X
	USARTD0.CTRLB |=  (1 << USART_CLK2X_bm);
#else
	USARTD0.CTRLB &= ~(0 << USART_CLK2X_bm);
    6222:	84 81       	ldd	r24, Z+4	; 0x04
    6224:	84 83       	std	Z+4, r24	; 0x04
#endif

	// Parity param set
	uint8_t temp = 0;
	switch (parity)
    6226:	41 30       	cpi	r20, 0x01	; 1
    6228:	19 f0       	breq	.+6      	; 0x6230 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x2c>
    622a:	42 30       	cpi	r20, 0x02	; 2
    622c:	19 f0       	breq	.+6      	; 0x6234 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x30>
    622e:	04 c0       	rjmp	.+8      	; 0x6238 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x34>
	{
		case PARITY_DISABLE:
			temp |= USART_PMODE_DISABLED_gc;
		break;
		case PARITY_EVEN:
			temp |= USART_PMODE_EVEN_gc;
    6230:	80 e2       	ldi	r24, 0x20	; 32
    6232:	03 c0       	rjmp	.+6      	; 0x623a <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x36>
		break;
		case PARITY_ODD:
			temp |= USART_PMODE_ODD_gc;
    6234:	80 e3       	ldi	r24, 0x30	; 48
		break;
    6236:	01 c0       	rjmp	.+2      	; 0x623a <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x36>
#else
	USARTD0.CTRLB &= ~(0 << USART_CLK2X_bm);
#endif

	// Parity param set
	uint8_t temp = 0;
    6238:	80 e0       	ldi	r24, 0x00	; 0
			temp |= USART_PMODE_ODD_gc;
		break;
	}
	
	// Stop bits param set
	switch (stopbits)
    623a:	22 23       	and	r18, r18
    623c:	19 f0       	breq	.+6      	; 0x6244 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x40>
    623e:	21 30       	cpi	r18, 0x01	; 1
    6240:	19 f0       	breq	.+6      	; 0x6248 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x44>
    6242:	03 c0       	rjmp	.+6      	; 0x624a <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x46>
	{
		case STOPBITS_1BIT:
			temp &= ~USART_SBMODE_bm;
    6244:	87 7f       	andi	r24, 0xF7	; 247
		break;
    6246:	01 c0       	rjmp	.+2      	; 0x624a <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x46>
		case STOPBITS_2BIT:
			temp |=  USART_SBMODE_bm;
    6248:	88 60       	ori	r24, 0x08	; 8
		break;
	}
	
	// USART mode asynchronous, 8bit
	USARTD0.CTRLC = (Async?USART_CMODE_ASYNCHRONOUS_gc:USART_CMODE_SYNCHRONOUS_gc) | USART_CHSIZE_8BIT_gc | temp;
    624a:	01 11       	cpse	r16, r1
    624c:	02 c0       	rjmp	.+4      	; 0x6252 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x4e>
    624e:	93 e4       	ldi	r25, 0x43	; 67
    6250:	01 c0       	rjmp	.+2      	; 0x6254 <_ZN10CDGUSUSART10InitializeE13BAUDRATE_ENUM11PARITY_ENUM12STOBITS_ENUMb+0x50>
    6252:	93 e0       	ldi	r25, 0x03	; 3
    6254:	89 2b       	or	r24, r25
    6256:	e0 ea       	ldi	r30, 0xA0	; 160
    6258:	f9 e0       	ldi	r31, 0x09	; 9
    625a:	85 83       	std	Z+5, r24	; 0x05
	
	// Set baud rate
	USARTD0.BAUDCTRLA = bsel_table[baud];
    625c:	70 e0       	ldi	r23, 0x00	; 0
    625e:	db 01       	movw	r26, r22
    6260:	aa 5c       	subi	r26, 0xCA	; 202
    6262:	bd 4d       	sbci	r27, 0xDD	; 221
    6264:	8c 91       	ld	r24, X
    6266:	86 83       	std	Z+6, r24	; 0x06
	USARTD0.BAUDCTRLB = (((int8_t)(16 + bscale_table[baud])) << USART_BSCALE0_bp) | ((bsel_table[baud] >> 8) & 0x0F);	
    6268:	db 01       	movw	r26, r22
    626a:	aa 5e       	subi	r26, 0xEA	; 234
    626c:	bd 4d       	sbci	r27, 0xDD	; 221
    626e:	8c 91       	ld	r24, X
    6270:	82 95       	swap	r24
    6272:	80 7f       	andi	r24, 0xF0	; 240
    6274:	87 83       	std	Z+7, r24	; 0x07
} //CUSART
    6276:	0f 91       	pop	r16
    6278:	08 95       	ret

0000627a <_ZN10CDGUSUSART15GetReceivedByteEv>:

uint8_t CDGUSUSART::GetReceivedByte()
{
	return USARTD0.DATA;
    627a:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
}
    627e:	08 95       	ret

00006280 <_ZN10CDGUSUSART19SetTransmittingByteEh>:

void CDGUSUSART::SetTransmittingByte(uint8_t data)
{
	//while ( ( USARTD0.STATUS & (1<<USART_DREIF_bm)) );
	USARTD0.DATA = data;
    6280:	60 93 a0 09 	sts	0x09A0, r22	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
    6284:	08 95       	ret

00006286 <_ZN10CDGUSUSART14IsTransmittingEv>:
}

bool CDGUSUSART::IsTransmitting()
{
	return !( USARTD0.STATUS & USART_TXCIF_bm);
    6286:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <__TEXT_REGION_LENGTH__+0x7009a1>
    628a:	86 fb       	bst	r24, 6
    628c:	88 27       	eor	r24, r24
    628e:	80 f9       	bld	r24, 0
}
    6290:	91 e0       	ldi	r25, 0x01	; 1
    6292:	89 27       	eor	r24, r25
    6294:	08 95       	ret

00006296 <_ZN10CDGUSUSART11IsReceivingEv>:

bool CDGUSUSART::IsReceiving()
{
	return !( USARTD0.STATUS & USART_RXCIF_bm);
    6296:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <__TEXT_REGION_LENGTH__+0x7009a1>
    629a:	80 95       	com	r24
}
    629c:	88 1f       	adc	r24, r24
    629e:	88 27       	eor	r24, r24
    62a0:	88 1f       	adc	r24, r24
    62a2:	08 95       	ret

000062a4 <_ZN10CDGUSUSART11IsDataEmptyEv>:

bool CDGUSUSART::IsDataEmpty()
{
	return !( USARTD0.STATUS & USART_DREIF_bm);
    62a4:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <__TEXT_REGION_LENGTH__+0x7009a1>
    62a8:	85 fb       	bst	r24, 5
    62aa:	88 27       	eor	r24, r24
    62ac:	80 f9       	bld	r24, 0
}
    62ae:	91 e0       	ldi	r25, 0x01	; 1
    62b0:	89 27       	eor	r24, r25
    62b2:	08 95       	ret

000062b4 <_ZN10CDGUSUSART25SetRxInterruptionCallbackEPvPFvS0_E>:

void CDGUSUSART::SetRxInterruptionCallback(void* sender, ISRCallback callback)
{
	InterruptSenderTable[USARTD0_RXC_vect_num] = sender;
    62b4:	60 93 48 25 	sts	0x2548, r22	; 0x802548 <InterruptSenderTable+0xb0>
    62b8:	70 93 49 25 	sts	0x2549, r23	; 0x802549 <InterruptSenderTable+0xb1>
	InterruptFuncTable[USARTD0_RXC_vect_num] = callback;
    62bc:	40 93 52 24 	sts	0x2452, r20	; 0x802452 <InterruptFuncTable+0xb0>
    62c0:	50 93 53 24 	sts	0x2453, r21	; 0x802453 <InterruptFuncTable+0xb1>
    62c4:	08 95       	ret

000062c6 <_ZN10CDGUSUSART25SetTxInterruptionCallbackEPvPFvS0_E>:
}

void CDGUSUSART::SetTxInterruptionCallback(void* sender, ISRCallback callback)
{
	InterruptSenderTable[USARTD0_TXC_vect_num] = sender;
    62c6:	60 93 4c 25 	sts	0x254C, r22	; 0x80254c <InterruptSenderTable+0xb4>
    62ca:	70 93 4d 25 	sts	0x254D, r23	; 0x80254d <InterruptSenderTable+0xb5>
	InterruptFuncTable[USARTD0_TXC_vect_num] = callback;
    62ce:	40 93 56 24 	sts	0x2456, r20	; 0x802456 <InterruptFuncTable+0xb4>
    62d2:	50 93 57 24 	sts	0x2457, r21	; 0x802457 <InterruptFuncTable+0xb5>
    62d6:	08 95       	ret

000062d8 <_ZN10CDGUSUSART12SetDMARxTrigEP13DMA_CH_struct>:
}

void CDGUSUSART::SetDMARxTrig(DMA_CH_t *dma_channel)
{
    62d8:	fb 01       	movw	r30, r22
	dma_channel->TRIGSRC = DMA_CH_TRIGSRC_USARTD0_RXC_gc;
    62da:	8b e6       	ldi	r24, 0x6B	; 107
    62dc:	83 83       	std	Z+3, r24	; 0x03
	dma_channel->SRCADDR0 = (int)&USARTD0.DATA;
    62de:	80 ea       	ldi	r24, 0xA0	; 160
    62e0:	80 87       	std	Z+8, r24	; 0x08
	dma_channel->SRCADDR1 = (int)&USARTD0.DATA >> 8;
    62e2:	89 e0       	ldi	r24, 0x09	; 9
    62e4:	81 87       	std	Z+9, r24	; 0x09
	dma_channel->SRCADDR2 = 0;
    62e6:	12 86       	std	Z+10, r1	; 0x0a
    62e8:	08 95       	ret

000062ea <_ZN10CDGUSUSART12SetDMATxTrigEP13DMA_CH_struct>:
}

void CDGUSUSART::SetDMATxTrig(DMA_CH_t *dma_channel)
{
    62ea:	fb 01       	movw	r30, r22
	dma_channel->TRIGSRC = DMA_CH_TRIGSRC_USARTD0_DRE_gc;
    62ec:	8c e6       	ldi	r24, 0x6C	; 108
    62ee:	83 83       	std	Z+3, r24	; 0x03
	dma_channel->DESTADDR0 = (int)&USARTD0.DATA;
    62f0:	80 ea       	ldi	r24, 0xA0	; 160
    62f2:	84 87       	std	Z+12, r24	; 0x0c
	dma_channel->DESTADDR1 = (int)&USARTD0.DATA >> 8;
    62f4:	89 e0       	ldi	r24, 0x09	; 9
    62f6:	85 87       	std	Z+13, r24	; 0x0d
	dma_channel->DESTADDR2 = 0;
    62f8:	16 86       	std	Z+14, r1	; 0x0e
    62fa:	08 95       	ret

000062fc <_ZN10CDGUSUSARTC1Ev>:
								true, true, true, true, true, true, true, true, true, true,
								true, true};
#endif

// default constructor
CDGUSUSART::CDGUSUSART()
    62fc:	cf 93       	push	r28
    62fe:	df 93       	push	r29
    6300:	ec 01       	movw	r28, r24
    6302:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN6CUSARTC1Ev>
    6306:	80 ee       	ldi	r24, 0xE0	; 224
    6308:	92 e2       	ldi	r25, 0x22	; 34
    630a:	88 83       	st	Y, r24
    630c:	99 83       	std	Y+1, r25	; 0x01
{
} //CDGUSUSART
    630e:	df 91       	pop	r29
    6310:	cf 91       	pop	r28
    6312:	08 95       	ret

00006314 <_ZN10CDGUSUSARTD1Ev>:

// default destructor
CDGUSUSART::~CDGUSUSART()
    6314:	20 ee       	ldi	r18, 0xE0	; 224
    6316:	32 e2       	ldi	r19, 0x22	; 34
    6318:	fc 01       	movw	r30, r24
    631a:	20 83       	st	Z, r18
    631c:	31 83       	std	Z+1, r19	; 0x01
    631e:	0e 94 05 17 	call	0x2e0a	; 0x2e0a <_ZN6CUSARTD1Ev>
    6322:	08 95       	ret

00006324 <_Z18onewire_crc_updatehh>:

#define F_CPU	32000000

#include <util/delay.h>

uint8_t onewire_crc_update(uint8_t crc, uint8_t b) {
    6324:	98 e0       	ldi	r25, 0x08	; 8
	for (uint8_t p = 8; p; p--) {
		crc = ((crc ^ b) & 1) ? (crc >> 1) ^ 0b10001100 : (crc >> 1);
    6326:	3c e8       	ldi	r19, 0x8C	; 140
    6328:	26 2f       	mov	r18, r22
    632a:	28 27       	eor	r18, r24
    632c:	20 ff       	sbrs	r18, 0
    632e:	03 c0       	rjmp	.+6      	; 0x6336 <_Z18onewire_crc_updatehh+0x12>
    6330:	86 95       	lsr	r24
    6332:	83 27       	eor	r24, r19
    6334:	01 c0       	rjmp	.+2      	; 0x6338 <_Z18onewire_crc_updatehh+0x14>
    6336:	86 95       	lsr	r24
		b >>= 1;
    6338:	66 95       	lsr	r22
    633a:	91 50       	subi	r25, 0x01	; 1
#define F_CPU	32000000

#include <util/delay.h>

uint8_t onewire_crc_update(uint8_t crc, uint8_t b) {
	for (uint8_t p = 8; p; p--) {
    633c:	a9 f7       	brne	.-22     	; 0x6328 <_Z18onewire_crc_updatehh+0x4>
		crc = ((crc ^ b) & 1) ? (crc >> 1) ^ 0b10001100 : (crc >> 1);
		b >>= 1;
	}
	return crc;
}
    633e:	08 95       	ret

00006340 <_ZN8CDS18B20C1Ev>:

// default constructor
CDS18B20::CDS18B20()
    6340:	08 95       	ret

00006342 <_ZN8CDS18B20D1Ev>:
{
} //CDS18B20

// default destructor
CDS18B20::~CDS18B20()
    6342:	08 95       	ret

00006344 <_ZN8CDS18B207w1_findEv>:
{
} //~CDS18B20

bool CDS18B20::w1_find()
{
	PORTD.DIRSET = PIN7_bm;	// pull down 1-wire bus
    6344:	e0 e6       	ldi	r30, 0x60	; 96
    6346:	f6 e0       	ldi	r31, 0x06	; 6
    6348:	80 e8       	ldi	r24, 0x80	; 128
    634a:	81 83       	std	Z+1, r24	; 0x01
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    634c:	a7 e2       	ldi	r26, 0x27	; 39
    634e:	bf e0       	ldi	r27, 0x0F	; 15
    6350:	11 97       	sbiw	r26, 0x01	; 1
    6352:	f1 f7       	brne	.-4      	; 0x6350 <_ZN8CDS18B207w1_findEv+0xc>
    6354:	00 c0       	rjmp	.+0      	; 0x6356 <_ZN8CDS18B207w1_findEv+0x12>
    6356:	00 00       	nop
	_delay_us(485);			// wait for 480 us
	PORTD.DIRCLR = PIN7_bm; // 1-wire bus pull up
    6358:	82 83       	std	Z+2, r24	; 0x02
    635a:	87 e0       	ldi	r24, 0x07	; 7
    635c:	92 e0       	ldi	r25, 0x02	; 2
    635e:	01 97       	sbiw	r24, 0x01	; 1
    6360:	f1 f7       	brne	.-4      	; 0x635e <_ZN8CDS18B207w1_findEv+0x1a>
    6362:	00 c0       	rjmp	.+0      	; 0x6364 <_ZN8CDS18B207w1_findEv+0x20>
    6364:	00 00       	nop
	_delay_us(65);			// wait for 65 us
	
	bool result;
	if((PORTD.IN & PIN7_bm) == 0x00)
    6366:	80 85       	ldd	r24, Z+8	; 0x08
    6368:	af e1       	ldi	r26, 0x1F	; 31
    636a:	bd e0       	ldi	r27, 0x0D	; 13
    636c:	11 97       	sbiw	r26, 0x01	; 1
    636e:	f1 f7       	brne	.-4      	; 0x636c <_ZN8CDS18B207w1_findEv+0x28>
    6370:	00 c0       	rjmp	.+0      	; 0x6372 <_ZN8CDS18B207w1_findEv+0x2e>
    6372:	00 00       	nop
    6374:	80 95       	com	r24
	else
		result = false;
		
	_delay_us(420);			// wait 480 us
	return result;
}
    6376:	88 1f       	adc	r24, r24
    6378:	88 27       	eor	r24, r24
    637a:	88 1f       	adc	r24, r24
    637c:	08 95       	ret

0000637e <_ZN8CDS18B2010w1_sendcmdEh>:

void CDS18B20::w1_sendcmd(unsigned char cmd)
{
    637e:	cf 93       	push	r28
    6380:	df 93       	push	r29
    6382:	80 e0       	ldi	r24, 0x00	; 0
    6384:	90 e0       	ldi	r25, 0x00	; 0
	for(unsigned char i = 0; i < 8; i++)
	{
		if((cmd & (1<<i)) == 1<<i)
    6386:	c1 e0       	ldi	r28, 0x01	; 1
    6388:	d0 e0       	ldi	r29, 0x00	; 0
    638a:	70 e0       	ldi	r23, 0x00	; 0
			_delay_us(65);
		}
		else
		{
			
			PORTD.DIRSET = PIN7_bm;
    638c:	e0 e6       	ldi	r30, 0x60	; 96
    638e:	f6 e0       	ldi	r31, 0x06	; 6
    6390:	40 e8       	ldi	r20, 0x80	; 128

void CDS18B20::w1_sendcmd(unsigned char cmd)
{
	for(unsigned char i = 0; i < 8; i++)
	{
		if((cmd & (1<<i)) == 1<<i)
    6392:	9e 01       	movw	r18, r28
    6394:	08 2e       	mov	r0, r24
    6396:	02 c0       	rjmp	.+4      	; 0x639c <_ZN8CDS18B2010w1_sendcmdEh+0x1e>
    6398:	22 0f       	add	r18, r18
    639a:	33 1f       	adc	r19, r19
    639c:	0a 94       	dec	r0
    639e:	e2 f7       	brpl	.-8      	; 0x6398 <_ZN8CDS18B2010w1_sendcmdEh+0x1a>
    63a0:	d9 01       	movw	r26, r18
    63a2:	a6 23       	and	r26, r22
    63a4:	b7 23       	and	r27, r23
    63a6:	2a 17       	cp	r18, r26
    63a8:	3b 07       	cpc	r19, r27
    63aa:	69 f4       	brne	.+26     	; 0x63c6 <_ZN8CDS18B2010w1_sendcmdEh+0x48>
		{
			PORTD.DIRSET = PIN7_bm;
    63ac:	41 83       	std	Z+1, r20	; 0x01
    63ae:	25 e1       	ldi	r18, 0x15	; 21
    63b0:	2a 95       	dec	r18
    63b2:	f1 f7       	brne	.-4      	; 0x63b0 <_ZN8CDS18B2010w1_sendcmdEh+0x32>
    63b4:	00 00       	nop
			_delay_us(2);
			PORTD.DIRCLR = PIN7_bm;
    63b6:	42 83       	std	Z+2, r20	; 0x02
    63b8:	a7 e0       	ldi	r26, 0x07	; 7
    63ba:	b2 e0       	ldi	r27, 0x02	; 2
    63bc:	11 97       	sbiw	r26, 0x01	; 1
    63be:	f1 f7       	brne	.-4      	; 0x63bc <_ZN8CDS18B2010w1_sendcmdEh+0x3e>
    63c0:	00 c0       	rjmp	.+0      	; 0x63c2 <_ZN8CDS18B2010w1_sendcmdEh+0x44>
    63c2:	00 00       	nop
    63c4:	0c c0       	rjmp	.+24     	; 0x63de <_ZN8CDS18B2010w1_sendcmdEh+0x60>
			_delay_us(65);
		}
		else
		{
			
			PORTD.DIRSET = PIN7_bm;
    63c6:	41 83       	std	Z+1, r20	; 0x01
    63c8:	a7 e0       	ldi	r26, 0x07	; 7
    63ca:	b2 e0       	ldi	r27, 0x02	; 2
    63cc:	11 97       	sbiw	r26, 0x01	; 1
    63ce:	f1 f7       	brne	.-4      	; 0x63cc <_ZN8CDS18B2010w1_sendcmdEh+0x4e>
    63d0:	00 c0       	rjmp	.+0      	; 0x63d2 <_ZN8CDS18B2010w1_sendcmdEh+0x54>
    63d2:	00 00       	nop
			_delay_us(65);
			PORTD.DIRCLR = PIN7_bm;
    63d4:	42 83       	std	Z+2, r20	; 0x02
    63d6:	b5 e3       	ldi	r27, 0x35	; 53
    63d8:	ba 95       	dec	r27
    63da:	f1 f7       	brne	.-4      	; 0x63d8 <_ZN8CDS18B2010w1_sendcmdEh+0x5a>
    63dc:	00 00       	nop
    63de:	01 96       	adiw	r24, 0x01	; 1
	return result;
}

void CDS18B20::w1_sendcmd(unsigned char cmd)
{
	for(unsigned char i = 0; i < 8; i++)
    63e0:	88 30       	cpi	r24, 0x08	; 8
    63e2:	91 05       	cpc	r25, r1
    63e4:	b1 f6       	brne	.-84     	; 0x6392 <_ZN8CDS18B2010w1_sendcmdEh+0x14>
			_delay_us(65);
			PORTD.DIRCLR = PIN7_bm;
			_delay_us(5);
		}
	}
}
    63e6:	df 91       	pop	r29
    63e8:	cf 91       	pop	r28
    63ea:	08 95       	ret

000063ec <_ZN8CDS18B2015w1_receive_byteEv>:

unsigned char CDS18B20::w1_receive_byte()
{
    63ec:	20 e0       	ldi	r18, 0x00	; 0
    63ee:	30 e0       	ldi	r19, 0x00	; 0
	unsigned char data=0;
    63f0:	80 e0       	ldi	r24, 0x00	; 0
	for(unsigned char i = 0; i < 8; i++)
	{
		PORTD.DIRSET = PIN7_bm;
    63f2:	e0 e6       	ldi	r30, 0x60	; 96
    63f4:	f6 e0       	ldi	r31, 0x06	; 6
    63f6:	90 e8       	ldi	r25, 0x80	; 128
		PORTD.DIRCLR = PIN7_bm;
		_delay_us(10);
		if((PORTD.IN & PIN7_bm) == 0x00)
			data &= ~(1<<i);
		else
			data |= 1<<i;
    63f8:	61 e0       	ldi	r22, 0x01	; 1
    63fa:	70 e0       	ldi	r23, 0x00	; 0
unsigned char CDS18B20::w1_receive_byte()
{
	unsigned char data=0;
	for(unsigned char i = 0; i < 8; i++)
	{
		PORTD.DIRSET = PIN7_bm;
    63fc:	91 83       	std	Z+1, r25	; 0x01
    63fe:	45 e1       	ldi	r20, 0x15	; 21
    6400:	4a 95       	dec	r20
    6402:	f1 f7       	brne	.-4      	; 0x6400 <_ZN8CDS18B2015w1_receive_byteEv+0x14>
    6404:	00 00       	nop
		_delay_us(2);
		PORTD.DIRCLR = PIN7_bm;
    6406:	92 83       	std	Z+2, r25	; 0x02
    6408:	aa e6       	ldi	r26, 0x6A	; 106
    640a:	aa 95       	dec	r26
    640c:	f1 f7       	brne	.-4      	; 0x640a <_ZN8CDS18B2015w1_receive_byteEv+0x1e>
    640e:	00 c0       	rjmp	.+0      	; 0x6410 <_ZN8CDS18B2015w1_receive_byteEv+0x24>
		_delay_us(10);
		if((PORTD.IN & PIN7_bm) == 0x00)
    6410:	40 85       	ldd	r20, Z+8	; 0x08
    6412:	44 23       	and	r20, r20
    6414:	54 f0       	brlt	.+20     	; 0x642a <_ZN8CDS18B2015w1_receive_byteEv+0x3e>
			data &= ~(1<<i);
    6416:	ab 01       	movw	r20, r22
    6418:	02 2e       	mov	r0, r18
    641a:	02 c0       	rjmp	.+4      	; 0x6420 <_ZN8CDS18B2015w1_receive_byteEv+0x34>
    641c:	44 0f       	add	r20, r20
    641e:	55 1f       	adc	r21, r21
    6420:	0a 94       	dec	r0
    6422:	e2 f7       	brpl	.-8      	; 0x641c <_ZN8CDS18B2015w1_receive_byteEv+0x30>
    6424:	40 95       	com	r20
    6426:	84 23       	and	r24, r20
    6428:	08 c0       	rjmp	.+16     	; 0x643a <_ZN8CDS18B2015w1_receive_byteEv+0x4e>
		else
			data |= 1<<i;
    642a:	ab 01       	movw	r20, r22
    642c:	02 2e       	mov	r0, r18
    642e:	02 c0       	rjmp	.+4      	; 0x6434 <_ZN8CDS18B2015w1_receive_byteEv+0x48>
    6430:	44 0f       	add	r20, r20
    6432:	55 1f       	adc	r21, r21
    6434:	0a 94       	dec	r0
    6436:	e2 f7       	brpl	.-8      	; 0x6430 <_ZN8CDS18B2015w1_receive_byteEv+0x44>
    6438:	84 2b       	or	r24, r20
    643a:	af e8       	ldi	r26, 0x8F	; 143
    643c:	b1 e0       	ldi	r27, 0x01	; 1
    643e:	11 97       	sbiw	r26, 0x01	; 1
    6440:	f1 f7       	brne	.-4      	; 0x643e <_ZN8CDS18B2015w1_receive_byteEv+0x52>
    6442:	00 c0       	rjmp	.+0      	; 0x6444 <_ZN8CDS18B2015w1_receive_byteEv+0x58>
    6444:	00 00       	nop
    6446:	2f 5f       	subi	r18, 0xFF	; 255
    6448:	3f 4f       	sbci	r19, 0xFF	; 255
}

unsigned char CDS18B20::w1_receive_byte()
{
	unsigned char data=0;
	for(unsigned char i = 0; i < 8; i++)
    644a:	28 30       	cpi	r18, 0x08	; 8
    644c:	31 05       	cpc	r19, r1
    644e:	b1 f6       	brne	.-84     	; 0x63fc <_ZN8CDS18B2015w1_receive_byteEv+0x10>
		else
			data |= 1<<i;
		_delay_us(50);
	}
	return data;
}
    6450:	08 95       	ret

00006452 <_ZN8CDS18B2010temp_18b20Ev>:

int CDS18B20::temp_18b20()
{
    6452:	af 92       	push	r10
    6454:	bf 92       	push	r11
    6456:	df 92       	push	r13
    6458:	ef 92       	push	r14
    645a:	ff 92       	push	r15
    645c:	0f 93       	push	r16
    645e:	1f 93       	push	r17
    6460:	cf 93       	push	r28
    6462:	df 93       	push	r29
    6464:	cd b7       	in	r28, 0x3d	; 61
    6466:	de b7       	in	r29, 0x3e	; 62
    6468:	29 97       	sbiw	r28, 0x09	; 9
    646a:	cd bf       	out	0x3d, r28	; 61
    646c:	de bf       	out	0x3e, r29	; 62
    646e:	8c 01       	movw	r16, r24
	unsigned char data[9];
	int temp = 0;
	
	if (req)
    6470:	fc 01       	movw	r30, r24
    6472:	82 81       	ldd	r24, Z+2	; 0x02
    6474:	88 23       	and	r24, r24
    6476:	a1 f0       	breq	.+40     	; 0x64a0 <_ZN8CDS18B2010temp_18b20Ev+0x4e>
	{
		if(w1_find())
    6478:	c8 01       	movw	r24, r16
    647a:	0e 94 a2 31 	call	0x6344	; 0x6344 <_ZN8CDS18B207w1_findEv>
    647e:	88 23       	and	r24, r24
    6480:	61 f0       	breq	.+24     	; 0x649a <_ZN8CDS18B2010temp_18b20Ev+0x48>
		{
			w1_sendcmd(0xcc);	//skip ROM
    6482:	6c ec       	ldi	r22, 0xCC	; 204
    6484:	c8 01       	movw	r24, r16
    6486:	0e 94 bf 31 	call	0x637e	; 0x637e <_ZN8CDS18B2010w1_sendcmdEh>
			w1_sendcmd(0x44);	//start conversion
    648a:	64 e4       	ldi	r22, 0x44	; 68
    648c:	c8 01       	movw	r24, r16
    648e:	0e 94 bf 31 	call	0x637e	; 0x637e <_ZN8CDS18B2010w1_sendcmdEh>
			find = true;
    6492:	81 e0       	ldi	r24, 0x01	; 1
    6494:	f8 01       	movw	r30, r16
    6496:	83 83       	std	Z+3, r24	; 0x03
    6498:	3f c0       	rjmp	.+126    	; 0x6518 <_ZN8CDS18B2010temp_18b20Ev+0xc6>
		}
		else
			find = false;
    649a:	f8 01       	movw	r30, r16
    649c:	13 82       	std	Z+3, r1	; 0x03
    649e:	3c c0       	rjmp	.+120    	; 0x6518 <_ZN8CDS18B2010temp_18b20Ev+0xc6>
	}
	else
	{
		if (find)
    64a0:	f8 01       	movw	r30, r16
    64a2:	83 81       	ldd	r24, Z+3	; 0x03
    64a4:	88 23       	and	r24, r24
    64a6:	c1 f1       	breq	.+112    	; 0x6518 <_ZN8CDS18B2010temp_18b20Ev+0xc6>
		{
			w1_find();
    64a8:	c8 01       	movw	r24, r16
    64aa:	0e 94 a2 31 	call	0x6344	; 0x6344 <_ZN8CDS18B207w1_findEv>
			w1_sendcmd(0xcc);
    64ae:	6c ec       	ldi	r22, 0xCC	; 204
    64b0:	c8 01       	movw	r24, r16
    64b2:	0e 94 bf 31 	call	0x637e	; 0x637e <_ZN8CDS18B2010w1_sendcmdEh>
			w1_sendcmd(0xbe);	//read temperature
    64b6:	6e eb       	ldi	r22, 0xBE	; 190
    64b8:	c8 01       	movw	r24, r16
    64ba:	0e 94 bf 31 	call	0x637e	; 0x637e <_ZN8CDS18B2010w1_sendcmdEh>
    64be:	ce 01       	movw	r24, r28
    64c0:	01 96       	adiw	r24, 0x01	; 1
    64c2:	7c 01       	movw	r14, r24
    64c4:	5e 01       	movw	r10, r28
    64c6:	9a e0       	ldi	r25, 0x0A	; 10
    64c8:	a9 0e       	add	r10, r25
    64ca:	b1 1c       	adc	r11, r1
			/*data[0] = w1_receive_byte();
			data[1] = w1_receive_byte();*/
			uint8_t crc = 0;
    64cc:	d1 2c       	mov	r13, r1
			for (int i = 0; i < 9; i++)
			{
				data[i] = w1_receive_byte();
    64ce:	c8 01       	movw	r24, r16
    64d0:	0e 94 f6 31 	call	0x63ec	; 0x63ec <_ZN8CDS18B2015w1_receive_byteEv>
    64d4:	68 2f       	mov	r22, r24
    64d6:	f7 01       	movw	r30, r14
    64d8:	81 93       	st	Z+, r24
    64da:	7f 01       	movw	r14, r30
				crc = onewire_crc_update(crc, data[i]);
    64dc:	8d 2d       	mov	r24, r13
    64de:	0e 94 92 31 	call	0x6324	; 0x6324 <_Z18onewire_crc_updatehh>
    64e2:	d8 2e       	mov	r13, r24
			w1_sendcmd(0xcc);
			w1_sendcmd(0xbe);	//read temperature
			/*data[0] = w1_receive_byte();
			data[1] = w1_receive_byte();*/
			uint8_t crc = 0;
			for (int i = 0; i < 9; i++)
    64e4:	ea 14       	cp	r14, r10
    64e6:	fb 04       	cpc	r15, r11
    64e8:	91 f7       	brne	.-28     	; 0x64ce <_ZN8CDS18B2010temp_18b20Ev+0x7c>
			{
				data[i] = w1_receive_byte();
				crc = onewire_crc_update(crc, data[i]);
			}
			
			temp = data[1];
    64ea:	8a 81       	ldd	r24, Y+2	; 0x02
			temp = temp<<8;
			temp |= data[0];
    64ec:	69 81       	ldd	r22, Y+1	; 0x01
			
			temp *= 0.625;
			
			if (crc == 0)
    64ee:	d1 10       	cpse	r13, r1
    64f0:	13 c0       	rjmp	.+38     	; 0x6518 <_ZN8CDS18B2010temp_18b20Ev+0xc6>
				data[i] = w1_receive_byte();
				crc = onewire_crc_update(crc, data[i]);
			}
			
			temp = data[1];
			temp = temp<<8;
    64f2:	70 e0       	ldi	r23, 0x00	; 0
			temp |= data[0];
    64f4:	78 2b       	or	r23, r24
			
			temp *= 0.625;
    64f6:	07 2e       	mov	r0, r23
    64f8:	00 0c       	add	r0, r0
    64fa:	88 0b       	sbc	r24, r24
    64fc:	99 0b       	sbc	r25, r25
    64fe:	0e 94 4a 38 	call	0x7094	; 0x7094 <__floatsisf>
    6502:	20 e0       	ldi	r18, 0x00	; 0
    6504:	30 e0       	ldi	r19, 0x00	; 0
    6506:	40 e2       	ldi	r20, 0x20	; 32
    6508:	5f e3       	ldi	r21, 0x3F	; 63
    650a:	0e 94 ae 38 	call	0x715c	; 0x715c <__mulsf3>
    650e:	0e 94 12 38 	call	0x7024	; 0x7024 <__fixsfsi>
    6512:	f8 01       	movw	r30, r16
    6514:	60 83       	st	Z, r22
    6516:	71 83       	std	Z+1, r23	; 0x01
			if (crc == 0)
				temperature = temp;
		}
	}
	
	req = !req;
    6518:	f8 01       	movw	r30, r16
    651a:	92 81       	ldd	r25, Z+2	; 0x02
    651c:	81 e0       	ldi	r24, 0x01	; 1
    651e:	89 27       	eor	r24, r25
    6520:	82 83       	std	Z+2, r24	; 0x02
	
	return temperature;
}
    6522:	80 81       	ld	r24, Z
    6524:	91 81       	ldd	r25, Z+1	; 0x01
    6526:	29 96       	adiw	r28, 0x09	; 9
    6528:	cd bf       	out	0x3d, r28	; 61
    652a:	de bf       	out	0x3e, r29	; 62
    652c:	df 91       	pop	r29
    652e:	cf 91       	pop	r28
    6530:	1f 91       	pop	r17
    6532:	0f 91       	pop	r16
    6534:	ff 90       	pop	r15
    6536:	ef 90       	pop	r14
    6538:	df 90       	pop	r13
    653a:	bf 90       	pop	r11
    653c:	af 90       	pop	r10
    653e:	08 95       	ret

00006540 <_ZN8CDS18B2010InitializeEv>:

void CDS18B20::Initialize()
{
    6540:	fc 01       	movw	r30, r24
	PORTD.OUTCLR = PIN7_bm;
    6542:	a0 e6       	ldi	r26, 0x60	; 96
    6544:	b6 e0       	ldi	r27, 0x06	; 6
    6546:	80 e8       	ldi	r24, 0x80	; 128
    6548:	16 96       	adiw	r26, 0x06	; 6
    654a:	8c 93       	st	X, r24
    654c:	16 97       	sbiw	r26, 0x06	; 6
	PORTD.PIN7CTRL = PORT_OPC_TOTEM_gc;// | PORT_SRLEN_bm;
    654e:	57 96       	adiw	r26, 0x17	; 23
    6550:	1c 92       	st	X, r1
	
	temperature = 0;
    6552:	10 82       	st	Z, r1
    6554:	11 82       	std	Z+1, r1	; 0x01
	find = false;
    6556:	13 82       	std	Z+3, r1	; 0x03
	req = true;
    6558:	81 e0       	ldi	r24, 0x01	; 1
    655a:	82 83       	std	Z+2, r24	; 0x02
    655c:	08 95       	ret

0000655e <_ZN11CLaserBoardC1Ev>:
	PORTD.DIRCLR = PIN4_bm;
}

void CLaserBoard::Relay1Off()
{
	PORTD.DIRSET = PIN0_bm;
    655e:	08 95       	ret

00006560 <_ZN11CLaserBoardD1Ev>:
    6560:	08 95       	ret

00006562 <_ZN11CLaserBoard12InitializeIOEv>:
    6562:	cf 93       	push	r28
    6564:	df 93       	push	r29
    6566:	ec 01       	movw	r28, r24
    6568:	e0 e4       	ldi	r30, 0x40	; 64
    656a:	f6 e0       	ldi	r31, 0x06	; 6
    656c:	11 82       	std	Z+1, r1	; 0x01
    656e:	98 ea       	ldi	r25, 0xA8	; 168
    6570:	90 8b       	std	Z+16, r25	; 0x10
    6572:	91 8b       	std	Z+17, r25	; 0x11
    6574:	92 8b       	std	Z+18, r25	; 0x12
    6576:	93 8b       	std	Z+19, r25	; 0x13
    6578:	94 8b       	std	Z+20, r25	; 0x14
    657a:	95 8b       	std	Z+21, r25	; 0x15
    657c:	96 8b       	std	Z+22, r25	; 0x16
    657e:	97 8b       	std	Z+23, r25	; 0x17
    6580:	8f ef       	ldi	r24, 0xFF	; 255
    6582:	84 83       	std	Z+4, r24	; 0x04
    6584:	a0 e8       	ldi	r26, 0x80	; 128
    6586:	b6 e0       	ldi	r27, 0x06	; 6
    6588:	98 e0       	ldi	r25, 0x08	; 8
    658a:	11 96       	adiw	r26, 0x01	; 1
    658c:	9c 93       	st	X, r25
    658e:	11 97       	sbiw	r26, 0x01	; 1
    6590:	53 96       	adiw	r26, 0x13	; 19
    6592:	1c 92       	st	X, r1
    6594:	53 97       	sbiw	r26, 0x13	; 19
    6596:	14 96       	adiw	r26, 0x04	; 4
    6598:	1c 92       	st	X, r1
    659a:	14 97       	sbiw	r26, 0x04	; 4
    659c:	e0 ea       	ldi	r30, 0xA0	; 160
    659e:	f6 e0       	ldi	r31, 0x06	; 6
    65a0:	90 ec       	ldi	r25, 0xC0	; 192
    65a2:	90 8b       	std	Z+16, r25	; 0x10
    65a4:	20 e8       	ldi	r18, 0x80	; 128
    65a6:	21 8b       	std	Z+17, r18	; 0x11
    65a8:	22 8b       	std	Z+18, r18	; 0x12
    65aa:	23 8b       	std	Z+19, r18	; 0x13
    65ac:	94 8b       	std	Z+20, r25	; 0x14
    65ae:	95 8b       	std	Z+21, r25	; 0x15
    65b0:	96 8b       	std	Z+22, r25	; 0x16
    65b2:	97 8b       	std	Z+23, r25	; 0x17
    65b4:	14 82       	std	Z+4, r1	; 0x04
    65b6:	81 83       	std	Z+1, r24	; 0x01
    65b8:	e0 e6       	ldi	r30, 0x60	; 96
    65ba:	f6 e0       	ldi	r31, 0x06	; 6
    65bc:	81 e1       	ldi	r24, 0x11	; 17
    65be:	81 83       	std	Z+1, r24	; 0x01
    65c0:	90 8b       	std	Z+16, r25	; 0x10
    65c2:	94 8b       	std	Z+20, r25	; 0x14
    65c4:	15 8a       	std	Z+21, r1	; 0x15
    65c6:	14 82       	std	Z+4, r1	; 0x04
    65c8:	87 e0       	ldi	r24, 0x07	; 7
    65ca:	11 96       	adiw	r26, 0x01	; 1
    65cc:	8c 93       	st	X, r24
    65ce:	11 97       	sbiw	r26, 0x01	; 1
    65d0:	50 96       	adiw	r26, 0x10	; 16
    65d2:	2c 93       	st	X, r18
    65d4:	50 97       	sbiw	r26, 0x10	; 16
    65d6:	51 96       	adiw	r26, 0x11	; 17
    65d8:	2c 93       	st	X, r18
    65da:	51 97       	sbiw	r26, 0x11	; 17
    65dc:	52 96       	adiw	r26, 0x12	; 18
    65de:	2c 93       	st	X, r18
    65e0:	52 97       	sbiw	r26, 0x12	; 18
    65e2:	14 96       	adiw	r26, 0x04	; 4
    65e4:	1c 92       	st	X, r1
    65e6:	e0 ea       	ldi	r30, 0xA0	; 160
    65e8:	f0 e0       	ldi	r31, 0x00	; 0
    65ea:	82 81       	ldd	r24, Z+2	; 0x02
    65ec:	81 60       	ori	r24, 0x01	; 1
    65ee:	82 83       	std	Z+2, r24	; 0x02
    65f0:	82 81       	ldd	r24, Z+2	; 0x02
    65f2:	82 60       	ori	r24, 0x02	; 2
    65f4:	82 83       	std	Z+2, r24	; 0x02
    65f6:	82 81       	ldd	r24, Z+2	; 0x02
    65f8:	84 60       	ori	r24, 0x04	; 4
    65fa:	82 83       	std	Z+2, r24	; 0x02
    65fc:	fe 01       	movw	r30, r28
    65fe:	9e 01       	movw	r18, r28
    6600:	28 5f       	subi	r18, 0xF8	; 248
    6602:	3f 4f       	sbci	r19, 0xFF	; 255
    6604:	91 e0       	ldi	r25, 0x01	; 1
    6606:	91 93       	st	Z+, r25
    6608:	e2 17       	cp	r30, r18
    660a:	f3 07       	cpc	r31, r19
    660c:	e1 f7       	brne	.-8      	; 0x6606 <_ZN11CLaserBoard12InitializeIOEv+0xa4>
    660e:	83 e0       	ldi	r24, 0x03	; 3
    6610:	88 87       	std	Y+8, r24	; 0x08
    6612:	e0 e4       	ldi	r30, 0x40	; 64
    6614:	f6 e0       	ldi	r31, 0x06	; 6
    6616:	81 e0       	ldi	r24, 0x01	; 1
    6618:	82 87       	std	Z+10, r24	; 0x0a
    661a:	81 87       	std	Z+9, r24	; 0x09
    661c:	df 91       	pop	r29
    661e:	cf 91       	pop	r28
    6620:	08 95       	ret

00006622 <_ZN11CLaserBoard15InitializeClockEv>:
    6622:	e0 e5       	ldi	r30, 0x50	; 80
    6624:	f0 e0       	ldi	r31, 0x00	; 0
    6626:	8b ec       	ldi	r24, 0xCB	; 203
    6628:	82 83       	std	Z+2, r24	; 0x02
    662a:	80 81       	ld	r24, Z
    662c:	88 60       	ori	r24, 0x08	; 8
    662e:	80 83       	st	Z, r24
    6630:	81 81       	ldd	r24, Z+1	; 0x01
    6632:	83 ff       	sbrs	r24, 3
    6634:	fd cf       	rjmp	.-6      	; 0x6630 <_ZN11CLaserBoard15InitializeClockEv+0xe>
    6636:	e0 e5       	ldi	r30, 0x50	; 80
    6638:	f0 e0       	ldi	r31, 0x00	; 0
    663a:	85 81       	ldd	r24, Z+5	; 0x05
    663c:	98 ed       	ldi	r25, 0xD8	; 216
    663e:	94 bf       	out	0x34, r25	; 52
    6640:	84 ec       	ldi	r24, 0xC4	; 196
    6642:	85 83       	std	Z+5, r24	; 0x05
    6644:	80 81       	ld	r24, Z
    6646:	80 61       	ori	r24, 0x10	; 16
    6648:	80 83       	st	Z, r24
    664a:	e0 e4       	ldi	r30, 0x40	; 64
    664c:	f0 e0       	ldi	r31, 0x00	; 0
    664e:	81 81       	ldd	r24, Z+1	; 0x01
    6650:	94 bf       	out	0x34, r25	; 52
    6652:	11 82       	std	Z+1, r1	; 0x01
    6654:	e0 e5       	ldi	r30, 0x50	; 80
    6656:	f0 e0       	ldi	r31, 0x00	; 0
    6658:	81 81       	ldd	r24, Z+1	; 0x01
    665a:	84 ff       	sbrs	r24, 4
    665c:	fd cf       	rjmp	.-6      	; 0x6658 <_ZN11CLaserBoard15InitializeClockEv+0x36>
    665e:	e0 e4       	ldi	r30, 0x40	; 64
    6660:	f0 e0       	ldi	r31, 0x00	; 0
    6662:	80 81       	ld	r24, Z
    6664:	88 7f       	andi	r24, 0xF8	; 248
    6666:	84 60       	ori	r24, 0x04	; 4
    6668:	98 ed       	ldi	r25, 0xD8	; 216
    666a:	94 bf       	out	0x34, r25	; 52
    666c:	80 83       	st	Z, r24
    666e:	a0 e5       	ldi	r26, 0x50	; 80
    6670:	b0 e0       	ldi	r27, 0x00	; 0
    6672:	8c 91       	ld	r24, X
    6674:	88 7f       	andi	r24, 0xF8	; 248
    6676:	8c 93       	st	X, r24
    6678:	82 81       	ldd	r24, Z+2	; 0x02
    667a:	94 bf       	out	0x34, r25	; 52
    667c:	81 e0       	ldi	r24, 0x01	; 1
    667e:	82 83       	std	Z+2, r24	; 0x02
    6680:	e0 eb       	ldi	r30, 0xB0	; 176
    6682:	f0 e0       	ldi	r31, 0x00	; 0
    6684:	84 81       	ldd	r24, Z+4	; 0x04
    6686:	8c 7f       	andi	r24, 0xFC	; 252
    6688:	84 83       	std	Z+4, r24	; 0x04
    668a:	08 95       	ret

0000668c <_ZN11CLaserBoard5PWMOnEv>:
    668c:	84 e0       	ldi	r24, 0x04	; 4
    668e:	80 93 85 06 	sts	0x0685, r24	; 0x800685 <__TEXT_REGION_LENGTH__+0x700685>
    6692:	08 95       	ret

00006694 <_ZN11CLaserBoard6PWMOffEv>:
    6694:	84 e0       	ldi	r24, 0x04	; 4
    6696:	80 93 86 06 	sts	0x0686, r24	; 0x800686 <__TEXT_REGION_LENGTH__+0x700686>
    669a:	08 95       	ret

0000669c <_ZN11CLaserBoard5REDOnEv>:
    669c:	82 e0       	ldi	r24, 0x02	; 2
    669e:	80 93 a5 06 	sts	0x06A5, r24	; 0x8006a5 <__TEXT_REGION_LENGTH__+0x7006a5>
    66a2:	08 95       	ret

000066a4 <_ZN11CLaserBoard5GRNOnEv>:
    66a4:	84 e0       	ldi	r24, 0x04	; 4
    66a6:	80 93 a5 06 	sts	0x06A5, r24	; 0x8006a5 <__TEXT_REGION_LENGTH__+0x7006a5>
    66aa:	08 95       	ret

000066ac <_ZN11CLaserBoard5BLUOnEv>:
    66ac:	88 e0       	ldi	r24, 0x08	; 8
    66ae:	80 93 a5 06 	sts	0x06A5, r24	; 0x8006a5 <__TEXT_REGION_LENGTH__+0x7006a5>
    66b2:	08 95       	ret

000066b4 <_ZN11CLaserBoard8Relay1OnEv>:
    66b4:	81 e0       	ldi	r24, 0x01	; 1
    66b6:	80 93 62 06 	sts	0x0662, r24	; 0x800662 <__TEXT_REGION_LENGTH__+0x700662>
    66ba:	08 95       	ret

000066bc <_ZN11CLaserBoard8Relay2OnEv>:
    66bc:	80 e1       	ldi	r24, 0x10	; 16
    66be:	80 93 62 06 	sts	0x0662, r24	; 0x800662 <__TEXT_REGION_LENGTH__+0x700662>
    66c2:	08 95       	ret

000066c4 <_ZN11CLaserBoard9Relay2OffEv>:
}

void CLaserBoard::Relay2Off()
{
	PORTD.DIRSET = PIN4_bm;
    66c4:	80 e1       	ldi	r24, 0x10	; 16
    66c6:	80 93 61 06 	sts	0x0661, r24	; 0x800661 <__TEXT_REGION_LENGTH__+0x700661>
    66ca:	08 95       	ret

000066cc <_ZN11CLaserBoard12LaserPowerOnEv>:
}

void CLaserBoard::LaserPowerOn()
{
	PORTE.OUTSET = PIN1_bm;
    66cc:	82 e0       	ldi	r24, 0x02	; 2
    66ce:	80 93 85 06 	sts	0x0685, r24	; 0x800685 <__TEXT_REGION_LENGTH__+0x700685>
    66d2:	08 95       	ret

000066d4 <_ZN11CLaserBoard13LaserPowerOffEv>:
}

void CLaserBoard::LaserPowerOff()
{
	PORTE.OUTCLR = PIN1_bm;
    66d4:	82 e0       	ldi	r24, 0x02	; 2
    66d6:	80 93 86 06 	sts	0x0686, r24	; 0x800686 <__TEXT_REGION_LENGTH__+0x700686>
    66da:	08 95       	ret

000066dc <_ZN11CLaserBoard4BeepEv>:
}

void CLaserBoard::Beep()
{
	cli();
    66dc:	f8 94       	cli
    66de:	84 e6       	ldi	r24, 0x64	; 100
    66e0:	90 e0       	ldi	r25, 0x00	; 0
	
	for (int i = 0; i < 100; i++)
	{
		PORTE.OUTSET = PIN3_bm;
    66e2:	e0 e8       	ldi	r30, 0x80	; 128
    66e4:	f6 e0       	ldi	r31, 0x06	; 6
    66e6:	28 e0       	ldi	r18, 0x08	; 8
    66e8:	25 83       	std	Z+5, r18	; 0x05
    66ea:	af e9       	ldi	r26, 0x9F	; 159
    66ec:	bf e0       	ldi	r27, 0x0F	; 15
    66ee:	11 97       	sbiw	r26, 0x01	; 1
    66f0:	f1 f7       	brne	.-4      	; 0x66ee <_ZN11CLaserBoard4BeepEv+0x12>
    66f2:	00 c0       	rjmp	.+0      	; 0x66f4 <_ZN11CLaserBoard4BeepEv+0x18>
    66f4:	00 00       	nop
		_delay_us(500);
		PORTE.OUTCLR = PIN3_bm;
    66f6:	26 83       	std	Z+6, r18	; 0x06
    66f8:	af e9       	ldi	r26, 0x9F	; 159
    66fa:	bf e0       	ldi	r27, 0x0F	; 15
    66fc:	11 97       	sbiw	r26, 0x01	; 1
    66fe:	f1 f7       	brne	.-4      	; 0x66fc <_ZN11CLaserBoard4BeepEv+0x20>
    6700:	00 c0       	rjmp	.+0      	; 0x6702 <_ZN11CLaserBoard4BeepEv+0x26>
    6702:	00 00       	nop
    6704:	01 97       	sbiw	r24, 0x01	; 1

void CLaserBoard::Beep()
{
	cli();
	
	for (int i = 0; i < 100; i++)
    6706:	81 f7       	brne	.-32     	; 0x66e8 <_ZN11CLaserBoard4BeepEv+0xc>
		_delay_us(500);
		PORTE.OUTCLR = PIN3_bm;
		_delay_us(500);
	}
	
	sei();
    6708:	78 94       	sei
    670a:	08 95       	ret

0000670c <_ZN11CLaserBoard14BeepClassErrorEv>:
}

void CLaserBoard::BeepClassError()
{
	cli();
    670c:	f8 94       	cli
    670e:	45 e0       	ldi	r20, 0x05	; 5
    6710:	50 e0       	ldi	r21, 0x00	; 0
	
	sei();
}

void CLaserBoard::BeepClassError()
{
    6712:	64 e6       	ldi	r22, 0x64	; 100
    6714:	30 e0       	ldi	r19, 0x00	; 0
	
	for (int j = 0; j < 5; j++)
	{
		for (int i = 0; i < 100; i++)
		{
			PORTE.OUTSET = PIN3_bm;
    6716:	e0 e8       	ldi	r30, 0x80	; 128
    6718:	f6 e0       	ldi	r31, 0x06	; 6
    671a:	28 e0       	ldi	r18, 0x08	; 8
    671c:	1c c0       	rjmp	.+56     	; 0x6756 <_ZN11CLaserBoard14BeepClassErrorEv+0x4a>
    671e:	25 83       	std	Z+5, r18	; 0x05
    6720:	af e9       	ldi	r26, 0x9F	; 159
    6722:	bf e0       	ldi	r27, 0x0F	; 15
    6724:	11 97       	sbiw	r26, 0x01	; 1
    6726:	f1 f7       	brne	.-4      	; 0x6724 <_ZN11CLaserBoard14BeepClassErrorEv+0x18>
    6728:	00 c0       	rjmp	.+0      	; 0x672a <_ZN11CLaserBoard14BeepClassErrorEv+0x1e>
    672a:	00 00       	nop
			_delay_us(500);
			PORTE.OUTCLR = PIN3_bm;
    672c:	26 83       	std	Z+6, r18	; 0x06
    672e:	af e9       	ldi	r26, 0x9F	; 159
    6730:	bf e0       	ldi	r27, 0x0F	; 15
    6732:	11 97       	sbiw	r26, 0x01	; 1
    6734:	f1 f7       	brne	.-4      	; 0x6732 <_ZN11CLaserBoard14BeepClassErrorEv+0x26>
    6736:	00 c0       	rjmp	.+0      	; 0x6738 <_ZN11CLaserBoard14BeepClassErrorEv+0x2c>
    6738:	00 00       	nop
    673a:	01 97       	sbiw	r24, 0x01	; 1
{
	cli();
	
	for (int j = 0; j < 5; j++)
	{
		for (int i = 0; i < 100; i++)
    673c:	81 f7       	brne	.-32     	; 0x671e <_ZN11CLaserBoard14BeepClassErrorEv+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    673e:	bf ef       	ldi	r27, 0xFF	; 255
    6740:	73 ec       	ldi	r23, 0xC3	; 195
    6742:	89 e0       	ldi	r24, 0x09	; 9
    6744:	b1 50       	subi	r27, 0x01	; 1
    6746:	70 40       	sbci	r23, 0x00	; 0
    6748:	80 40       	sbci	r24, 0x00	; 0
    674a:	e1 f7       	brne	.-8      	; 0x6744 <_ZN11CLaserBoard14BeepClassErrorEv+0x38>
    674c:	00 c0       	rjmp	.+0      	; 0x674e <_ZN11CLaserBoard14BeepClassErrorEv+0x42>
    674e:	00 00       	nop
    6750:	41 50       	subi	r20, 0x01	; 1
    6752:	51 09       	sbc	r21, r1

void CLaserBoard::BeepClassError()
{
	cli();
	
	for (int j = 0; j < 5; j++)
    6754:	19 f0       	breq	.+6      	; 0x675c <_ZN11CLaserBoard14BeepClassErrorEv+0x50>
	
	sei();
}

void CLaserBoard::BeepClassError()
{
    6756:	86 2f       	mov	r24, r22
    6758:	93 2f       	mov	r25, r19
    675a:	e1 cf       	rjmp	.-62     	; 0x671e <_ZN11CLaserBoard14BeepClassErrorEv+0x12>
			_delay_us(500);
		}
		_delay_ms(100);
	}
	
	sei();
    675c:	78 94       	sei
    675e:	08 95       	ret

00006760 <_ZN11CLaserBoard9PortCheckEv>:
		else
			Port &= ~bitpos;
		
		bitpos <<= 1;
	}*/
	Port = PORTC.IN;
    6760:	20 91 48 06 	lds	r18, 0x0648	; 0x800648 <__TEXT_REGION_LENGTH__+0x700648>
    6764:	fc 01       	movw	r30, r24
    6766:	21 87       	std	Z+9, r18	; 0x09
    6768:	08 95       	ret

0000676a <_ZN11CLaserBoard10FootswitchEv>:
}

bool CLaserBoard::Footswitch()
{
	return Port & 0x01;
    676a:	fc 01       	movw	r30, r24
    676c:	81 85       	ldd	r24, Z+9	; 0x09
    676e:	81 70       	andi	r24, 0x01	; 1
    6770:	08 95       	ret

00006772 <_ZN12CSoundPlayerC1Ev>:
//This function generates the square wave that makes the piezo speaker sound at a determinated frequency.
void CSoundPlayer::beep(uint16_t note, uint16_t duration)
{
	SoundStart(note, duration, 3);
	SoundStop();
}
    6772:	08 95       	ret

00006774 <_ZN12CSoundPlayerD1Ev>:
    6774:	08 95       	ret

00006776 <_ZN12CSoundPlayer19InitializeToneTimerEv>:
    6776:	e0 e0       	ldi	r30, 0x00	; 0
    6778:	fa e0       	ldi	r31, 0x0A	; 10
    677a:	10 82       	st	Z, r1
    677c:	87 e8       	ldi	r24, 0x87	; 135
    677e:	81 83       	std	Z+1, r24	; 0x01
    6780:	13 82       	std	Z+3, r1	; 0x03
    6782:	84 e2       	ldi	r24, 0x24	; 36
    6784:	94 ef       	ldi	r25, 0xF4	; 244
    6786:	86 a3       	std	Z+38, r24	; 0x26
    6788:	97 a3       	std	Z+39, r25	; 0x27
    678a:	82 e1       	ldi	r24, 0x12	; 18
    678c:	9a e7       	ldi	r25, 0x7A	; 122
    678e:	86 a7       	std	Z+46, r24	; 0x2e
    6790:	97 a7       	std	Z+47, r25	; 0x2f
    6792:	16 82       	std	Z+6, r1	; 0x06
    6794:	17 82       	std	Z+7, r1	; 0x07
    6796:	08 95       	ret

00006798 <_ZN12CSoundPlayer23InitializeDurationTimerEv>:
    6798:	e0 e4       	ldi	r30, 0x40	; 64
    679a:	fa e0       	ldi	r31, 0x0A	; 10
    679c:	10 82       	st	Z, r1
    679e:	11 82       	std	Z+1, r1	; 0x01
    67a0:	13 82       	std	Z+3, r1	; 0x03
    67a2:	84 e2       	ldi	r24, 0x24	; 36
    67a4:	94 ef       	ldi	r25, 0xF4	; 244
    67a6:	86 a3       	std	Z+38, r24	; 0x26
    67a8:	97 a3       	std	Z+39, r25	; 0x27
    67aa:	16 82       	std	Z+6, r1	; 0x06
    67ac:	17 82       	std	Z+7, r1	; 0x07
    67ae:	08 95       	ret

000067b0 <_ZN12CSoundPlayer10SoundStartEjjh>:
    67b0:	0f 93       	push	r16
    67b2:	1f 93       	push	r17
    67b4:	cf 93       	push	r28
    67b6:	8a 01       	movw	r16, r20
    67b8:	c2 2f       	mov	r28, r18
    67ba:	9b 01       	movw	r18, r22
    67bc:	40 e0       	ldi	r20, 0x00	; 0
    67be:	50 e0       	ldi	r21, 0x00	; 0
    67c0:	64 e2       	ldi	r22, 0x24	; 36
    67c2:	74 ef       	ldi	r23, 0xF4	; 244
    67c4:	80 e0       	ldi	r24, 0x00	; 0
    67c6:	90 e0       	ldi	r25, 0x00	; 0
    67c8:	0e 94 8d 39 	call	0x731a	; 0x731a <__divmodsi4>
    67cc:	b8 01       	movw	r22, r16
    67ce:	76 95       	lsr	r23
    67d0:	67 95       	ror	r22
    67d2:	ee e3       	ldi	r30, 0x3E	; 62
    67d4:	e0 9f       	mul	r30, r16
    67d6:	c0 01       	movw	r24, r0
    67d8:	e1 9f       	mul	r30, r17
    67da:	90 0d       	add	r25, r0
    67dc:	11 24       	eor	r1, r1
    67de:	86 0f       	add	r24, r22
    67e0:	97 1f       	adc	r25, r23
    67e2:	cf 5f       	subi	r28, 0xFF	; 255
    67e4:	b9 01       	movw	r22, r18
    67e6:	02 c0       	rjmp	.+4      	; 0x67ec <_ZN12CSoundPlayer10SoundStartEjjh+0x3c>
    67e8:	76 95       	lsr	r23
    67ea:	67 95       	ror	r22
    67ec:	ca 95       	dec	r28
    67ee:	e2 f7       	brpl	.-8      	; 0x67e8 <_ZN12CSoundPlayer10SoundStartEjjh+0x38>
    67f0:	e0 e0       	ldi	r30, 0x00	; 0
    67f2:	fa e0       	ldi	r31, 0x0A	; 10
    67f4:	66 a7       	std	Z+46, r22	; 0x2e
    67f6:	77 a7       	std	Z+47, r23	; 0x2f
    67f8:	26 a3       	std	Z+38, r18	; 0x26
    67fa:	37 a3       	std	Z+39, r19	; 0x27
    67fc:	a0 e4       	ldi	r26, 0x40	; 64
    67fe:	ba e0       	ldi	r27, 0x0A	; 10
    6800:	96 96       	adiw	r26, 0x26	; 38
    6802:	8d 93       	st	X+, r24
    6804:	9c 93       	st	X, r25
    6806:	97 97       	sbiw	r26, 0x27	; 39
    6808:	86 e0       	ldi	r24, 0x06	; 6
    680a:	80 83       	st	Z, r24
    680c:	87 e0       	ldi	r24, 0x07	; 7
    680e:	8c 93       	st	X, r24
    6810:	cf 91       	pop	r28
    6812:	1f 91       	pop	r17
    6814:	0f 91       	pop	r16
    6816:	08 95       	ret

00006818 <_ZN12CSoundPlayer9SoundStopEv>:
    6818:	e0 e4       	ldi	r30, 0x40	; 64
    681a:	fa e0       	ldi	r31, 0x0A	; 10
    681c:	84 85       	ldd	r24, Z+12	; 0x0c
    681e:	80 ff       	sbrs	r24, 0
    6820:	fd cf       	rjmp	.-6      	; 0x681c <_ZN12CSoundPlayer9SoundStopEv+0x4>
    6822:	e0 e4       	ldi	r30, 0x40	; 64
    6824:	fa e0       	ldi	r31, 0x0A	; 10
    6826:	84 85       	ldd	r24, Z+12	; 0x0c
    6828:	81 70       	andi	r24, 0x01	; 1
    682a:	84 87       	std	Z+12, r24	; 0x0c
    682c:	a0 e0       	ldi	r26, 0x00	; 0
    682e:	ba e0       	ldi	r27, 0x0A	; 10
    6830:	1c 92       	st	X, r1
    6832:	10 82       	st	Z, r1
    6834:	10 a2       	std	Z+32, r1	; 0x20
    6836:	11 a2       	std	Z+33, r1	; 0x21
    6838:	90 96       	adiw	r26, 0x20	; 32
    683a:	1d 92       	st	X+, r1
    683c:	1c 92       	st	X, r1
    683e:	91 97       	sbiw	r26, 0x21	; 33
    6840:	2f ef       	ldi	r18, 0xFF	; 255
    6842:	83 ef       	ldi	r24, 0xF3	; 243
    6844:	91 e0       	ldi	r25, 0x01	; 1
    6846:	21 50       	subi	r18, 0x01	; 1
    6848:	80 40       	sbci	r24, 0x00	; 0
    684a:	90 40       	sbci	r25, 0x00	; 0
    684c:	e1 f7       	brne	.-8      	; 0x6846 <_ZN12CSoundPlayer9SoundStopEv+0x2e>
    684e:	00 c0       	rjmp	.+0      	; 0x6850 <_ZN12CSoundPlayer9SoundStopEv+0x38>
    6850:	00 00       	nop
    6852:	08 95       	ret

00006854 <_ZN12CSoundPlayer10InitializeEv>:

	_delay_ms(20);
} 

void CSoundPlayer::Initialize()
{
    6854:	cf 93       	push	r28
    6856:	df 93       	push	r29
    6858:	ec 01       	movw	r28, r24
	InitializeToneTimer();
    685a:	0e 94 bb 33 	call	0x6776	; 0x6776 <_ZN12CSoundPlayer19InitializeToneTimerEv>
	InitializeDurationTimer();
    685e:	ce 01       	movw	r24, r28
    6860:	0e 94 cc 33 	call	0x6798	; 0x6798 <_ZN12CSoundPlayer23InitializeDurationTimerEv>
}
    6864:	df 91       	pop	r29
    6866:	cf 91       	pop	r28
    6868:	08 95       	ret

0000686a <_ZN7CTimerC10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>:
} //~CTimerC

// Basic timer functions
void CTimerC::Initialize(TIMER_WAVEFORMGEN_MODE wgm, TIMER_CLOCKSELECT clock)
{	
	clockSrc = clock;
    686a:	fc 01       	movw	r30, r24
    686c:	42 83       	std	Z+2, r20	; 0x02
	
	// Stop timer
	TCC0.CTRLA = (TCC0.CTRLA & ~TC0_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    686e:	e0 e0       	ldi	r30, 0x00	; 0
    6870:	f8 e0       	ldi	r31, 0x08	; 8
    6872:	80 81       	ld	r24, Z
    6874:	80 7f       	andi	r24, 0xF0	; 240
    6876:	80 83       	st	Z, r24
	
	// No events
	TCC0.CTRLD = TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
    6878:	13 82       	std	Z+3, r1	; 0x03
	
	// Reset
	TCC0.CNT = 0;
    687a:	10 a2       	std	Z+32, r1	; 0x20
    687c:	11 a2       	std	Z+33, r1	; 0x21
	TCC0.CCA = 0;
    687e:	10 a6       	std	Z+40, r1	; 0x28
    6880:	11 a6       	std	Z+41, r1	; 0x29
	TCC0.CCB = 0;
    6882:	12 a6       	std	Z+42, r1	; 0x2a
    6884:	13 a6       	std	Z+43, r1	; 0x2b
	TCC0.CCC = 0;
    6886:	14 a6       	std	Z+44, r1	; 0x2c
    6888:	15 a6       	std	Z+45, r1	; 0x2d
	TCC0.CCD = 0;
    688a:	16 a6       	std	Z+46, r1	; 0x2e
    688c:	17 a6       	std	Z+47, r1	; 0x2f
	TCC0.PER = 0;
    688e:	16 a2       	std	Z+38, r1	; 0x26
    6890:	17 a2       	std	Z+39, r1	; 0x27
	
	// Waveform generation mode
	TCC0.CTRLB = (TCC0.CTRLB & ~TC0_WGMODE_gm) | wgm;
    6892:	81 81       	ldd	r24, Z+1	; 0x01
    6894:	88 7f       	andi	r24, 0xF8	; 248
    6896:	68 2b       	or	r22, r24
    6898:	61 83       	std	Z+1, r22	; 0x01
	
	// Start timer
	//TCC0.CTRLA = (TCC0.CTRLA & TC0_CLKSEL_gm) | clock;
	
	// Disable interrupts
	TCC0.INTCTRLA = TC_OVFINTLVL_OFF_gc;
    689a:	16 82       	std	Z+6, r1	; 0x06
	TCC0.INTCTRLB = TC_CCDINTLVL_OFF_gc | TC_CCCINTLVL_OFF_gc | TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
    689c:	17 82       	std	Z+7, r1	; 0x07
    689e:	08 95       	ret

000068a0 <_ZN7CTimerC5StartEj>:
}

void CTimerC::Start(uint16_t period)
{
	// Set period of timer
	TCC0.PER = period;
    68a0:	e0 e0       	ldi	r30, 0x00	; 0
    68a2:	f8 e0       	ldi	r31, 0x08	; 8
    68a4:	66 a3       	std	Z+38, r22	; 0x26
    68a6:	77 a3       	std	Z+39, r23	; 0x27
	
	// Start timer
	TCC0.CTRLA = (TCC0.CTRLA & ~TC0_CLKSEL_gm) | clockSrc;
    68a8:	20 81       	ld	r18, Z
    68aa:	20 7f       	andi	r18, 0xF0	; 240
    68ac:	dc 01       	movw	r26, r24
    68ae:	12 96       	adiw	r26, 0x02	; 2
    68b0:	9c 91       	ld	r25, X
    68b2:	82 2f       	mov	r24, r18
    68b4:	89 2b       	or	r24, r25
    68b6:	80 83       	st	Z, r24
    68b8:	08 95       	ret

000068ba <_ZN7CTimerC4StopEv>:
}

void CTimerC::Stop()
{
	// Stop timer
	TCC0.CTRLA = (TCC0.CTRLA & ~TC0_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    68ba:	e0 e0       	ldi	r30, 0x00	; 0
    68bc:	f8 e0       	ldi	r31, 0x08	; 8
    68be:	80 81       	ld	r24, Z
    68c0:	80 7f       	andi	r24, 0xF0	; 240
    68c2:	80 83       	st	Z, r24
	TCC0.CNT = 0;
    68c4:	10 a2       	std	Z+32, r1	; 0x20
    68c6:	11 a2       	std	Z+33, r1	; 0x21
    68c8:	08 95       	ret

000068ca <_ZN7CTimerC13EnableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerC::EnableChannel(TIMER_CHANNELS channels)
{
	TCC0.CTRLB = (TCC0.CTRLB & ~0xF0) | channels;
    68ca:	e0 e0       	ldi	r30, 0x00	; 0
    68cc:	f8 e0       	ldi	r31, 0x08	; 8
    68ce:	81 81       	ldd	r24, Z+1	; 0x01
    68d0:	8f 70       	andi	r24, 0x0F	; 15
    68d2:	68 2b       	or	r22, r24
    68d4:	61 83       	std	Z+1, r22	; 0x01
    68d6:	08 95       	ret

000068d8 <_ZN7CTimerC14DisableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerC::DisableChannel(TIMER_CHANNELS channels)
{
	TCC0.CTRLB &= ~channels;
    68d8:	e0 e0       	ldi	r30, 0x00	; 0
    68da:	f8 e0       	ldi	r31, 0x08	; 8
    68dc:	81 81       	ldd	r24, Z+1	; 0x01
    68de:	60 95       	com	r22
    68e0:	68 23       	and	r22, r24
    68e2:	61 83       	std	Z+1, r22	; 0x01
    68e4:	08 95       	ret

000068e6 <_ZN7CTimerC9SetPeriodEj>:
}

void CTimerC::SetPeriod(uint16_t value)
{
	TCC0.PER = value;
    68e6:	60 93 26 08 	sts	0x0826, r22	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
    68ea:	70 93 27 08 	sts	0x0827, r23	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
    68ee:	08 95       	ret

000068f0 <_ZN7CTimerC8SetCOMPAEj>:
}

void CTimerC::SetCOMPA(uint16_t value)
{
	TCC0.CCA = value;
    68f0:	60 93 28 08 	sts	0x0828, r22	; 0x800828 <__TEXT_REGION_LENGTH__+0x700828>
    68f4:	70 93 29 08 	sts	0x0829, r23	; 0x800829 <__TEXT_REGION_LENGTH__+0x700829>
    68f8:	08 95       	ret

000068fa <_ZN7CTimerC8SetCOMPBEj>:
}

void CTimerC::SetCOMPB(uint16_t value)
{
	TCC0.CCB = value;
    68fa:	60 93 2a 08 	sts	0x082A, r22	; 0x80082a <__TEXT_REGION_LENGTH__+0x70082a>
    68fe:	70 93 2b 08 	sts	0x082B, r23	; 0x80082b <__TEXT_REGION_LENGTH__+0x70082b>
    6902:	08 95       	ret

00006904 <_ZN7CTimerC8SetCOMPCEj>:
}

void CTimerC::SetCOMPC(uint16_t value)
{
	TCC0.CCC = value;
    6904:	60 93 2c 08 	sts	0x082C, r22	; 0x80082c <__TEXT_REGION_LENGTH__+0x70082c>
    6908:	70 93 2d 08 	sts	0x082D, r23	; 0x80082d <__TEXT_REGION_LENGTH__+0x70082d>
    690c:	08 95       	ret

0000690e <_ZN7CTimerC8SetCOMPDEj>:
}

void CTimerC::SetCOMPD(uint16_t value)
{
	TCC0.CCD = value;
    690e:	60 93 2e 08 	sts	0x082E, r22	; 0x80082e <__TEXT_REGION_LENGTH__+0x70082e>
    6912:	70 93 2f 08 	sts	0x082F, r23	; 0x80082f <__TEXT_REGION_LENGTH__+0x70082f>
    6916:	08 95       	ret

00006918 <_ZN7CTimerC14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>:
}

// Interrupts
void CTimerC::SetOVFCallback(ISRCallback func, void* owner, TC_OVFINTLVL_t intlvl)
{
	if (func != NULL)
    6918:	61 15       	cp	r22, r1
    691a:	71 05       	cpc	r23, r1
    691c:	29 f0       	breq	.+10     	; 0x6928 <_ZN7CTimerC14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum+0x10>
		TCC0.INTCTRLA |= intlvl;// = (TCC0.INTCTRLA & TC0_OVFINTLVL_gm) | intlvl;
    691e:	e0 e0       	ldi	r30, 0x00	; 0
    6920:	f8 e0       	ldi	r31, 0x08	; 8
    6922:	86 81       	ldd	r24, Z+6	; 0x06
    6924:	28 2b       	or	r18, r24
    6926:	26 83       	std	Z+6, r18	; 0x06
		
	InterruptFuncTable[TCC0_OVF_vect_num] = func;
    6928:	60 93 be 23 	sts	0x23BE, r22	; 0x8023be <InterruptFuncTable+0x1c>
    692c:	70 93 bf 23 	sts	0x23BF, r23	; 0x8023bf <InterruptFuncTable+0x1d>
	InterruptSenderTable[TCC0_OVF_vect_num] = owner;
    6930:	40 93 b4 24 	sts	0x24B4, r20	; 0x8024b4 <InterruptSenderTable+0x1c>
    6934:	50 93 b5 24 	sts	0x24B5, r21	; 0x8024b5 <InterruptSenderTable+0x1d>
    6938:	08 95       	ret

0000693a <_ZN7CTimerC14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>:
}

void CTimerC::SetERRCallback(ISRCallback func, void* owner, TC_ERRINTLVL_t intlvl)
{
	if (func != NULL)
    693a:	61 15       	cp	r22, r1
    693c:	71 05       	cpc	r23, r1
    693e:	29 f0       	breq	.+10     	; 0x694a <_ZN7CTimerC14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum+0x10>
		TCC0.INTCTRLA |= intlvl;// = (TCC0.INTCTRLA & TC0_ERRINTLVL_gm) | intlvl;
    6940:	e0 e0       	ldi	r30, 0x00	; 0
    6942:	f8 e0       	ldi	r31, 0x08	; 8
    6944:	86 81       	ldd	r24, Z+6	; 0x06
    6946:	28 2b       	or	r18, r24
    6948:	26 83       	std	Z+6, r18	; 0x06
	
	InterruptFuncTable[TCC0_ERR_vect_num] = func;
    694a:	60 93 c0 23 	sts	0x23C0, r22	; 0x8023c0 <InterruptFuncTable+0x1e>
    694e:	70 93 c1 23 	sts	0x23C1, r23	; 0x8023c1 <InterruptFuncTable+0x1f>
	InterruptSenderTable[TCC0_ERR_vect_num] = owner;
    6952:	40 93 b6 24 	sts	0x24B6, r20	; 0x8024b6 <InterruptSenderTable+0x1e>
    6956:	50 93 b7 24 	sts	0x24B7, r21	; 0x8024b7 <InterruptSenderTable+0x1f>
    695a:	08 95       	ret

0000695c <_ZN7CTimerC16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>:
}

void CTimerC::SetCOMPACallback(ISRCallback func, void* owner, TC_CCAINTLVL_t intlvl)
{
	if (func != NULL)
    695c:	61 15       	cp	r22, r1
    695e:	71 05       	cpc	r23, r1
    6960:	29 f0       	breq	.+10     	; 0x696c <_ZN7CTimerC16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum+0x10>
		TCC0.INTCTRLB |= intlvl;// = (TCC0.INTCTRLB & TC0_CCAINTLVL_gm) | intlvl;
    6962:	e0 e0       	ldi	r30, 0x00	; 0
    6964:	f8 e0       	ldi	r31, 0x08	; 8
    6966:	87 81       	ldd	r24, Z+7	; 0x07
    6968:	28 2b       	or	r18, r24
    696a:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCC0_CCA_vect_num] = func;
    696c:	60 93 c2 23 	sts	0x23C2, r22	; 0x8023c2 <InterruptFuncTable+0x20>
    6970:	70 93 c3 23 	sts	0x23C3, r23	; 0x8023c3 <InterruptFuncTable+0x21>
	InterruptSenderTable[TCC0_CCA_vect_num] = owner;
    6974:	40 93 b8 24 	sts	0x24B8, r20	; 0x8024b8 <InterruptSenderTable+0x20>
    6978:	50 93 b9 24 	sts	0x24B9, r21	; 0x8024b9 <InterruptSenderTable+0x21>
    697c:	08 95       	ret

0000697e <_ZN7CTimerC16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>:
}

void CTimerC::SetCOMPBCallback(ISRCallback func, void* owner, TC_CCBINTLVL_t intlvl)
{
	if (func != NULL)
    697e:	61 15       	cp	r22, r1
    6980:	71 05       	cpc	r23, r1
    6982:	29 f0       	breq	.+10     	; 0x698e <_ZN7CTimerC16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum+0x10>
		TCC0.INTCTRLB |= intlvl;// = (TCC0.INTCTRLB & TC0_CCBINTLVL_gm) | intlvl;
    6984:	e0 e0       	ldi	r30, 0x00	; 0
    6986:	f8 e0       	ldi	r31, 0x08	; 8
    6988:	87 81       	ldd	r24, Z+7	; 0x07
    698a:	28 2b       	or	r18, r24
    698c:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCC0_CCB_vect_num] = func;
    698e:	60 93 c4 23 	sts	0x23C4, r22	; 0x8023c4 <InterruptFuncTable+0x22>
    6992:	70 93 c5 23 	sts	0x23C5, r23	; 0x8023c5 <InterruptFuncTable+0x23>
	InterruptSenderTable[TCC0_CCB_vect_num] = owner;
    6996:	40 93 ba 24 	sts	0x24BA, r20	; 0x8024ba <InterruptSenderTable+0x22>
    699a:	50 93 bb 24 	sts	0x24BB, r21	; 0x8024bb <InterruptSenderTable+0x23>
    699e:	08 95       	ret

000069a0 <_ZN7CTimerC16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum>:
}

void CTimerC::SetCOMPCCallback(ISRCallback func, void* owner, TC_CCCINTLVL_t intlvl)
{
	if (func != NULL)
    69a0:	61 15       	cp	r22, r1
    69a2:	71 05       	cpc	r23, r1
    69a4:	29 f0       	breq	.+10     	; 0x69b0 <_ZN7CTimerC16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum+0x10>
		TCC0.INTCTRLB |= intlvl;// = (TCC0.INTCTRLB & TC0_CCCINTLVL_gm) | intlvl;
    69a6:	e0 e0       	ldi	r30, 0x00	; 0
    69a8:	f8 e0       	ldi	r31, 0x08	; 8
    69aa:	87 81       	ldd	r24, Z+7	; 0x07
    69ac:	28 2b       	or	r18, r24
    69ae:	27 83       	std	Z+7, r18	; 0x07
		
	InterruptFuncTable[TCC0_CCC_vect_num] = func;
    69b0:	60 93 c6 23 	sts	0x23C6, r22	; 0x8023c6 <InterruptFuncTable+0x24>
    69b4:	70 93 c7 23 	sts	0x23C7, r23	; 0x8023c7 <InterruptFuncTable+0x25>
	InterruptSenderTable[TCC0_CCC_vect_num] = owner;
    69b8:	40 93 bc 24 	sts	0x24BC, r20	; 0x8024bc <InterruptSenderTable+0x24>
    69bc:	50 93 bd 24 	sts	0x24BD, r21	; 0x8024bd <InterruptSenderTable+0x25>
    69c0:	08 95       	ret

000069c2 <_ZN7CTimerC16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum>:
}

void CTimerC::SetCOMPDCallback(ISRCallback func, void* owner, TC_CCDINTLVL_t intlvl)
{
	if (func != NULL)
    69c2:	61 15       	cp	r22, r1
    69c4:	71 05       	cpc	r23, r1
    69c6:	29 f0       	breq	.+10     	; 0x69d2 <_ZN7CTimerC16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum+0x10>
		TCC0.INTCTRLB |= intlvl;// = (TCC0.INTCTRLB & TC0_CCDINTLVL_gm) | intlvl;
    69c8:	e0 e0       	ldi	r30, 0x00	; 0
    69ca:	f8 e0       	ldi	r31, 0x08	; 8
    69cc:	87 81       	ldd	r24, Z+7	; 0x07
    69ce:	28 2b       	or	r18, r24
    69d0:	27 83       	std	Z+7, r18	; 0x07
		
	InterruptFuncTable[TCC0_CCD_vect_num] = func;
    69d2:	60 93 c8 23 	sts	0x23C8, r22	; 0x8023c8 <InterruptFuncTable+0x26>
    69d6:	70 93 c9 23 	sts	0x23C9, r23	; 0x8023c9 <InterruptFuncTable+0x27>
	InterruptSenderTable[TCC0_CCD_vect_num] = owner;
    69da:	40 93 be 24 	sts	0x24BE, r20	; 0x8024be <InterruptSenderTable+0x26>
    69de:	50 93 bf 24 	sts	0x24BF, r21	; 0x8024bf <InterruptSenderTable+0x27>
    69e2:	08 95       	ret

000069e4 <_ZN7CTimerCC1Ev>:

#include "CTimerC.h"
#include "../LaserLib/intx128.h"

// default constructor
CTimerC::CTimerC()
    69e4:	cf 93       	push	r28
    69e6:	df 93       	push	r29
    69e8:	ec 01       	movw	r28, r24
    69ea:	0e 94 f1 16 	call	0x2de2	; 0x2de2 <_ZN6CTimerC1Ev>
    69ee:	88 ef       	ldi	r24, 0xF8	; 248
    69f0:	92 e2       	ldi	r25, 0x22	; 34
    69f2:	88 83       	st	Y, r24
    69f4:	99 83       	std	Y+1, r25	; 0x01
{
} //CTimerC
    69f6:	df 91       	pop	r29
    69f8:	cf 91       	pop	r28
    69fa:	08 95       	ret

000069fc <_ZN7CTimerCD1Ev>:

// default destructor
CTimerC::~CTimerC()
    69fc:	28 ef       	ldi	r18, 0xF8	; 248
    69fe:	32 e2       	ldi	r19, 0x22	; 34
    6a00:	fc 01       	movw	r30, r24
    6a02:	20 83       	st	Z, r18
    6a04:	31 83       	std	Z+1, r19	; 0x01
    6a06:	0e 94 f7 16 	call	0x2dee	; 0x2dee <_ZN6CTimerD1Ev>
    6a0a:	08 95       	ret

00006a0c <_ZN8CTimerC110InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>:
} //~CTimerC1

// Basic timer functions
void CTimerC1::Initialize(TIMER_WAVEFORMGEN_MODE wgm, TIMER_CLOCKSELECT clock)
{
	clockSrc = clock;
    6a0c:	fc 01       	movw	r30, r24
    6a0e:	42 83       	std	Z+2, r20	; 0x02
	
	// Stop timer
	TCC1.CTRLA = (TCC1.CTRLA & ~TC1_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6a10:	e0 e4       	ldi	r30, 0x40	; 64
    6a12:	f8 e0       	ldi	r31, 0x08	; 8
    6a14:	80 81       	ld	r24, Z
    6a16:	80 7f       	andi	r24, 0xF0	; 240
    6a18:	80 83       	st	Z, r24
	
	// No events
	TCC1.CTRLD = TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
    6a1a:	13 82       	std	Z+3, r1	; 0x03
	
	// Reset
	TCC1.CNT = 0;
    6a1c:	10 a2       	std	Z+32, r1	; 0x20
    6a1e:	11 a2       	std	Z+33, r1	; 0x21
	TCC1.CCA = 0;
    6a20:	10 a6       	std	Z+40, r1	; 0x28
    6a22:	11 a6       	std	Z+41, r1	; 0x29
	TCC1.CCB = 0;
    6a24:	12 a6       	std	Z+42, r1	; 0x2a
    6a26:	13 a6       	std	Z+43, r1	; 0x2b
	TCC1.PER = 0;
    6a28:	16 a2       	std	Z+38, r1	; 0x26
    6a2a:	17 a2       	std	Z+39, r1	; 0x27
	
	// Waveform generation mode
	TCC1.CTRLB = (TCC1.CTRLB & ~TC1_WGMODE_gm) | wgm;
    6a2c:	81 81       	ldd	r24, Z+1	; 0x01
    6a2e:	88 7f       	andi	r24, 0xF8	; 248
    6a30:	68 2b       	or	r22, r24
    6a32:	61 83       	std	Z+1, r22	; 0x01
	
	// Start timer
	//TCC1.CTRLA = (TCC1.CTRLA & TC1_CLKSEL_gm) | clock;
	
	// Disable interrupts
	TCC1.INTCTRLA = TC_OVFINTLVL_OFF_gc;
    6a34:	16 82       	std	Z+6, r1	; 0x06
	TCC1.INTCTRLB = TC_CCDINTLVL_OFF_gc | TC_CCCINTLVL_OFF_gc | TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
    6a36:	17 82       	std	Z+7, r1	; 0x07
    6a38:	08 95       	ret

00006a3a <_ZN8CTimerC15StartEj>:
}

void CTimerC1::Start(uint16_t period)
{
	// Set period of timer
	TCC1.PER = period;
    6a3a:	e0 e4       	ldi	r30, 0x40	; 64
    6a3c:	f8 e0       	ldi	r31, 0x08	; 8
    6a3e:	66 a3       	std	Z+38, r22	; 0x26
    6a40:	77 a3       	std	Z+39, r23	; 0x27
	
	// Start timer
	TCC1.CTRLA = (TCC1.CTRLA & ~TC1_CLKSEL_gm) | clockSrc;
    6a42:	20 81       	ld	r18, Z
    6a44:	20 7f       	andi	r18, 0xF0	; 240
    6a46:	dc 01       	movw	r26, r24
    6a48:	12 96       	adiw	r26, 0x02	; 2
    6a4a:	9c 91       	ld	r25, X
    6a4c:	82 2f       	mov	r24, r18
    6a4e:	89 2b       	or	r24, r25
    6a50:	80 83       	st	Z, r24
    6a52:	08 95       	ret

00006a54 <_ZN8CTimerC14StopEv>:
}

void CTimerC1::Stop()
{
	// Stop timer
	TCC1.CTRLA = (TCC1.CTRLA & ~TC1_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6a54:	e0 e4       	ldi	r30, 0x40	; 64
    6a56:	f8 e0       	ldi	r31, 0x08	; 8
    6a58:	80 81       	ld	r24, Z
    6a5a:	80 7f       	andi	r24, 0xF0	; 240
    6a5c:	80 83       	st	Z, r24
	TCC1.CNT = 0;
    6a5e:	10 a2       	std	Z+32, r1	; 0x20
    6a60:	11 a2       	std	Z+33, r1	; 0x21
    6a62:	08 95       	ret

00006a64 <_ZN8CTimerC15ResetEv>:
}

void CTimerC1::Reset()
{
	// Stop timer
	uint16_t tmp = TCC1.CTRLA;
    6a64:	e0 e4       	ldi	r30, 0x40	; 64
    6a66:	f8 e0       	ldi	r31, 0x08	; 8
    6a68:	90 81       	ld	r25, Z
	TCC1.CTRLA = (TCC1.CTRLA & ~TC1_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6a6a:	80 81       	ld	r24, Z
    6a6c:	80 7f       	andi	r24, 0xF0	; 240
    6a6e:	80 83       	st	Z, r24
	TCC1.CNT = 0;
    6a70:	10 a2       	std	Z+32, r1	; 0x20
    6a72:	11 a2       	std	Z+33, r1	; 0x21
	TCC1.CTRLA = tmp;
    6a74:	90 83       	st	Z, r25
    6a76:	08 95       	ret

00006a78 <_ZN8CTimerC113EnableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerC1::EnableChannel(TIMER_CHANNELS channels)
{
	TCC1.CTRLB = (TCC1.CTRLB & ~0xF0) | channels;
    6a78:	e0 e4       	ldi	r30, 0x40	; 64
    6a7a:	f8 e0       	ldi	r31, 0x08	; 8
    6a7c:	81 81       	ldd	r24, Z+1	; 0x01
    6a7e:	8f 70       	andi	r24, 0x0F	; 15
    6a80:	68 2b       	or	r22, r24
    6a82:	61 83       	std	Z+1, r22	; 0x01
    6a84:	08 95       	ret

00006a86 <_ZN8CTimerC114DisableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerC1::DisableChannel(TIMER_CHANNELS channels)
{
	TCC1.CTRLB &= ~channels;
    6a86:	e0 e4       	ldi	r30, 0x40	; 64
    6a88:	f8 e0       	ldi	r31, 0x08	; 8
    6a8a:	81 81       	ldd	r24, Z+1	; 0x01
    6a8c:	60 95       	com	r22
    6a8e:	68 23       	and	r22, r24
    6a90:	61 83       	std	Z+1, r22	; 0x01
    6a92:	08 95       	ret

00006a94 <_ZN8CTimerC19SetPeriodEj>:
}

void CTimerC1::SetPeriod(uint16_t value)
{
	TCC1.PER = value;
    6a94:	60 93 66 08 	sts	0x0866, r22	; 0x800866 <__TEXT_REGION_LENGTH__+0x700866>
    6a98:	70 93 67 08 	sts	0x0867, r23	; 0x800867 <__TEXT_REGION_LENGTH__+0x700867>
    6a9c:	08 95       	ret

00006a9e <_ZN8CTimerC18SetCOMPAEj>:
}

void CTimerC1::SetCOMPA(uint16_t value)
{
	TCC1.CCA = value;
    6a9e:	60 93 68 08 	sts	0x0868, r22	; 0x800868 <__TEXT_REGION_LENGTH__+0x700868>
    6aa2:	70 93 69 08 	sts	0x0869, r23	; 0x800869 <__TEXT_REGION_LENGTH__+0x700869>
    6aa6:	08 95       	ret

00006aa8 <_ZN8CTimerC18SetCOMPBEj>:
}

void CTimerC1::SetCOMPB(uint16_t value)
{
	TCC1.CCB = value;
    6aa8:	60 93 6a 08 	sts	0x086A, r22	; 0x80086a <__TEXT_REGION_LENGTH__+0x70086a>
    6aac:	70 93 6b 08 	sts	0x086B, r23	; 0x80086b <__TEXT_REGION_LENGTH__+0x70086b>
    6ab0:	08 95       	ret

00006ab2 <_ZN8CTimerC114SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>:
}

// Interrupts
void CTimerC1::SetOVFCallback(ISRCallback func, void* owner, TC_OVFINTLVL_t intlvl)
{
	if (func != NULL)
    6ab2:	61 15       	cp	r22, r1
    6ab4:	71 05       	cpc	r23, r1
    6ab6:	31 f0       	breq	.+12     	; 0x6ac4 <_ZN8CTimerC114SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum+0x12>
	TCC1.INTCTRLA = (TCC1.INTCTRLA & TC1_OVFINTLVL_gm) | intlvl;
    6ab8:	e0 e4       	ldi	r30, 0x40	; 64
    6aba:	f8 e0       	ldi	r31, 0x08	; 8
    6abc:	86 81       	ldd	r24, Z+6	; 0x06
    6abe:	83 70       	andi	r24, 0x03	; 3
    6ac0:	28 2b       	or	r18, r24
    6ac2:	26 83       	std	Z+6, r18	; 0x06
	
	InterruptFuncTable[TCC1_OVF_vect_num] = func;
    6ac4:	60 93 ca 23 	sts	0x23CA, r22	; 0x8023ca <InterruptFuncTable+0x28>
    6ac8:	70 93 cb 23 	sts	0x23CB, r23	; 0x8023cb <InterruptFuncTable+0x29>
	InterruptSenderTable[TCC1_OVF_vect_num] = owner;
    6acc:	40 93 c0 24 	sts	0x24C0, r20	; 0x8024c0 <InterruptSenderTable+0x28>
    6ad0:	50 93 c1 24 	sts	0x24C1, r21	; 0x8024c1 <InterruptSenderTable+0x29>
    6ad4:	08 95       	ret

00006ad6 <_ZN8CTimerC114SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>:
}

void CTimerC1::SetERRCallback(ISRCallback func, void* owner, TC_ERRINTLVL_t intlvl)
{
	if (func != NULL)
    6ad6:	61 15       	cp	r22, r1
    6ad8:	71 05       	cpc	r23, r1
    6ada:	31 f0       	breq	.+12     	; 0x6ae8 <_ZN8CTimerC114SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum+0x12>
	TCC1.INTCTRLA = (TCC1.INTCTRLA & TC1_ERRINTLVL_gm) | intlvl;
    6adc:	e0 e4       	ldi	r30, 0x40	; 64
    6ade:	f8 e0       	ldi	r31, 0x08	; 8
    6ae0:	86 81       	ldd	r24, Z+6	; 0x06
    6ae2:	8c 70       	andi	r24, 0x0C	; 12
    6ae4:	28 2b       	or	r18, r24
    6ae6:	26 83       	std	Z+6, r18	; 0x06
	
	InterruptFuncTable[TCC1_ERR_vect_num] = func;
    6ae8:	60 93 cc 23 	sts	0x23CC, r22	; 0x8023cc <InterruptFuncTable+0x2a>
    6aec:	70 93 cd 23 	sts	0x23CD, r23	; 0x8023cd <InterruptFuncTable+0x2b>
	InterruptSenderTable[TCC1_ERR_vect_num] = owner;
    6af0:	40 93 c2 24 	sts	0x24C2, r20	; 0x8024c2 <InterruptSenderTable+0x2a>
    6af4:	50 93 c3 24 	sts	0x24C3, r21	; 0x8024c3 <InterruptSenderTable+0x2b>
    6af8:	08 95       	ret

00006afa <_ZN8CTimerC116SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>:
}

void CTimerC1::SetCOMPACallback(ISRCallback func, void* owner, TC_CCAINTLVL_t intlvl)
{
	if (func != NULL)
    6afa:	61 15       	cp	r22, r1
    6afc:	71 05       	cpc	r23, r1
    6afe:	31 f0       	breq	.+12     	; 0x6b0c <_ZN8CTimerC116SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum+0x12>
	TCC1.INTCTRLB = (TCC1.INTCTRLB & TC1_CCAINTLVL_gm) | intlvl;
    6b00:	e0 e4       	ldi	r30, 0x40	; 64
    6b02:	f8 e0       	ldi	r31, 0x08	; 8
    6b04:	87 81       	ldd	r24, Z+7	; 0x07
    6b06:	83 70       	andi	r24, 0x03	; 3
    6b08:	28 2b       	or	r18, r24
    6b0a:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCC1_CCA_vect_num] = func;
    6b0c:	60 93 ce 23 	sts	0x23CE, r22	; 0x8023ce <InterruptFuncTable+0x2c>
    6b10:	70 93 cf 23 	sts	0x23CF, r23	; 0x8023cf <InterruptFuncTable+0x2d>
	InterruptSenderTable[TCC1_CCA_vect_num] = owner;
    6b14:	40 93 c4 24 	sts	0x24C4, r20	; 0x8024c4 <InterruptSenderTable+0x2c>
    6b18:	50 93 c5 24 	sts	0x24C5, r21	; 0x8024c5 <InterruptSenderTable+0x2d>
    6b1c:	08 95       	ret

00006b1e <_ZN8CTimerC116SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>:
}

void CTimerC1::SetCOMPBCallback(ISRCallback func, void* owner, TC_CCBINTLVL_t intlvl)
{
	if (func != NULL)
    6b1e:	61 15       	cp	r22, r1
    6b20:	71 05       	cpc	r23, r1
    6b22:	31 f0       	breq	.+12     	; 0x6b30 <_ZN8CTimerC116SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum+0x12>
	TCC1.INTCTRLB = (TCC1.INTCTRLB & TC1_CCBINTLVL_gm) | intlvl;
    6b24:	e0 e4       	ldi	r30, 0x40	; 64
    6b26:	f8 e0       	ldi	r31, 0x08	; 8
    6b28:	87 81       	ldd	r24, Z+7	; 0x07
    6b2a:	8c 70       	andi	r24, 0x0C	; 12
    6b2c:	28 2b       	or	r18, r24
    6b2e:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCC1_CCB_vect_num] = func;
    6b30:	60 93 d0 23 	sts	0x23D0, r22	; 0x8023d0 <InterruptFuncTable+0x2e>
    6b34:	70 93 d1 23 	sts	0x23D1, r23	; 0x8023d1 <InterruptFuncTable+0x2f>
	InterruptSenderTable[TCC1_CCB_vect_num] = owner;
    6b38:	40 93 c6 24 	sts	0x24C6, r20	; 0x8024c6 <InterruptSenderTable+0x2e>
    6b3c:	50 93 c7 24 	sts	0x24C7, r21	; 0x8024c7 <InterruptSenderTable+0x2f>
    6b40:	08 95       	ret

00006b42 <_ZN8CTimerC1C1Ev>:

#include "CTimerC1.h"
#include "../LaserLib/intx128.h"

// default constructor
CTimerC1::CTimerC1()
    6b42:	cf 93       	push	r28
    6b44:	df 93       	push	r29
    6b46:	ec 01       	movw	r28, r24
    6b48:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <_ZN7CTimer1C1Ev>
    6b4c:	8c e1       	ldi	r24, 0x1C	; 28
    6b4e:	93 e2       	ldi	r25, 0x23	; 35
    6b50:	88 83       	st	Y, r24
    6b52:	99 83       	std	Y+1, r25	; 0x01
{
} //CTimerC1
    6b54:	df 91       	pop	r29
    6b56:	cf 91       	pop	r28
    6b58:	08 95       	ret

00006b5a <_ZN8CTimerC1D1Ev>:

// default destructor
CTimerC1::~CTimerC1()
    6b5a:	2c e1       	ldi	r18, 0x1C	; 28
    6b5c:	33 e2       	ldi	r19, 0x23	; 35
    6b5e:	fc 01       	movw	r30, r24
    6b60:	20 83       	st	Z, r18
    6b62:	31 83       	std	Z+1, r19	; 0x01
    6b64:	0e 94 fe 16 	call	0x2dfc	; 0x2dfc <_ZN7CTimer1D1Ev>
    6b68:	08 95       	ret

00006b6a <_ZN7CTimerD10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>:
} //~CTimerD

// Basic timer functions
void CTimerD::Initialize(TIMER_WAVEFORMGEN_MODE wgm, TIMER_CLOCKSELECT clock)
{	
	clockSrc = clock;
    6b6a:	fc 01       	movw	r30, r24
    6b6c:	42 83       	std	Z+2, r20	; 0x02
	
	// Stop timer
	TCD0.CTRLA = (TCD0.CTRLA & ~TC0_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6b6e:	e0 e0       	ldi	r30, 0x00	; 0
    6b70:	f9 e0       	ldi	r31, 0x09	; 9
    6b72:	80 81       	ld	r24, Z
    6b74:	80 7f       	andi	r24, 0xF0	; 240
    6b76:	80 83       	st	Z, r24
	
	// No events
	TCD0.CTRLD = TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
    6b78:	13 82       	std	Z+3, r1	; 0x03
	
	// Reset
	TCD0.CNT = 0;
    6b7a:	10 a2       	std	Z+32, r1	; 0x20
    6b7c:	11 a2       	std	Z+33, r1	; 0x21
	TCD0.CCA = 0;
    6b7e:	10 a6       	std	Z+40, r1	; 0x28
    6b80:	11 a6       	std	Z+41, r1	; 0x29
	TCD0.CCB = 0;
    6b82:	12 a6       	std	Z+42, r1	; 0x2a
    6b84:	13 a6       	std	Z+43, r1	; 0x2b
	TCD0.CCC = 0;
    6b86:	14 a6       	std	Z+44, r1	; 0x2c
    6b88:	15 a6       	std	Z+45, r1	; 0x2d
	TCD0.CCD = 0;
    6b8a:	16 a6       	std	Z+46, r1	; 0x2e
    6b8c:	17 a6       	std	Z+47, r1	; 0x2f
	TCD0.PER = 0;
    6b8e:	16 a2       	std	Z+38, r1	; 0x26
    6b90:	17 a2       	std	Z+39, r1	; 0x27
	
	// Waveform generation mode
	TCD0.CTRLB = (TCD0.CTRLB & ~TC0_WGMODE_gm) | wgm;
    6b92:	81 81       	ldd	r24, Z+1	; 0x01
    6b94:	88 7f       	andi	r24, 0xF8	; 248
    6b96:	68 2b       	or	r22, r24
    6b98:	61 83       	std	Z+1, r22	; 0x01
	
	// Start timer
	//TCD0.CTRLA = (TCD0.CTRLA & TC0_CLKSEL_gm) | clock;
	
	// Disable interrupts
	TCD0.INTCTRLA = TC_OVFINTLVL_OFF_gc;
    6b9a:	16 82       	std	Z+6, r1	; 0x06
	TCD0.INTCTRLB = TC_CCDINTLVL_OFF_gc | TC_CCCINTLVL_OFF_gc | TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
    6b9c:	17 82       	std	Z+7, r1	; 0x07
    6b9e:	08 95       	ret

00006ba0 <_ZN7CTimerD5StartEj>:
}

void CTimerD::Start(uint16_t period)
{
	// Set period of timer
	TCD0.PER = period;
    6ba0:	e0 e0       	ldi	r30, 0x00	; 0
    6ba2:	f9 e0       	ldi	r31, 0x09	; 9
    6ba4:	66 a3       	std	Z+38, r22	; 0x26
    6ba6:	77 a3       	std	Z+39, r23	; 0x27
	
	// Start timer
	TCD0.CTRLA = (TCD0.CTRLA & ~TC0_CLKSEL_gm) | clockSrc;
    6ba8:	20 81       	ld	r18, Z
    6baa:	20 7f       	andi	r18, 0xF0	; 240
    6bac:	dc 01       	movw	r26, r24
    6bae:	12 96       	adiw	r26, 0x02	; 2
    6bb0:	9c 91       	ld	r25, X
    6bb2:	82 2f       	mov	r24, r18
    6bb4:	89 2b       	or	r24, r25
    6bb6:	80 83       	st	Z, r24
    6bb8:	08 95       	ret

00006bba <_ZN7CTimerD4StopEv>:
}

void CTimerD::Stop()
{
	// Stop timer
	TCD0.CTRLA = (TCD0.CTRLA & ~TC0_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6bba:	e0 e0       	ldi	r30, 0x00	; 0
    6bbc:	f9 e0       	ldi	r31, 0x09	; 9
    6bbe:	80 81       	ld	r24, Z
    6bc0:	80 7f       	andi	r24, 0xF0	; 240
    6bc2:	80 83       	st	Z, r24
	TCD0.CNT = 0;
    6bc4:	10 a2       	std	Z+32, r1	; 0x20
    6bc6:	11 a2       	std	Z+33, r1	; 0x21
    6bc8:	08 95       	ret

00006bca <_ZN7CTimerD13EnableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerD::EnableChannel(TIMER_CHANNELS channels)
{
	TCD0.CTRLB = (TCD0.CTRLB & ~0xF0) | channels;
    6bca:	e0 e0       	ldi	r30, 0x00	; 0
    6bcc:	f9 e0       	ldi	r31, 0x09	; 9
    6bce:	81 81       	ldd	r24, Z+1	; 0x01
    6bd0:	8f 70       	andi	r24, 0x0F	; 15
    6bd2:	68 2b       	or	r22, r24
    6bd4:	61 83       	std	Z+1, r22	; 0x01
    6bd6:	08 95       	ret

00006bd8 <_ZN7CTimerD14DisableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerD::DisableChannel(TIMER_CHANNELS channels)
{
	TCD0.CTRLB &= ~channels;
    6bd8:	e0 e0       	ldi	r30, 0x00	; 0
    6bda:	f9 e0       	ldi	r31, 0x09	; 9
    6bdc:	81 81       	ldd	r24, Z+1	; 0x01
    6bde:	60 95       	com	r22
    6be0:	68 23       	and	r22, r24
    6be2:	61 83       	std	Z+1, r22	; 0x01
    6be4:	08 95       	ret

00006be6 <_ZN7CTimerD9SetPeriodEj>:
}

void CTimerD::SetPeriod(uint16_t value)
{
	TCD0.PER = value;
    6be6:	60 93 26 09 	sts	0x0926, r22	; 0x800926 <__TEXT_REGION_LENGTH__+0x700926>
    6bea:	70 93 27 09 	sts	0x0927, r23	; 0x800927 <__TEXT_REGION_LENGTH__+0x700927>
    6bee:	08 95       	ret

00006bf0 <_ZN7CTimerD8SetCOMPAEj>:
}

void CTimerD::SetCOMPA(uint16_t value)
{
	TCD0.CCA = value;
    6bf0:	60 93 28 09 	sts	0x0928, r22	; 0x800928 <__TEXT_REGION_LENGTH__+0x700928>
    6bf4:	70 93 29 09 	sts	0x0929, r23	; 0x800929 <__TEXT_REGION_LENGTH__+0x700929>
    6bf8:	08 95       	ret

00006bfa <_ZN7CTimerD8SetCOMPBEj>:
}

void CTimerD::SetCOMPB(uint16_t value)
{
	TCD0.CCB = value;
    6bfa:	60 93 2a 09 	sts	0x092A, r22	; 0x80092a <__TEXT_REGION_LENGTH__+0x70092a>
    6bfe:	70 93 2b 09 	sts	0x092B, r23	; 0x80092b <__TEXT_REGION_LENGTH__+0x70092b>
    6c02:	08 95       	ret

00006c04 <_ZN7CTimerD8SetCOMPCEj>:
}

void CTimerD::SetCOMPC(uint16_t value)
{
	TCD0.CCC = value;
    6c04:	60 93 2c 09 	sts	0x092C, r22	; 0x80092c <__TEXT_REGION_LENGTH__+0x70092c>
    6c08:	70 93 2d 09 	sts	0x092D, r23	; 0x80092d <__TEXT_REGION_LENGTH__+0x70092d>
    6c0c:	08 95       	ret

00006c0e <_ZN7CTimerD8SetCOMPDEj>:
}

void CTimerD::SetCOMPD(uint16_t value)
{
	TCD0.CCD = value;
    6c0e:	60 93 2e 09 	sts	0x092E, r22	; 0x80092e <__TEXT_REGION_LENGTH__+0x70092e>
    6c12:	70 93 2f 09 	sts	0x092F, r23	; 0x80092f <__TEXT_REGION_LENGTH__+0x70092f>
    6c16:	08 95       	ret

00006c18 <_ZN7CTimerD14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>:
}

// Interrupts
void CTimerD::SetOVFCallback(ISRCallback func, void* owner, TC_OVFINTLVL_t intlvl)
{
	if (func != NULL)
    6c18:	61 15       	cp	r22, r1
    6c1a:	71 05       	cpc	r23, r1
    6c1c:	29 f0       	breq	.+10     	; 0x6c28 <_ZN7CTimerD14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum+0x10>
		TCD0.INTCTRLA |= intlvl;// = (TCD0.INTCTRLA & TC0_OVFINTLVL_gm) | intlvl;
    6c1e:	e0 e0       	ldi	r30, 0x00	; 0
    6c20:	f9 e0       	ldi	r31, 0x09	; 9
    6c22:	86 81       	ldd	r24, Z+6	; 0x06
    6c24:	28 2b       	or	r18, r24
    6c26:	26 83       	std	Z+6, r18	; 0x06
		
	InterruptFuncTable[TCD0_OVF_vect_num] = func;
    6c28:	60 93 3c 24 	sts	0x243C, r22	; 0x80243c <InterruptFuncTable+0x9a>
    6c2c:	70 93 3d 24 	sts	0x243D, r23	; 0x80243d <InterruptFuncTable+0x9b>
	InterruptSenderTable[TCD0_OVF_vect_num] = owner;
    6c30:	40 93 32 25 	sts	0x2532, r20	; 0x802532 <InterruptSenderTable+0x9a>
    6c34:	50 93 33 25 	sts	0x2533, r21	; 0x802533 <InterruptSenderTable+0x9b>
    6c38:	08 95       	ret

00006c3a <_ZN7CTimerD14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>:
}

void CTimerD::SetERRCallback(ISRCallback func, void* owner, TC_ERRINTLVL_t intlvl)
{
	if (func != NULL)
    6c3a:	61 15       	cp	r22, r1
    6c3c:	71 05       	cpc	r23, r1
    6c3e:	29 f0       	breq	.+10     	; 0x6c4a <_ZN7CTimerD14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum+0x10>
		TCD0.INTCTRLA |= intlvl;// = (TCD0.INTCTRLA & TC0_ERRINTLVL_gm) | intlvl;
    6c40:	e0 e0       	ldi	r30, 0x00	; 0
    6c42:	f9 e0       	ldi	r31, 0x09	; 9
    6c44:	86 81       	ldd	r24, Z+6	; 0x06
    6c46:	28 2b       	or	r18, r24
    6c48:	26 83       	std	Z+6, r18	; 0x06
	
	InterruptFuncTable[TCD0_ERR_vect_num] = func;
    6c4a:	60 93 3e 24 	sts	0x243E, r22	; 0x80243e <InterruptFuncTable+0x9c>
    6c4e:	70 93 3f 24 	sts	0x243F, r23	; 0x80243f <InterruptFuncTable+0x9d>
	InterruptSenderTable[TCD0_ERR_vect_num] = owner;
    6c52:	40 93 34 25 	sts	0x2534, r20	; 0x802534 <InterruptSenderTable+0x9c>
    6c56:	50 93 35 25 	sts	0x2535, r21	; 0x802535 <InterruptSenderTable+0x9d>
    6c5a:	08 95       	ret

00006c5c <_ZN7CTimerD16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>:
}

void CTimerD::SetCOMPACallback(ISRCallback func, void* owner, TC_CCAINTLVL_t intlvl)
{
	if (func != NULL)
    6c5c:	61 15       	cp	r22, r1
    6c5e:	71 05       	cpc	r23, r1
    6c60:	29 f0       	breq	.+10     	; 0x6c6c <_ZN7CTimerD16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum+0x10>
		TCD0.INTCTRLB |= intlvl;// = (TCD0.INTCTRLB & TC0_CCAINTLVL_gm) | intlvl;
    6c62:	e0 e0       	ldi	r30, 0x00	; 0
    6c64:	f9 e0       	ldi	r31, 0x09	; 9
    6c66:	87 81       	ldd	r24, Z+7	; 0x07
    6c68:	28 2b       	or	r18, r24
    6c6a:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCD0_CCA_vect_num] = func;
    6c6c:	60 93 40 24 	sts	0x2440, r22	; 0x802440 <InterruptFuncTable+0x9e>
    6c70:	70 93 41 24 	sts	0x2441, r23	; 0x802441 <InterruptFuncTable+0x9f>
	InterruptSenderTable[TCD0_CCA_vect_num] = owner;
    6c74:	40 93 36 25 	sts	0x2536, r20	; 0x802536 <InterruptSenderTable+0x9e>
    6c78:	50 93 37 25 	sts	0x2537, r21	; 0x802537 <InterruptSenderTable+0x9f>
    6c7c:	08 95       	ret

00006c7e <_ZN7CTimerD16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>:
}

void CTimerD::SetCOMPBCallback(ISRCallback func, void* owner, TC_CCBINTLVL_t intlvl)
{
	if (func != NULL)
    6c7e:	61 15       	cp	r22, r1
    6c80:	71 05       	cpc	r23, r1
    6c82:	29 f0       	breq	.+10     	; 0x6c8e <_ZN7CTimerD16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum+0x10>
		TCD0.INTCTRLB |= intlvl;//= (TCD0.INTCTRLB & TC0_CCBINTLVL_gm) | intlvl;
    6c84:	e0 e0       	ldi	r30, 0x00	; 0
    6c86:	f9 e0       	ldi	r31, 0x09	; 9
    6c88:	87 81       	ldd	r24, Z+7	; 0x07
    6c8a:	28 2b       	or	r18, r24
    6c8c:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCD0_CCB_vect_num] = func;
    6c8e:	60 93 42 24 	sts	0x2442, r22	; 0x802442 <InterruptFuncTable+0xa0>
    6c92:	70 93 43 24 	sts	0x2443, r23	; 0x802443 <InterruptFuncTable+0xa1>
	InterruptSenderTable[TCD0_CCB_vect_num] = owner;
    6c96:	40 93 38 25 	sts	0x2538, r20	; 0x802538 <InterruptSenderTable+0xa0>
    6c9a:	50 93 39 25 	sts	0x2539, r21	; 0x802539 <InterruptSenderTable+0xa1>
    6c9e:	08 95       	ret

00006ca0 <_ZN7CTimerD16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum>:
}

void CTimerD::SetCOMPCCallback(ISRCallback func, void* owner, TC_CCCINTLVL_t intlvl)
{
	if (func != NULL)
    6ca0:	61 15       	cp	r22, r1
    6ca2:	71 05       	cpc	r23, r1
    6ca4:	29 f0       	breq	.+10     	; 0x6cb0 <_ZN7CTimerD16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum+0x10>
		TCD0.INTCTRLB |= intlvl;// = (TCD0.INTCTRLB & TC0_CCCINTLVL_gm) | intlvl;
    6ca6:	e0 e0       	ldi	r30, 0x00	; 0
    6ca8:	f9 e0       	ldi	r31, 0x09	; 9
    6caa:	87 81       	ldd	r24, Z+7	; 0x07
    6cac:	28 2b       	or	r18, r24
    6cae:	27 83       	std	Z+7, r18	; 0x07
		
	InterruptFuncTable[TCD0_CCC_vect_num] = func;
    6cb0:	60 93 44 24 	sts	0x2444, r22	; 0x802444 <InterruptFuncTable+0xa2>
    6cb4:	70 93 45 24 	sts	0x2445, r23	; 0x802445 <InterruptFuncTable+0xa3>
	InterruptSenderTable[TCD0_CCC_vect_num] = owner;
    6cb8:	40 93 3a 25 	sts	0x253A, r20	; 0x80253a <InterruptSenderTable+0xa2>
    6cbc:	50 93 3b 25 	sts	0x253B, r21	; 0x80253b <InterruptSenderTable+0xa3>
    6cc0:	08 95       	ret

00006cc2 <_ZN7CTimerD16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum>:
}

void CTimerD::SetCOMPDCallback(ISRCallback func, void* owner, TC_CCDINTLVL_t intlvl)
{
	if (func != NULL)
    6cc2:	61 15       	cp	r22, r1
    6cc4:	71 05       	cpc	r23, r1
    6cc6:	29 f0       	breq	.+10     	; 0x6cd2 <_ZN7CTimerD16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum+0x10>
		TCD0.INTCTRLB |= intlvl;// = (TCD0.INTCTRLB & TC0_CCDINTLVL_gm) | intlvl;
    6cc8:	e0 e0       	ldi	r30, 0x00	; 0
    6cca:	f9 e0       	ldi	r31, 0x09	; 9
    6ccc:	87 81       	ldd	r24, Z+7	; 0x07
    6cce:	28 2b       	or	r18, r24
    6cd0:	27 83       	std	Z+7, r18	; 0x07
		
	InterruptFuncTable[TCD0_CCD_vect_num] = func;
    6cd2:	60 93 46 24 	sts	0x2446, r22	; 0x802446 <InterruptFuncTable+0xa4>
    6cd6:	70 93 47 24 	sts	0x2447, r23	; 0x802447 <InterruptFuncTable+0xa5>
	InterruptSenderTable[TCD0_CCD_vect_num] = owner;
    6cda:	40 93 3c 25 	sts	0x253C, r20	; 0x80253c <InterruptSenderTable+0xa4>
    6cde:	50 93 3d 25 	sts	0x253D, r21	; 0x80253d <InterruptSenderTable+0xa5>
    6ce2:	08 95       	ret

00006ce4 <_ZN7CTimerDC1Ev>:

#include "CTimerD.h"
#include "../LaserLib/intx128.h"

// default constructor
CTimerD::CTimerD()
    6ce4:	cf 93       	push	r28
    6ce6:	df 93       	push	r29
    6ce8:	ec 01       	movw	r28, r24
    6cea:	0e 94 f1 16 	call	0x2de2	; 0x2de2 <_ZN6CTimerC1Ev>
    6cee:	8a e3       	ldi	r24, 0x3A	; 58
    6cf0:	93 e2       	ldi	r25, 0x23	; 35
    6cf2:	88 83       	st	Y, r24
    6cf4:	99 83       	std	Y+1, r25	; 0x01
{
} //CTimerD
    6cf6:	df 91       	pop	r29
    6cf8:	cf 91       	pop	r28
    6cfa:	08 95       	ret

00006cfc <_ZN7CTimerDD1Ev>:

// default destructor
CTimerD::~CTimerD()
    6cfc:	2a e3       	ldi	r18, 0x3A	; 58
    6cfe:	33 e2       	ldi	r19, 0x23	; 35
    6d00:	fc 01       	movw	r30, r24
    6d02:	20 83       	st	Z, r18
    6d04:	31 83       	std	Z+1, r19	; 0x01
    6d06:	0e 94 f7 16 	call	0x2dee	; 0x2dee <_ZN6CTimerD1Ev>
    6d0a:	08 95       	ret

00006d0c <_ZN8CTimerD110InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>:
} //~CTimerD1

// Basic timer functions
void CTimerD1::Initialize(TIMER_WAVEFORMGEN_MODE wgm, TIMER_CLOCKSELECT clock)
{
	clockSrc = clock;
    6d0c:	fc 01       	movw	r30, r24
    6d0e:	42 83       	std	Z+2, r20	; 0x02
	
	// Stop timer
	TCD1.CTRLA = (TCD1.CTRLA & ~TC1_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6d10:	e0 e4       	ldi	r30, 0x40	; 64
    6d12:	f9 e0       	ldi	r31, 0x09	; 9
    6d14:	80 81       	ld	r24, Z
    6d16:	80 7f       	andi	r24, 0xF0	; 240
    6d18:	80 83       	st	Z, r24
	
	// No events
	TCD1.CTRLD = TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
    6d1a:	13 82       	std	Z+3, r1	; 0x03
	
	// Reset
	TCD1.CNT = 0;
    6d1c:	10 a2       	std	Z+32, r1	; 0x20
    6d1e:	11 a2       	std	Z+33, r1	; 0x21
	TCD1.CCA = 0;
    6d20:	10 a6       	std	Z+40, r1	; 0x28
    6d22:	11 a6       	std	Z+41, r1	; 0x29
	TCD1.CCB = 0;
    6d24:	12 a6       	std	Z+42, r1	; 0x2a
    6d26:	13 a6       	std	Z+43, r1	; 0x2b
	TCD1.PER = 0;
    6d28:	16 a2       	std	Z+38, r1	; 0x26
    6d2a:	17 a2       	std	Z+39, r1	; 0x27
	
	// Waveform generation mode
	TCD1.CTRLB = (TCD1.CTRLB & ~TC1_WGMODE_gm) | wgm;
    6d2c:	81 81       	ldd	r24, Z+1	; 0x01
    6d2e:	88 7f       	andi	r24, 0xF8	; 248
    6d30:	68 2b       	or	r22, r24
    6d32:	61 83       	std	Z+1, r22	; 0x01
	
	// Start timer
	//TCD1.CTRLA = (TCD1.CTRLA & TC1_CLKSEL_gm) | clock;
	
	// Disable interrupts
	TCD1.INTCTRLA = TC_OVFINTLVL_OFF_gc;
    6d34:	16 82       	std	Z+6, r1	; 0x06
	TCD1.INTCTRLB = TC_CCDINTLVL_OFF_gc | TC_CCCINTLVL_OFF_gc | TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
    6d36:	17 82       	std	Z+7, r1	; 0x07
    6d38:	08 95       	ret

00006d3a <_ZN8CTimerD15StartEj>:
}

void CTimerD1::Start(uint16_t period)
{
	// Set period of timer
	TCD1.PER = period;
    6d3a:	e0 e4       	ldi	r30, 0x40	; 64
    6d3c:	f9 e0       	ldi	r31, 0x09	; 9
    6d3e:	66 a3       	std	Z+38, r22	; 0x26
    6d40:	77 a3       	std	Z+39, r23	; 0x27
	
	// Start timer
	TCD1.CTRLA = (TCD1.CTRLA & ~TC1_CLKSEL_gm) | clockSrc;
    6d42:	20 81       	ld	r18, Z
    6d44:	20 7f       	andi	r18, 0xF0	; 240
    6d46:	dc 01       	movw	r26, r24
    6d48:	12 96       	adiw	r26, 0x02	; 2
    6d4a:	9c 91       	ld	r25, X
    6d4c:	82 2f       	mov	r24, r18
    6d4e:	89 2b       	or	r24, r25
    6d50:	80 83       	st	Z, r24
    6d52:	08 95       	ret

00006d54 <_ZN8CTimerD14StopEv>:
}

void CTimerD1::Stop()
{
	// Stop timer
	TCD1.CTRLA = (TCD1.CTRLA & ~TC1_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6d54:	e0 e4       	ldi	r30, 0x40	; 64
    6d56:	f9 e0       	ldi	r31, 0x09	; 9
    6d58:	80 81       	ld	r24, Z
    6d5a:	80 7f       	andi	r24, 0xF0	; 240
    6d5c:	80 83       	st	Z, r24
	TCD1.CNT = 0;
    6d5e:	10 a2       	std	Z+32, r1	; 0x20
    6d60:	11 a2       	std	Z+33, r1	; 0x21
    6d62:	08 95       	ret

00006d64 <_ZN8CTimerD15ResetEv>:
}

void CTimerD1::Reset()
{
	// Stop timer
	uint16_t tmp = TCD1.CTRLA;
    6d64:	e0 e4       	ldi	r30, 0x40	; 64
    6d66:	f9 e0       	ldi	r31, 0x09	; 9
    6d68:	90 81       	ld	r25, Z
	TCD1.CTRLA = (TCD1.CTRLA & ~TC1_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6d6a:	80 81       	ld	r24, Z
    6d6c:	80 7f       	andi	r24, 0xF0	; 240
    6d6e:	80 83       	st	Z, r24
	TCD1.CNT = 0;
    6d70:	10 a2       	std	Z+32, r1	; 0x20
    6d72:	11 a2       	std	Z+33, r1	; 0x21
	TCD1.CTRLA = tmp;
    6d74:	90 83       	st	Z, r25
    6d76:	08 95       	ret

00006d78 <_ZN8CTimerD113EnableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerD1::EnableChannel(TIMER_CHANNELS channels)
{
	TCD1.CTRLB = (TCD1.CTRLB & ~0xF0) | channels;
    6d78:	e0 e4       	ldi	r30, 0x40	; 64
    6d7a:	f9 e0       	ldi	r31, 0x09	; 9
    6d7c:	81 81       	ldd	r24, Z+1	; 0x01
    6d7e:	8f 70       	andi	r24, 0x0F	; 15
    6d80:	68 2b       	or	r22, r24
    6d82:	61 83       	std	Z+1, r22	; 0x01
    6d84:	08 95       	ret

00006d86 <_ZN8CTimerD114DisableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerD1::DisableChannel(TIMER_CHANNELS channels)
{
	TCD1.CTRLB &= ~channels;
    6d86:	e0 e4       	ldi	r30, 0x40	; 64
    6d88:	f9 e0       	ldi	r31, 0x09	; 9
    6d8a:	81 81       	ldd	r24, Z+1	; 0x01
    6d8c:	60 95       	com	r22
    6d8e:	68 23       	and	r22, r24
    6d90:	61 83       	std	Z+1, r22	; 0x01
    6d92:	08 95       	ret

00006d94 <_ZN8CTimerD19SetPeriodEj>:
}

void CTimerD1::SetPeriod(uint16_t value)
{
	TCD1.PER = value;
    6d94:	60 93 66 09 	sts	0x0966, r22	; 0x800966 <__TEXT_REGION_LENGTH__+0x700966>
    6d98:	70 93 67 09 	sts	0x0967, r23	; 0x800967 <__TEXT_REGION_LENGTH__+0x700967>
    6d9c:	08 95       	ret

00006d9e <_ZN8CTimerD18SetCOMPAEj>:
}

void CTimerD1::SetCOMPA(uint16_t value)
{
	TCD1.CCA = value;
    6d9e:	60 93 68 09 	sts	0x0968, r22	; 0x800968 <__TEXT_REGION_LENGTH__+0x700968>
    6da2:	70 93 69 09 	sts	0x0969, r23	; 0x800969 <__TEXT_REGION_LENGTH__+0x700969>
    6da6:	08 95       	ret

00006da8 <_ZN8CTimerD18SetCOMPBEj>:
}

void CTimerD1::SetCOMPB(uint16_t value)
{
	TCD1.CCB = value;
    6da8:	60 93 6a 09 	sts	0x096A, r22	; 0x80096a <__TEXT_REGION_LENGTH__+0x70096a>
    6dac:	70 93 6b 09 	sts	0x096B, r23	; 0x80096b <__TEXT_REGION_LENGTH__+0x70096b>
    6db0:	08 95       	ret

00006db2 <_ZN8CTimerD114SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>:
}

// Interrupts
void CTimerD1::SetOVFCallback(ISRCallback func, void* owner, TC_OVFINTLVL_t intlvl)
{
	if (func != NULL)
    6db2:	61 15       	cp	r22, r1
    6db4:	71 05       	cpc	r23, r1
    6db6:	29 f0       	breq	.+10     	; 0x6dc2 <_ZN8CTimerD114SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum+0x10>
	TCD1.INTCTRLA |= intlvl;// = (TCD1.INTCTRLA & TC1_OVFINTLVL_gm) | intlvl;
    6db8:	e0 e4       	ldi	r30, 0x40	; 64
    6dba:	f9 e0       	ldi	r31, 0x09	; 9
    6dbc:	86 81       	ldd	r24, Z+6	; 0x06
    6dbe:	28 2b       	or	r18, r24
    6dc0:	26 83       	std	Z+6, r18	; 0x06
	
	InterruptFuncTable[TCD1_OVF_vect_num] = func;
    6dc2:	60 93 48 24 	sts	0x2448, r22	; 0x802448 <InterruptFuncTable+0xa6>
    6dc6:	70 93 49 24 	sts	0x2449, r23	; 0x802449 <InterruptFuncTable+0xa7>
	InterruptSenderTable[TCD1_OVF_vect_num] = owner;
    6dca:	40 93 3e 25 	sts	0x253E, r20	; 0x80253e <InterruptSenderTable+0xa6>
    6dce:	50 93 3f 25 	sts	0x253F, r21	; 0x80253f <InterruptSenderTable+0xa7>
    6dd2:	08 95       	ret

00006dd4 <_ZN8CTimerD114SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>:
}

void CTimerD1::SetERRCallback(ISRCallback func, void* owner, TC_ERRINTLVL_t intlvl)
{
	if (func != NULL)
    6dd4:	61 15       	cp	r22, r1
    6dd6:	71 05       	cpc	r23, r1
    6dd8:	29 f0       	breq	.+10     	; 0x6de4 <_ZN8CTimerD114SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum+0x10>
	TCD1.INTCTRLA |= intlvl;// = (TCD1.INTCTRLA & TC1_ERRINTLVL_gm) | intlvl;
    6dda:	e0 e4       	ldi	r30, 0x40	; 64
    6ddc:	f9 e0       	ldi	r31, 0x09	; 9
    6dde:	86 81       	ldd	r24, Z+6	; 0x06
    6de0:	28 2b       	or	r18, r24
    6de2:	26 83       	std	Z+6, r18	; 0x06
	
	InterruptFuncTable[TCD1_ERR_vect_num] = func;
    6de4:	60 93 4a 24 	sts	0x244A, r22	; 0x80244a <InterruptFuncTable+0xa8>
    6de8:	70 93 4b 24 	sts	0x244B, r23	; 0x80244b <InterruptFuncTable+0xa9>
	InterruptSenderTable[TCD1_ERR_vect_num] = owner;
    6dec:	40 93 40 25 	sts	0x2540, r20	; 0x802540 <InterruptSenderTable+0xa8>
    6df0:	50 93 41 25 	sts	0x2541, r21	; 0x802541 <InterruptSenderTable+0xa9>
    6df4:	08 95       	ret

00006df6 <_ZN8CTimerD116SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>:
}

void CTimerD1::SetCOMPACallback(ISRCallback func, void* owner, TC_CCAINTLVL_t intlvl)
{
	if (func != NULL)
    6df6:	61 15       	cp	r22, r1
    6df8:	71 05       	cpc	r23, r1
    6dfa:	29 f0       	breq	.+10     	; 0x6e06 <_ZN8CTimerD116SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum+0x10>
	TCD1.INTCTRLB |= intlvl;// = (TCD1.INTCTRLB & TC1_CCAINTLVL_gm) | intlvl;
    6dfc:	e0 e4       	ldi	r30, 0x40	; 64
    6dfe:	f9 e0       	ldi	r31, 0x09	; 9
    6e00:	87 81       	ldd	r24, Z+7	; 0x07
    6e02:	28 2b       	or	r18, r24
    6e04:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCD1_CCA_vect_num] = func;
    6e06:	60 93 4c 24 	sts	0x244C, r22	; 0x80244c <InterruptFuncTable+0xaa>
    6e0a:	70 93 4d 24 	sts	0x244D, r23	; 0x80244d <InterruptFuncTable+0xab>
	InterruptSenderTable[TCD1_CCA_vect_num] = owner;
    6e0e:	40 93 42 25 	sts	0x2542, r20	; 0x802542 <InterruptSenderTable+0xaa>
    6e12:	50 93 43 25 	sts	0x2543, r21	; 0x802543 <InterruptSenderTable+0xab>
    6e16:	08 95       	ret

00006e18 <_ZN8CTimerD116SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>:
}

void CTimerD1::SetCOMPBCallback(ISRCallback func, void* owner, TC_CCBINTLVL_t intlvl)
{
	if (func != NULL)
    6e18:	61 15       	cp	r22, r1
    6e1a:	71 05       	cpc	r23, r1
    6e1c:	29 f0       	breq	.+10     	; 0x6e28 <_ZN8CTimerD116SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum+0x10>
	TCD1.INTCTRLB |= intlvl;// = (TCD1.INTCTRLB & TC1_CCBINTLVL_gm) | intlvl;
    6e1e:	e0 e4       	ldi	r30, 0x40	; 64
    6e20:	f9 e0       	ldi	r31, 0x09	; 9
    6e22:	87 81       	ldd	r24, Z+7	; 0x07
    6e24:	28 2b       	or	r18, r24
    6e26:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCD1_CCB_vect_num] = func;
    6e28:	60 93 4e 24 	sts	0x244E, r22	; 0x80244e <InterruptFuncTable+0xac>
    6e2c:	70 93 4f 24 	sts	0x244F, r23	; 0x80244f <InterruptFuncTable+0xad>
	InterruptSenderTable[TCD1_CCB_vect_num] = owner;
    6e30:	40 93 44 25 	sts	0x2544, r20	; 0x802544 <InterruptSenderTable+0xac>
    6e34:	50 93 45 25 	sts	0x2545, r21	; 0x802545 <InterruptSenderTable+0xad>
    6e38:	08 95       	ret

00006e3a <_ZN8CTimerD1C1Ev>:

#include "CTimerD1.h"
#include "../LaserLib/intx128.h"

// default constructor
CTimerD1::CTimerD1()
    6e3a:	cf 93       	push	r28
    6e3c:	df 93       	push	r29
    6e3e:	ec 01       	movw	r28, r24
    6e40:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <_ZN7CTimer1C1Ev>
    6e44:	8e e5       	ldi	r24, 0x5E	; 94
    6e46:	93 e2       	ldi	r25, 0x23	; 35
    6e48:	88 83       	st	Y, r24
    6e4a:	99 83       	std	Y+1, r25	; 0x01
{
} //CTimerD1
    6e4c:	df 91       	pop	r29
    6e4e:	cf 91       	pop	r28
    6e50:	08 95       	ret

00006e52 <_ZN8CTimerD1D1Ev>:

// default destructor
CTimerD1::~CTimerD1()
    6e52:	2e e5       	ldi	r18, 0x5E	; 94
    6e54:	33 e2       	ldi	r19, 0x23	; 35
    6e56:	fc 01       	movw	r30, r24
    6e58:	20 83       	st	Z, r18
    6e5a:	31 83       	std	Z+1, r19	; 0x01
    6e5c:	0e 94 fe 16 	call	0x2dfc	; 0x2dfc <_ZN7CTimer1D1Ev>
    6e60:	08 95       	ret

00006e62 <_ZN7CTimerF10InitializeE27TIMER_WAVEFORMGEN_MODE_ENUM22TIMER_CLOCKSELECT_ENUM>:
} //~CTimerC

// Basic timer functions
void CTimerF::Initialize(TIMER_WAVEFORMGEN_MODE wgm, TIMER_CLOCKSELECT clock)
{
	clockSrc = clock;
    6e62:	fc 01       	movw	r30, r24
    6e64:	42 83       	std	Z+2, r20	; 0x02
	
	// Stop timer
	TCF0.CTRLA = (TCF0.CTRLA & ~TC0_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6e66:	e0 e0       	ldi	r30, 0x00	; 0
    6e68:	fb e0       	ldi	r31, 0x0B	; 11
    6e6a:	80 81       	ld	r24, Z
    6e6c:	80 7f       	andi	r24, 0xF0	; 240
    6e6e:	80 83       	st	Z, r24
	
	// No events
	TCF0.CTRLD = TC_EVACT_OFF_gc | TC_EVSEL_OFF_gc;
    6e70:	13 82       	std	Z+3, r1	; 0x03
	
	// Reset
	TCF0.CNT = 0;
    6e72:	10 a2       	std	Z+32, r1	; 0x20
    6e74:	11 a2       	std	Z+33, r1	; 0x21
	TCF0.CCA = 0;
    6e76:	10 a6       	std	Z+40, r1	; 0x28
    6e78:	11 a6       	std	Z+41, r1	; 0x29
	TCF0.CCB = 0;
    6e7a:	12 a6       	std	Z+42, r1	; 0x2a
    6e7c:	13 a6       	std	Z+43, r1	; 0x2b
	TCF0.CCC = 0;
    6e7e:	14 a6       	std	Z+44, r1	; 0x2c
    6e80:	15 a6       	std	Z+45, r1	; 0x2d
	TCF0.CCD = 0;
    6e82:	16 a6       	std	Z+46, r1	; 0x2e
    6e84:	17 a6       	std	Z+47, r1	; 0x2f
	TCF0.PER = 0;
    6e86:	16 a2       	std	Z+38, r1	; 0x26
    6e88:	17 a2       	std	Z+39, r1	; 0x27
	
	// Waveform generation mode
	TCF0.CTRLB = (TCF0.CTRLB & ~TC0_WGMODE_gm) | wgm;
    6e8a:	81 81       	ldd	r24, Z+1	; 0x01
    6e8c:	88 7f       	andi	r24, 0xF8	; 248
    6e8e:	68 2b       	or	r22, r24
    6e90:	61 83       	std	Z+1, r22	; 0x01
	
	// Start timer
	//TCF0.CTRLA = (TCF0.CTRLA & TC0_CLKSEL_gm) | clock;
	
	// Disable interrupts
	TCF0.INTCTRLA = TC_OVFINTLVL_OFF_gc;
    6e92:	16 82       	std	Z+6, r1	; 0x06
	TCF0.INTCTRLB = TC_CCDINTLVL_OFF_gc | TC_CCCINTLVL_OFF_gc | TC_CCBINTLVL_OFF_gc | TC_CCAINTLVL_OFF_gc;
    6e94:	17 82       	std	Z+7, r1	; 0x07
    6e96:	08 95       	ret

00006e98 <_ZN7CTimerF5StartEj>:
}

void CTimerF::Start(uint16_t period)
{
	// Set period of timer
	TCF0.PER = period;
    6e98:	e0 e0       	ldi	r30, 0x00	; 0
    6e9a:	fb e0       	ldi	r31, 0x0B	; 11
    6e9c:	66 a3       	std	Z+38, r22	; 0x26
    6e9e:	77 a3       	std	Z+39, r23	; 0x27
	//TCF0.CNT = 0;
	
	// Start timer
	TCF0.CTRLA = (TCF0.CTRLA & ~TC0_CLKSEL_gm) | clockSrc;
    6ea0:	20 81       	ld	r18, Z
    6ea2:	20 7f       	andi	r18, 0xF0	; 240
    6ea4:	dc 01       	movw	r26, r24
    6ea6:	12 96       	adiw	r26, 0x02	; 2
    6ea8:	9c 91       	ld	r25, X
    6eaa:	82 2f       	mov	r24, r18
    6eac:	89 2b       	or	r24, r25
    6eae:	80 83       	st	Z, r24
    6eb0:	08 95       	ret

00006eb2 <_ZN7CTimerF4StopEv>:
}

void CTimerF::Stop()
{
	// Stop timer
	TCF0.CTRLA = (TCF0.CTRLA & ~TC0_CLKSEL_gm) | TC_CLKSEL_OFF_gc;
    6eb2:	e0 e0       	ldi	r30, 0x00	; 0
    6eb4:	fb e0       	ldi	r31, 0x0B	; 11
    6eb6:	80 81       	ld	r24, Z
    6eb8:	80 7f       	andi	r24, 0xF0	; 240
    6eba:	80 83       	st	Z, r24
	TCF0.CNT = 0;
    6ebc:	10 a2       	std	Z+32, r1	; 0x20
    6ebe:	11 a2       	std	Z+33, r1	; 0x21
    6ec0:	08 95       	ret

00006ec2 <_ZN7CTimerF13EnableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerF::EnableChannel(TIMER_CHANNELS channels)
{
	TCF0.CTRLB |= channels;
    6ec2:	e0 e0       	ldi	r30, 0x00	; 0
    6ec4:	fb e0       	ldi	r31, 0x0B	; 11
    6ec6:	81 81       	ldd	r24, Z+1	; 0x01
    6ec8:	68 2b       	or	r22, r24
    6eca:	61 83       	std	Z+1, r22	; 0x01
    6ecc:	08 95       	ret

00006ece <_ZN7CTimerF14DisableChannelE19TIMER_CHANNELS_ENUM>:
}

void CTimerF::DisableChannel(TIMER_CHANNELS channels)
{
	TCF0.CTRLB &= ~channels;
    6ece:	e0 e0       	ldi	r30, 0x00	; 0
    6ed0:	fb e0       	ldi	r31, 0x0B	; 11
    6ed2:	81 81       	ldd	r24, Z+1	; 0x01
    6ed4:	60 95       	com	r22
    6ed6:	68 23       	and	r22, r24
    6ed8:	61 83       	std	Z+1, r22	; 0x01
    6eda:	08 95       	ret

00006edc <_ZN7CTimerF10ChannelSetE19TIMER_CHANNELS_ENUM>:
}

void CTimerF::ChannelSet(TIMER_CHANNELS channels)
{
	TCF0.CTRLC |= (channels >> 4);
    6edc:	e0 e0       	ldi	r30, 0x00	; 0
    6ede:	fb e0       	ldi	r31, 0x0B	; 11
    6ee0:	82 81       	ldd	r24, Z+2	; 0x02
    6ee2:	62 95       	swap	r22
    6ee4:	6f 70       	andi	r22, 0x0F	; 15
    6ee6:	68 2b       	or	r22, r24
    6ee8:	62 83       	std	Z+2, r22	; 0x02
    6eea:	08 95       	ret

00006eec <_ZN7CTimerF12ChannelResetE19TIMER_CHANNELS_ENUM>:
}

void CTimerF::ChannelReset(TIMER_CHANNELS channels)
{
	TCF0.CTRLC &= ~(channels >> 4);
    6eec:	e0 e0       	ldi	r30, 0x00	; 0
    6eee:	fb e0       	ldi	r31, 0x0B	; 11
    6ef0:	82 81       	ldd	r24, Z+2	; 0x02
    6ef2:	62 95       	swap	r22
    6ef4:	6f 70       	andi	r22, 0x0F	; 15
    6ef6:	60 95       	com	r22
    6ef8:	68 23       	and	r22, r24
    6efa:	62 83       	std	Z+2, r22	; 0x02
    6efc:	08 95       	ret

00006efe <_ZN7CTimerF9SetPeriodEj>:
}

void CTimerF::SetPeriod(uint16_t value)
{
	TCF0.PER = value;
    6efe:	60 93 26 0b 	sts	0x0B26, r22	; 0x800b26 <__TEXT_REGION_LENGTH__+0x700b26>
    6f02:	70 93 27 0b 	sts	0x0B27, r23	; 0x800b27 <__TEXT_REGION_LENGTH__+0x700b27>
    6f06:	08 95       	ret

00006f08 <_ZN7CTimerF8SetCOMPAEj>:
}

void CTimerF::SetCOMPA(uint16_t value)
{
	TCF0.CCA = value;
    6f08:	60 93 28 0b 	sts	0x0B28, r22	; 0x800b28 <__TEXT_REGION_LENGTH__+0x700b28>
    6f0c:	70 93 29 0b 	sts	0x0B29, r23	; 0x800b29 <__TEXT_REGION_LENGTH__+0x700b29>
    6f10:	08 95       	ret

00006f12 <_ZN7CTimerF8SetCOMPBEj>:
}

void CTimerF::SetCOMPB(uint16_t value)
{
	TCF0.CCB = value;
    6f12:	60 93 2a 0b 	sts	0x0B2A, r22	; 0x800b2a <__TEXT_REGION_LENGTH__+0x700b2a>
    6f16:	70 93 2b 0b 	sts	0x0B2B, r23	; 0x800b2b <__TEXT_REGION_LENGTH__+0x700b2b>
    6f1a:	08 95       	ret

00006f1c <_ZN7CTimerF8SetCOMPCEj>:
}

void CTimerF::SetCOMPC(uint16_t value)
{
	TCF0.CCC = value;
    6f1c:	60 93 2c 0b 	sts	0x0B2C, r22	; 0x800b2c <__TEXT_REGION_LENGTH__+0x700b2c>
    6f20:	70 93 2d 0b 	sts	0x0B2D, r23	; 0x800b2d <__TEXT_REGION_LENGTH__+0x700b2d>
    6f24:	08 95       	ret

00006f26 <_ZN7CTimerF8SetCOMPDEj>:
}

void CTimerF::SetCOMPD(uint16_t value)
{
	TCF0.CCD = value;
    6f26:	60 93 2e 0b 	sts	0x0B2E, r22	; 0x800b2e <__TEXT_REGION_LENGTH__+0x700b2e>
    6f2a:	70 93 2f 0b 	sts	0x0B2F, r23	; 0x800b2f <__TEXT_REGION_LENGTH__+0x700b2f>
    6f2e:	08 95       	ret

00006f30 <_ZN7CTimerF14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum>:
}

// Interrupts
void CTimerF::SetOVFCallback(ISRCallback func, void* owner, TC_OVFINTLVL_t intlvl)
{
	if (func != NULL)
    6f30:	61 15       	cp	r22, r1
    6f32:	71 05       	cpc	r23, r1
    6f34:	29 f0       	breq	.+10     	; 0x6f40 <_ZN7CTimerF14SetOVFCallbackEPFvPvES0_17TC_OVFINTLVL_enum+0x10>
		TCF0.INTCTRLA |= intlvl;// = (TCF0.INTCTRLA & TC0_OVFINTLVL_gm) | intlvl;
    6f36:	e0 e0       	ldi	r30, 0x00	; 0
    6f38:	fb e0       	ldi	r31, 0x0B	; 11
    6f3a:	86 81       	ldd	r24, Z+6	; 0x06
    6f3c:	28 2b       	or	r18, r24
    6f3e:	26 83       	std	Z+6, r18	; 0x06
	
	InterruptFuncTable[TCF0_OVF_vect_num] = func;
    6f40:	60 93 7a 24 	sts	0x247A, r22	; 0x80247a <InterruptFuncTable+0xd8>
    6f44:	70 93 7b 24 	sts	0x247B, r23	; 0x80247b <InterruptFuncTable+0xd9>
	InterruptSenderTable[TCF0_OVF_vect_num] = owner;
    6f48:	40 93 70 25 	sts	0x2570, r20	; 0x802570 <InterruptSenderTable+0xd8>
    6f4c:	50 93 71 25 	sts	0x2571, r21	; 0x802571 <InterruptSenderTable+0xd9>
    6f50:	08 95       	ret

00006f52 <_ZN7CTimerF14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum>:
}

void CTimerF::SetERRCallback(ISRCallback func, void* owner, TC_ERRINTLVL_t intlvl)
{
	if (func != NULL)
    6f52:	61 15       	cp	r22, r1
    6f54:	71 05       	cpc	r23, r1
    6f56:	29 f0       	breq	.+10     	; 0x6f62 <_ZN7CTimerF14SetERRCallbackEPFvPvES0_17TC_ERRINTLVL_enum+0x10>
		TCF0.INTCTRLA |= intlvl;// = (TCF0.INTCTRLA & TC0_ERRINTLVL_gm) | intlvl;
    6f58:	e0 e0       	ldi	r30, 0x00	; 0
    6f5a:	fb e0       	ldi	r31, 0x0B	; 11
    6f5c:	86 81       	ldd	r24, Z+6	; 0x06
    6f5e:	28 2b       	or	r18, r24
    6f60:	26 83       	std	Z+6, r18	; 0x06
	
	InterruptFuncTable[TCF0_ERR_vect_num] = func;
    6f62:	60 93 7c 24 	sts	0x247C, r22	; 0x80247c <InterruptFuncTable+0xda>
    6f66:	70 93 7d 24 	sts	0x247D, r23	; 0x80247d <InterruptFuncTable+0xdb>
	InterruptSenderTable[TCF0_ERR_vect_num] = owner;
    6f6a:	40 93 72 25 	sts	0x2572, r20	; 0x802572 <InterruptSenderTable+0xda>
    6f6e:	50 93 73 25 	sts	0x2573, r21	; 0x802573 <InterruptSenderTable+0xdb>
    6f72:	08 95       	ret

00006f74 <_ZN7CTimerF16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum>:
}

void CTimerF::SetCOMPACallback(ISRCallback func, void* owner, TC_CCAINTLVL_t intlvl)
{
	if (func != NULL)
    6f74:	61 15       	cp	r22, r1
    6f76:	71 05       	cpc	r23, r1
    6f78:	29 f0       	breq	.+10     	; 0x6f84 <_ZN7CTimerF16SetCOMPACallbackEPFvPvES0_17TC_CCAINTLVL_enum+0x10>
		TCF0.INTCTRLB |= intlvl;// = (TCF0.INTCTRLB & TC0_CCAINTLVL_gm) | intlvl;
    6f7a:	e0 e0       	ldi	r30, 0x00	; 0
    6f7c:	fb e0       	ldi	r31, 0x0B	; 11
    6f7e:	87 81       	ldd	r24, Z+7	; 0x07
    6f80:	28 2b       	or	r18, r24
    6f82:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCF0_CCA_vect_num] = func;
    6f84:	60 93 7e 24 	sts	0x247E, r22	; 0x80247e <InterruptFuncTable+0xdc>
    6f88:	70 93 7f 24 	sts	0x247F, r23	; 0x80247f <InterruptFuncTable+0xdd>
	InterruptSenderTable[TCF0_CCA_vect_num] = owner;
    6f8c:	40 93 74 25 	sts	0x2574, r20	; 0x802574 <InterruptSenderTable+0xdc>
    6f90:	50 93 75 25 	sts	0x2575, r21	; 0x802575 <InterruptSenderTable+0xdd>
    6f94:	08 95       	ret

00006f96 <_ZN7CTimerF16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum>:
}

void CTimerF::SetCOMPBCallback(ISRCallback func, void* owner, TC_CCBINTLVL_t intlvl)
{
	if (func != NULL)
    6f96:	61 15       	cp	r22, r1
    6f98:	71 05       	cpc	r23, r1
    6f9a:	29 f0       	breq	.+10     	; 0x6fa6 <_ZN7CTimerF16SetCOMPBCallbackEPFvPvES0_17TC_CCBINTLVL_enum+0x10>
		TCF0.INTCTRLB |= intlvl;// = (TCF0.INTCTRLB & TC0_CCBINTLVL_gm) | intlvl;
    6f9c:	e0 e0       	ldi	r30, 0x00	; 0
    6f9e:	fb e0       	ldi	r31, 0x0B	; 11
    6fa0:	87 81       	ldd	r24, Z+7	; 0x07
    6fa2:	28 2b       	or	r18, r24
    6fa4:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCF0_CCB_vect_num] = func;
    6fa6:	60 93 80 24 	sts	0x2480, r22	; 0x802480 <InterruptFuncTable+0xde>
    6faa:	70 93 81 24 	sts	0x2481, r23	; 0x802481 <InterruptFuncTable+0xdf>
	InterruptSenderTable[TCF0_CCB_vect_num] = owner;
    6fae:	40 93 76 25 	sts	0x2576, r20	; 0x802576 <InterruptSenderTable+0xde>
    6fb2:	50 93 77 25 	sts	0x2577, r21	; 0x802577 <InterruptSenderTable+0xdf>
    6fb6:	08 95       	ret

00006fb8 <_ZN7CTimerF16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum>:
}

void CTimerF::SetCOMPCCallback(ISRCallback func, void* owner, TC_CCCINTLVL_t intlvl)
{
	if (func != NULL)
    6fb8:	61 15       	cp	r22, r1
    6fba:	71 05       	cpc	r23, r1
    6fbc:	29 f0       	breq	.+10     	; 0x6fc8 <_ZN7CTimerF16SetCOMPCCallbackEPFvPvES0_17TC_CCCINTLVL_enum+0x10>
		TCF0.INTCTRLB |= intlvl;// = (TCF0.INTCTRLB & TC0_CCCINTLVL_gm) | intlvl;
    6fbe:	e0 e0       	ldi	r30, 0x00	; 0
    6fc0:	fb e0       	ldi	r31, 0x0B	; 11
    6fc2:	87 81       	ldd	r24, Z+7	; 0x07
    6fc4:	28 2b       	or	r18, r24
    6fc6:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCF0_CCC_vect_num] = func;
    6fc8:	60 93 82 24 	sts	0x2482, r22	; 0x802482 <InterruptFuncTable+0xe0>
    6fcc:	70 93 83 24 	sts	0x2483, r23	; 0x802483 <InterruptFuncTable+0xe1>
	InterruptSenderTable[TCF0_CCC_vect_num] = owner;
    6fd0:	40 93 78 25 	sts	0x2578, r20	; 0x802578 <InterruptSenderTable+0xe0>
    6fd4:	50 93 79 25 	sts	0x2579, r21	; 0x802579 <InterruptSenderTable+0xe1>
    6fd8:	08 95       	ret

00006fda <_ZN7CTimerF16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum>:
}

void CTimerF::SetCOMPDCallback(ISRCallback func, void* owner, TC_CCDINTLVL_t intlvl)
{
	if (func != NULL)
    6fda:	61 15       	cp	r22, r1
    6fdc:	71 05       	cpc	r23, r1
    6fde:	29 f0       	breq	.+10     	; 0x6fea <_ZN7CTimerF16SetCOMPDCallbackEPFvPvES0_17TC_CCDINTLVL_enum+0x10>
		TCF0.INTCTRLB |= intlvl;// = (TCF0.INTCTRLB & TC0_CCDINTLVL_gm) | intlvl;
    6fe0:	e0 e0       	ldi	r30, 0x00	; 0
    6fe2:	fb e0       	ldi	r31, 0x0B	; 11
    6fe4:	87 81       	ldd	r24, Z+7	; 0x07
    6fe6:	28 2b       	or	r18, r24
    6fe8:	27 83       	std	Z+7, r18	; 0x07
	
	InterruptFuncTable[TCF0_CCD_vect_num] = func;
    6fea:	60 93 84 24 	sts	0x2484, r22	; 0x802484 <InterruptFuncTable+0xe2>
    6fee:	70 93 85 24 	sts	0x2485, r23	; 0x802485 <InterruptFuncTable+0xe3>
	InterruptSenderTable[TCF0_CCD_vect_num] = owner;
    6ff2:	40 93 7a 25 	sts	0x257A, r20	; 0x80257a <InterruptSenderTable+0xe2>
    6ff6:	50 93 7b 25 	sts	0x257B, r21	; 0x80257b <InterruptSenderTable+0xe3>
    6ffa:	08 95       	ret

00006ffc <_ZN7CTimerFC1Ev>:

#include "CTimerF.h"
#include "../LaserLib/intx128.h"

// default constructor
CTimerF::CTimerF()
    6ffc:	cf 93       	push	r28
    6ffe:	df 93       	push	r29
    7000:	ec 01       	movw	r28, r24
    7002:	0e 94 f1 16 	call	0x2de2	; 0x2de2 <_ZN6CTimerC1Ev>
    7006:	8c e7       	ldi	r24, 0x7C	; 124
    7008:	93 e2       	ldi	r25, 0x23	; 35
    700a:	88 83       	st	Y, r24
    700c:	99 83       	std	Y+1, r25	; 0x01
{
} //CTimerC
    700e:	df 91       	pop	r29
    7010:	cf 91       	pop	r28
    7012:	08 95       	ret

00007014 <_ZN7CTimerFD1Ev>:

// default destructor
CTimerF::~CTimerF()
    7014:	2c e7       	ldi	r18, 0x7C	; 124
    7016:	33 e2       	ldi	r19, 0x23	; 35
    7018:	fc 01       	movw	r30, r24
    701a:	20 83       	st	Z, r18
    701c:	31 83       	std	Z+1, r19	; 0x01
    701e:	0e 94 f7 16 	call	0x2dee	; 0x2dee <_ZN6CTimerD1Ev>
    7022:	08 95       	ret

00007024 <__fixsfsi>:
    7024:	0e 94 19 38 	call	0x7032	; 0x7032 <__fixunssfsi>
    7028:	68 94       	set
    702a:	b1 11       	cpse	r27, r1
    702c:	0c 94 a8 38 	jmp	0x7150	; 0x7150 <__fp_szero>
    7030:	08 95       	ret

00007032 <__fixunssfsi>:
    7032:	0e 94 8d 38 	call	0x711a	; 0x711a <__fp_splitA>
    7036:	88 f0       	brcs	.+34     	; 0x705a <__fixunssfsi+0x28>
    7038:	9f 57       	subi	r25, 0x7F	; 127
    703a:	98 f0       	brcs	.+38     	; 0x7062 <__fixunssfsi+0x30>
    703c:	b9 2f       	mov	r27, r25
    703e:	99 27       	eor	r25, r25
    7040:	b7 51       	subi	r27, 0x17	; 23
    7042:	b0 f0       	brcs	.+44     	; 0x7070 <__fixunssfsi+0x3e>
    7044:	e1 f0       	breq	.+56     	; 0x707e <__fixunssfsi+0x4c>
    7046:	66 0f       	add	r22, r22
    7048:	77 1f       	adc	r23, r23
    704a:	88 1f       	adc	r24, r24
    704c:	99 1f       	adc	r25, r25
    704e:	1a f0       	brmi	.+6      	; 0x7056 <__fixunssfsi+0x24>
    7050:	ba 95       	dec	r27
    7052:	c9 f7       	brne	.-14     	; 0x7046 <__fixunssfsi+0x14>
    7054:	14 c0       	rjmp	.+40     	; 0x707e <__fixunssfsi+0x4c>
    7056:	b1 30       	cpi	r27, 0x01	; 1
    7058:	91 f0       	breq	.+36     	; 0x707e <__fixunssfsi+0x4c>
    705a:	0e 94 a7 38 	call	0x714e	; 0x714e <__fp_zero>
    705e:	b1 e0       	ldi	r27, 0x01	; 1
    7060:	08 95       	ret
    7062:	0c 94 a7 38 	jmp	0x714e	; 0x714e <__fp_zero>
    7066:	67 2f       	mov	r22, r23
    7068:	78 2f       	mov	r23, r24
    706a:	88 27       	eor	r24, r24
    706c:	b8 5f       	subi	r27, 0xF8	; 248
    706e:	39 f0       	breq	.+14     	; 0x707e <__fixunssfsi+0x4c>
    7070:	b9 3f       	cpi	r27, 0xF9	; 249
    7072:	cc f3       	brlt	.-14     	; 0x7066 <__fixunssfsi+0x34>
    7074:	86 95       	lsr	r24
    7076:	77 95       	ror	r23
    7078:	67 95       	ror	r22
    707a:	b3 95       	inc	r27
    707c:	d9 f7       	brne	.-10     	; 0x7074 <__fixunssfsi+0x42>
    707e:	3e f4       	brtc	.+14     	; 0x708e <__fixunssfsi+0x5c>
    7080:	90 95       	com	r25
    7082:	80 95       	com	r24
    7084:	70 95       	com	r23
    7086:	61 95       	neg	r22
    7088:	7f 4f       	sbci	r23, 0xFF	; 255
    708a:	8f 4f       	sbci	r24, 0xFF	; 255
    708c:	9f 4f       	sbci	r25, 0xFF	; 255
    708e:	08 95       	ret

00007090 <__floatunsisf>:
    7090:	e8 94       	clt
    7092:	09 c0       	rjmp	.+18     	; 0x70a6 <__floatsisf+0x12>

00007094 <__floatsisf>:
    7094:	97 fb       	bst	r25, 7
    7096:	3e f4       	brtc	.+14     	; 0x70a6 <__floatsisf+0x12>
    7098:	90 95       	com	r25
    709a:	80 95       	com	r24
    709c:	70 95       	com	r23
    709e:	61 95       	neg	r22
    70a0:	7f 4f       	sbci	r23, 0xFF	; 255
    70a2:	8f 4f       	sbci	r24, 0xFF	; 255
    70a4:	9f 4f       	sbci	r25, 0xFF	; 255
    70a6:	99 23       	and	r25, r25
    70a8:	a9 f0       	breq	.+42     	; 0x70d4 <__floatsisf+0x40>
    70aa:	f9 2f       	mov	r31, r25
    70ac:	96 e9       	ldi	r25, 0x96	; 150
    70ae:	bb 27       	eor	r27, r27
    70b0:	93 95       	inc	r25
    70b2:	f6 95       	lsr	r31
    70b4:	87 95       	ror	r24
    70b6:	77 95       	ror	r23
    70b8:	67 95       	ror	r22
    70ba:	b7 95       	ror	r27
    70bc:	f1 11       	cpse	r31, r1
    70be:	f8 cf       	rjmp	.-16     	; 0x70b0 <__floatsisf+0x1c>
    70c0:	fa f4       	brpl	.+62     	; 0x7100 <__floatsisf+0x6c>
    70c2:	bb 0f       	add	r27, r27
    70c4:	11 f4       	brne	.+4      	; 0x70ca <__floatsisf+0x36>
    70c6:	60 ff       	sbrs	r22, 0
    70c8:	1b c0       	rjmp	.+54     	; 0x7100 <__floatsisf+0x6c>
    70ca:	6f 5f       	subi	r22, 0xFF	; 255
    70cc:	7f 4f       	sbci	r23, 0xFF	; 255
    70ce:	8f 4f       	sbci	r24, 0xFF	; 255
    70d0:	9f 4f       	sbci	r25, 0xFF	; 255
    70d2:	16 c0       	rjmp	.+44     	; 0x7100 <__floatsisf+0x6c>
    70d4:	88 23       	and	r24, r24
    70d6:	11 f0       	breq	.+4      	; 0x70dc <__floatsisf+0x48>
    70d8:	96 e9       	ldi	r25, 0x96	; 150
    70da:	11 c0       	rjmp	.+34     	; 0x70fe <__floatsisf+0x6a>
    70dc:	77 23       	and	r23, r23
    70de:	21 f0       	breq	.+8      	; 0x70e8 <__floatsisf+0x54>
    70e0:	9e e8       	ldi	r25, 0x8E	; 142
    70e2:	87 2f       	mov	r24, r23
    70e4:	76 2f       	mov	r23, r22
    70e6:	05 c0       	rjmp	.+10     	; 0x70f2 <__floatsisf+0x5e>
    70e8:	66 23       	and	r22, r22
    70ea:	71 f0       	breq	.+28     	; 0x7108 <__floatsisf+0x74>
    70ec:	96 e8       	ldi	r25, 0x86	; 134
    70ee:	86 2f       	mov	r24, r22
    70f0:	70 e0       	ldi	r23, 0x00	; 0
    70f2:	60 e0       	ldi	r22, 0x00	; 0
    70f4:	2a f0       	brmi	.+10     	; 0x7100 <__floatsisf+0x6c>
    70f6:	9a 95       	dec	r25
    70f8:	66 0f       	add	r22, r22
    70fa:	77 1f       	adc	r23, r23
    70fc:	88 1f       	adc	r24, r24
    70fe:	da f7       	brpl	.-10     	; 0x70f6 <__floatsisf+0x62>
    7100:	88 0f       	add	r24, r24
    7102:	96 95       	lsr	r25
    7104:	87 95       	ror	r24
    7106:	97 f9       	bld	r25, 7
    7108:	08 95       	ret

0000710a <__fp_split3>:
    710a:	57 fd       	sbrc	r21, 7
    710c:	90 58       	subi	r25, 0x80	; 128
    710e:	44 0f       	add	r20, r20
    7110:	55 1f       	adc	r21, r21
    7112:	59 f0       	breq	.+22     	; 0x712a <__fp_splitA+0x10>
    7114:	5f 3f       	cpi	r21, 0xFF	; 255
    7116:	71 f0       	breq	.+28     	; 0x7134 <__fp_splitA+0x1a>
    7118:	47 95       	ror	r20

0000711a <__fp_splitA>:
    711a:	88 0f       	add	r24, r24
    711c:	97 fb       	bst	r25, 7
    711e:	99 1f       	adc	r25, r25
    7120:	61 f0       	breq	.+24     	; 0x713a <__fp_splitA+0x20>
    7122:	9f 3f       	cpi	r25, 0xFF	; 255
    7124:	79 f0       	breq	.+30     	; 0x7144 <__fp_splitA+0x2a>
    7126:	87 95       	ror	r24
    7128:	08 95       	ret
    712a:	12 16       	cp	r1, r18
    712c:	13 06       	cpc	r1, r19
    712e:	14 06       	cpc	r1, r20
    7130:	55 1f       	adc	r21, r21
    7132:	f2 cf       	rjmp	.-28     	; 0x7118 <__fp_split3+0xe>
    7134:	46 95       	lsr	r20
    7136:	f1 df       	rcall	.-30     	; 0x711a <__fp_splitA>
    7138:	08 c0       	rjmp	.+16     	; 0x714a <__fp_splitA+0x30>
    713a:	16 16       	cp	r1, r22
    713c:	17 06       	cpc	r1, r23
    713e:	18 06       	cpc	r1, r24
    7140:	99 1f       	adc	r25, r25
    7142:	f1 cf       	rjmp	.-30     	; 0x7126 <__fp_splitA+0xc>
    7144:	86 95       	lsr	r24
    7146:	71 05       	cpc	r23, r1
    7148:	61 05       	cpc	r22, r1
    714a:	08 94       	sec
    714c:	08 95       	ret

0000714e <__fp_zero>:
    714e:	e8 94       	clt

00007150 <__fp_szero>:
    7150:	bb 27       	eor	r27, r27
    7152:	66 27       	eor	r22, r22
    7154:	77 27       	eor	r23, r23
    7156:	cb 01       	movw	r24, r22
    7158:	97 f9       	bld	r25, 7
    715a:	08 95       	ret

0000715c <__mulsf3>:
    715c:	0e 94 c1 38 	call	0x7182	; 0x7182 <__mulsf3x>
    7160:	0c 94 32 39 	jmp	0x7264	; 0x7264 <__fp_round>
    7164:	0e 94 24 39 	call	0x7248	; 0x7248 <__fp_pscA>
    7168:	38 f0       	brcs	.+14     	; 0x7178 <__mulsf3+0x1c>
    716a:	0e 94 2b 39 	call	0x7256	; 0x7256 <__fp_pscB>
    716e:	20 f0       	brcs	.+8      	; 0x7178 <__mulsf3+0x1c>
    7170:	95 23       	and	r25, r21
    7172:	11 f0       	breq	.+4      	; 0x7178 <__mulsf3+0x1c>
    7174:	0c 94 1b 39 	jmp	0x7236	; 0x7236 <__fp_inf>
    7178:	0c 94 21 39 	jmp	0x7242	; 0x7242 <__fp_nan>
    717c:	11 24       	eor	r1, r1
    717e:	0c 94 a8 38 	jmp	0x7150	; 0x7150 <__fp_szero>

00007182 <__mulsf3x>:
    7182:	0e 94 85 38 	call	0x710a	; 0x710a <__fp_split3>
    7186:	70 f3       	brcs	.-36     	; 0x7164 <__mulsf3+0x8>

00007188 <__mulsf3_pse>:
    7188:	95 9f       	mul	r25, r21
    718a:	c1 f3       	breq	.-16     	; 0x717c <__mulsf3+0x20>
    718c:	95 0f       	add	r25, r21
    718e:	50 e0       	ldi	r21, 0x00	; 0
    7190:	55 1f       	adc	r21, r21
    7192:	62 9f       	mul	r22, r18
    7194:	f0 01       	movw	r30, r0
    7196:	72 9f       	mul	r23, r18
    7198:	bb 27       	eor	r27, r27
    719a:	f0 0d       	add	r31, r0
    719c:	b1 1d       	adc	r27, r1
    719e:	63 9f       	mul	r22, r19
    71a0:	aa 27       	eor	r26, r26
    71a2:	f0 0d       	add	r31, r0
    71a4:	b1 1d       	adc	r27, r1
    71a6:	aa 1f       	adc	r26, r26
    71a8:	64 9f       	mul	r22, r20
    71aa:	66 27       	eor	r22, r22
    71ac:	b0 0d       	add	r27, r0
    71ae:	a1 1d       	adc	r26, r1
    71b0:	66 1f       	adc	r22, r22
    71b2:	82 9f       	mul	r24, r18
    71b4:	22 27       	eor	r18, r18
    71b6:	b0 0d       	add	r27, r0
    71b8:	a1 1d       	adc	r26, r1
    71ba:	62 1f       	adc	r22, r18
    71bc:	73 9f       	mul	r23, r19
    71be:	b0 0d       	add	r27, r0
    71c0:	a1 1d       	adc	r26, r1
    71c2:	62 1f       	adc	r22, r18
    71c4:	83 9f       	mul	r24, r19
    71c6:	a0 0d       	add	r26, r0
    71c8:	61 1d       	adc	r22, r1
    71ca:	22 1f       	adc	r18, r18
    71cc:	74 9f       	mul	r23, r20
    71ce:	33 27       	eor	r19, r19
    71d0:	a0 0d       	add	r26, r0
    71d2:	61 1d       	adc	r22, r1
    71d4:	23 1f       	adc	r18, r19
    71d6:	84 9f       	mul	r24, r20
    71d8:	60 0d       	add	r22, r0
    71da:	21 1d       	adc	r18, r1
    71dc:	82 2f       	mov	r24, r18
    71de:	76 2f       	mov	r23, r22
    71e0:	6a 2f       	mov	r22, r26
    71e2:	11 24       	eor	r1, r1
    71e4:	9f 57       	subi	r25, 0x7F	; 127
    71e6:	50 40       	sbci	r21, 0x00	; 0
    71e8:	9a f0       	brmi	.+38     	; 0x7210 <__mulsf3_pse+0x88>
    71ea:	f1 f0       	breq	.+60     	; 0x7228 <__mulsf3_pse+0xa0>
    71ec:	88 23       	and	r24, r24
    71ee:	4a f0       	brmi	.+18     	; 0x7202 <__mulsf3_pse+0x7a>
    71f0:	ee 0f       	add	r30, r30
    71f2:	ff 1f       	adc	r31, r31
    71f4:	bb 1f       	adc	r27, r27
    71f6:	66 1f       	adc	r22, r22
    71f8:	77 1f       	adc	r23, r23
    71fa:	88 1f       	adc	r24, r24
    71fc:	91 50       	subi	r25, 0x01	; 1
    71fe:	50 40       	sbci	r21, 0x00	; 0
    7200:	a9 f7       	brne	.-22     	; 0x71ec <__mulsf3_pse+0x64>
    7202:	9e 3f       	cpi	r25, 0xFE	; 254
    7204:	51 05       	cpc	r21, r1
    7206:	80 f0       	brcs	.+32     	; 0x7228 <__mulsf3_pse+0xa0>
    7208:	0c 94 1b 39 	jmp	0x7236	; 0x7236 <__fp_inf>
    720c:	0c 94 a8 38 	jmp	0x7150	; 0x7150 <__fp_szero>
    7210:	5f 3f       	cpi	r21, 0xFF	; 255
    7212:	e4 f3       	brlt	.-8      	; 0x720c <__mulsf3_pse+0x84>
    7214:	98 3e       	cpi	r25, 0xE8	; 232
    7216:	d4 f3       	brlt	.-12     	; 0x720c <__mulsf3_pse+0x84>
    7218:	86 95       	lsr	r24
    721a:	77 95       	ror	r23
    721c:	67 95       	ror	r22
    721e:	b7 95       	ror	r27
    7220:	f7 95       	ror	r31
    7222:	e7 95       	ror	r30
    7224:	9f 5f       	subi	r25, 0xFF	; 255
    7226:	c1 f7       	brne	.-16     	; 0x7218 <__mulsf3_pse+0x90>
    7228:	fe 2b       	or	r31, r30
    722a:	88 0f       	add	r24, r24
    722c:	91 1d       	adc	r25, r1
    722e:	96 95       	lsr	r25
    7230:	87 95       	ror	r24
    7232:	97 f9       	bld	r25, 7
    7234:	08 95       	ret

00007236 <__fp_inf>:
    7236:	97 f9       	bld	r25, 7
    7238:	9f 67       	ori	r25, 0x7F	; 127
    723a:	80 e8       	ldi	r24, 0x80	; 128
    723c:	70 e0       	ldi	r23, 0x00	; 0
    723e:	60 e0       	ldi	r22, 0x00	; 0
    7240:	08 95       	ret

00007242 <__fp_nan>:
    7242:	9f ef       	ldi	r25, 0xFF	; 255
    7244:	80 ec       	ldi	r24, 0xC0	; 192
    7246:	08 95       	ret

00007248 <__fp_pscA>:
    7248:	00 24       	eor	r0, r0
    724a:	0a 94       	dec	r0
    724c:	16 16       	cp	r1, r22
    724e:	17 06       	cpc	r1, r23
    7250:	18 06       	cpc	r1, r24
    7252:	09 06       	cpc	r0, r25
    7254:	08 95       	ret

00007256 <__fp_pscB>:
    7256:	00 24       	eor	r0, r0
    7258:	0a 94       	dec	r0
    725a:	12 16       	cp	r1, r18
    725c:	13 06       	cpc	r1, r19
    725e:	14 06       	cpc	r1, r20
    7260:	05 06       	cpc	r0, r21
    7262:	08 95       	ret

00007264 <__fp_round>:
    7264:	09 2e       	mov	r0, r25
    7266:	03 94       	inc	r0
    7268:	00 0c       	add	r0, r0
    726a:	11 f4       	brne	.+4      	; 0x7270 <__fp_round+0xc>
    726c:	88 23       	and	r24, r24
    726e:	52 f0       	brmi	.+20     	; 0x7284 <__fp_round+0x20>
    7270:	bb 0f       	add	r27, r27
    7272:	40 f4       	brcc	.+16     	; 0x7284 <__fp_round+0x20>
    7274:	bf 2b       	or	r27, r31
    7276:	11 f4       	brne	.+4      	; 0x727c <__fp_round+0x18>
    7278:	60 ff       	sbrs	r22, 0
    727a:	04 c0       	rjmp	.+8      	; 0x7284 <__fp_round+0x20>
    727c:	6f 5f       	subi	r22, 0xFF	; 255
    727e:	7f 4f       	sbci	r23, 0xFF	; 255
    7280:	8f 4f       	sbci	r24, 0xFF	; 255
    7282:	9f 4f       	sbci	r25, 0xFF	; 255
    7284:	08 95       	ret

00007286 <__udivmodhi4>:
    7286:	aa 1b       	sub	r26, r26
    7288:	bb 1b       	sub	r27, r27
    728a:	51 e1       	ldi	r21, 0x11	; 17
    728c:	07 c0       	rjmp	.+14     	; 0x729c <__udivmodhi4_ep>

0000728e <__udivmodhi4_loop>:
    728e:	aa 1f       	adc	r26, r26
    7290:	bb 1f       	adc	r27, r27
    7292:	a6 17       	cp	r26, r22
    7294:	b7 07       	cpc	r27, r23
    7296:	10 f0       	brcs	.+4      	; 0x729c <__udivmodhi4_ep>
    7298:	a6 1b       	sub	r26, r22
    729a:	b7 0b       	sbc	r27, r23

0000729c <__udivmodhi4_ep>:
    729c:	88 1f       	adc	r24, r24
    729e:	99 1f       	adc	r25, r25
    72a0:	5a 95       	dec	r21
    72a2:	a9 f7       	brne	.-22     	; 0x728e <__udivmodhi4_loop>
    72a4:	80 95       	com	r24
    72a6:	90 95       	com	r25
    72a8:	bc 01       	movw	r22, r24
    72aa:	cd 01       	movw	r24, r26
    72ac:	08 95       	ret

000072ae <__divmodhi4>:
    72ae:	97 fb       	bst	r25, 7
    72b0:	07 2e       	mov	r0, r23
    72b2:	16 f4       	brtc	.+4      	; 0x72b8 <__divmodhi4+0xa>
    72b4:	00 94       	com	r0
    72b6:	07 d0       	rcall	.+14     	; 0x72c6 <__divmodhi4_neg1>
    72b8:	77 fd       	sbrc	r23, 7
    72ba:	09 d0       	rcall	.+18     	; 0x72ce <__divmodhi4_neg2>
    72bc:	0e 94 43 39 	call	0x7286	; 0x7286 <__udivmodhi4>
    72c0:	07 fc       	sbrc	r0, 7
    72c2:	05 d0       	rcall	.+10     	; 0x72ce <__divmodhi4_neg2>
    72c4:	3e f4       	brtc	.+14     	; 0x72d4 <__divmodhi4_exit>

000072c6 <__divmodhi4_neg1>:
    72c6:	90 95       	com	r25
    72c8:	81 95       	neg	r24
    72ca:	9f 4f       	sbci	r25, 0xFF	; 255
    72cc:	08 95       	ret

000072ce <__divmodhi4_neg2>:
    72ce:	70 95       	com	r23
    72d0:	61 95       	neg	r22
    72d2:	7f 4f       	sbci	r23, 0xFF	; 255

000072d4 <__divmodhi4_exit>:
    72d4:	08 95       	ret

000072d6 <__udivmodsi4>:
    72d6:	a1 e2       	ldi	r26, 0x21	; 33
    72d8:	1a 2e       	mov	r1, r26
    72da:	aa 1b       	sub	r26, r26
    72dc:	bb 1b       	sub	r27, r27
    72de:	fd 01       	movw	r30, r26
    72e0:	0d c0       	rjmp	.+26     	; 0x72fc <__udivmodsi4_ep>

000072e2 <__udivmodsi4_loop>:
    72e2:	aa 1f       	adc	r26, r26
    72e4:	bb 1f       	adc	r27, r27
    72e6:	ee 1f       	adc	r30, r30
    72e8:	ff 1f       	adc	r31, r31
    72ea:	a2 17       	cp	r26, r18
    72ec:	b3 07       	cpc	r27, r19
    72ee:	e4 07       	cpc	r30, r20
    72f0:	f5 07       	cpc	r31, r21
    72f2:	20 f0       	brcs	.+8      	; 0x72fc <__udivmodsi4_ep>
    72f4:	a2 1b       	sub	r26, r18
    72f6:	b3 0b       	sbc	r27, r19
    72f8:	e4 0b       	sbc	r30, r20
    72fa:	f5 0b       	sbc	r31, r21

000072fc <__udivmodsi4_ep>:
    72fc:	66 1f       	adc	r22, r22
    72fe:	77 1f       	adc	r23, r23
    7300:	88 1f       	adc	r24, r24
    7302:	99 1f       	adc	r25, r25
    7304:	1a 94       	dec	r1
    7306:	69 f7       	brne	.-38     	; 0x72e2 <__udivmodsi4_loop>
    7308:	60 95       	com	r22
    730a:	70 95       	com	r23
    730c:	80 95       	com	r24
    730e:	90 95       	com	r25
    7310:	9b 01       	movw	r18, r22
    7312:	ac 01       	movw	r20, r24
    7314:	bd 01       	movw	r22, r26
    7316:	cf 01       	movw	r24, r30
    7318:	08 95       	ret

0000731a <__divmodsi4>:
    731a:	05 2e       	mov	r0, r21
    731c:	97 fb       	bst	r25, 7
    731e:	1e f4       	brtc	.+6      	; 0x7326 <__divmodsi4+0xc>
    7320:	00 94       	com	r0
    7322:	0e 94 a4 39 	call	0x7348	; 0x7348 <__negsi2>
    7326:	57 fd       	sbrc	r21, 7
    7328:	07 d0       	rcall	.+14     	; 0x7338 <__divmodsi4_neg2>
    732a:	0e 94 6b 39 	call	0x72d6	; 0x72d6 <__udivmodsi4>
    732e:	07 fc       	sbrc	r0, 7
    7330:	03 d0       	rcall	.+6      	; 0x7338 <__divmodsi4_neg2>
    7332:	4e f4       	brtc	.+18     	; 0x7346 <__divmodsi4_exit>
    7334:	0c 94 a4 39 	jmp	0x7348	; 0x7348 <__negsi2>

00007338 <__divmodsi4_neg2>:
    7338:	50 95       	com	r21
    733a:	40 95       	com	r20
    733c:	30 95       	com	r19
    733e:	21 95       	neg	r18
    7340:	3f 4f       	sbci	r19, 0xFF	; 255
    7342:	4f 4f       	sbci	r20, 0xFF	; 255
    7344:	5f 4f       	sbci	r21, 0xFF	; 255

00007346 <__divmodsi4_exit>:
    7346:	08 95       	ret

00007348 <__negsi2>:
    7348:	90 95       	com	r25
    734a:	80 95       	com	r24
    734c:	70 95       	com	r23
    734e:	61 95       	neg	r22
    7350:	7f 4f       	sbci	r23, 0xFF	; 255
    7352:	8f 4f       	sbci	r24, 0xFF	; 255
    7354:	9f 4f       	sbci	r25, 0xFF	; 255
    7356:	08 95       	ret

00007358 <__tablejump2__>:
    7358:	ee 0f       	add	r30, r30
    735a:	ff 1f       	adc	r31, r31
    735c:	88 1f       	adc	r24, r24
    735e:	8b bf       	out	0x3b, r24	; 59
    7360:	07 90       	elpm	r0, Z+
    7362:	f6 91       	elpm	r31, Z
    7364:	e0 2d       	mov	r30, r0
    7366:	19 94       	eijmp

00007368 <__umulhisi3>:
    7368:	a2 9f       	mul	r26, r18
    736a:	b0 01       	movw	r22, r0
    736c:	b3 9f       	mul	r27, r19
    736e:	c0 01       	movw	r24, r0
    7370:	a3 9f       	mul	r26, r19
    7372:	70 0d       	add	r23, r0
    7374:	81 1d       	adc	r24, r1
    7376:	11 24       	eor	r1, r1
    7378:	91 1d       	adc	r25, r1
    737a:	b2 9f       	mul	r27, r18
    737c:	70 0d       	add	r23, r0
    737e:	81 1d       	adc	r24, r1
    7380:	11 24       	eor	r1, r1
    7382:	91 1d       	adc	r25, r1
    7384:	08 95       	ret

00007386 <__muluhisi3>:
    7386:	0e 94 b4 39 	call	0x7368	; 0x7368 <__umulhisi3>
    738a:	a5 9f       	mul	r26, r21
    738c:	90 0d       	add	r25, r0
    738e:	b4 9f       	mul	r27, r20
    7390:	90 0d       	add	r25, r0
    7392:	a4 9f       	mul	r26, r20
    7394:	80 0d       	add	r24, r0
    7396:	91 1d       	adc	r25, r1
    7398:	11 24       	eor	r1, r1
    739a:	08 95       	ret

0000739c <malloc>:
    739c:	cf 93       	push	r28
    739e:	df 93       	push	r29
    73a0:	82 30       	cpi	r24, 0x02	; 2
    73a2:	91 05       	cpc	r25, r1
    73a4:	10 f4       	brcc	.+4      	; 0x73aa <malloc+0xe>
    73a6:	82 e0       	ldi	r24, 0x02	; 2
    73a8:	90 e0       	ldi	r25, 0x00	; 0
    73aa:	e0 91 fb 26 	lds	r30, 0x26FB	; 0x8026fb <__flp>
    73ae:	f0 91 fc 26 	lds	r31, 0x26FC	; 0x8026fc <__flp+0x1>
    73b2:	20 e0       	ldi	r18, 0x00	; 0
    73b4:	30 e0       	ldi	r19, 0x00	; 0
    73b6:	c0 e0       	ldi	r28, 0x00	; 0
    73b8:	d0 e0       	ldi	r29, 0x00	; 0
    73ba:	30 97       	sbiw	r30, 0x00	; 0
    73bc:	11 f1       	breq	.+68     	; 0x7402 <malloc+0x66>
    73be:	40 81       	ld	r20, Z
    73c0:	51 81       	ldd	r21, Z+1	; 0x01
    73c2:	48 17       	cp	r20, r24
    73c4:	59 07       	cpc	r21, r25
    73c6:	c0 f0       	brcs	.+48     	; 0x73f8 <malloc+0x5c>
    73c8:	48 17       	cp	r20, r24
    73ca:	59 07       	cpc	r21, r25
    73cc:	61 f4       	brne	.+24     	; 0x73e6 <malloc+0x4a>
    73ce:	82 81       	ldd	r24, Z+2	; 0x02
    73d0:	93 81       	ldd	r25, Z+3	; 0x03
    73d2:	20 97       	sbiw	r28, 0x00	; 0
    73d4:	19 f0       	breq	.+6      	; 0x73dc <malloc+0x40>
    73d6:	8a 83       	std	Y+2, r24	; 0x02
    73d8:	9b 83       	std	Y+3, r25	; 0x03
    73da:	2b c0       	rjmp	.+86     	; 0x7432 <malloc+0x96>
    73dc:	80 93 fb 26 	sts	0x26FB, r24	; 0x8026fb <__flp>
    73e0:	90 93 fc 26 	sts	0x26FC, r25	; 0x8026fc <__flp+0x1>
    73e4:	26 c0       	rjmp	.+76     	; 0x7432 <malloc+0x96>
    73e6:	21 15       	cp	r18, r1
    73e8:	31 05       	cpc	r19, r1
    73ea:	19 f0       	breq	.+6      	; 0x73f2 <malloc+0x56>
    73ec:	42 17       	cp	r20, r18
    73ee:	53 07       	cpc	r21, r19
    73f0:	18 f4       	brcc	.+6      	; 0x73f8 <malloc+0x5c>
    73f2:	9a 01       	movw	r18, r20
    73f4:	be 01       	movw	r22, r28
    73f6:	df 01       	movw	r26, r30
    73f8:	ef 01       	movw	r28, r30
    73fa:	02 80       	ldd	r0, Z+2	; 0x02
    73fc:	f3 81       	ldd	r31, Z+3	; 0x03
    73fe:	e0 2d       	mov	r30, r0
    7400:	dc cf       	rjmp	.-72     	; 0x73ba <malloc+0x1e>
    7402:	21 15       	cp	r18, r1
    7404:	31 05       	cpc	r19, r1
    7406:	09 f1       	breq	.+66     	; 0x744a <malloc+0xae>
    7408:	28 1b       	sub	r18, r24
    740a:	39 0b       	sbc	r19, r25
    740c:	24 30       	cpi	r18, 0x04	; 4
    740e:	31 05       	cpc	r19, r1
    7410:	90 f4       	brcc	.+36     	; 0x7436 <malloc+0x9a>
    7412:	12 96       	adiw	r26, 0x02	; 2
    7414:	8d 91       	ld	r24, X+
    7416:	9c 91       	ld	r25, X
    7418:	13 97       	sbiw	r26, 0x03	; 3
    741a:	61 15       	cp	r22, r1
    741c:	71 05       	cpc	r23, r1
    741e:	21 f0       	breq	.+8      	; 0x7428 <malloc+0x8c>
    7420:	fb 01       	movw	r30, r22
    7422:	82 83       	std	Z+2, r24	; 0x02
    7424:	93 83       	std	Z+3, r25	; 0x03
    7426:	04 c0       	rjmp	.+8      	; 0x7430 <malloc+0x94>
    7428:	80 93 fb 26 	sts	0x26FB, r24	; 0x8026fb <__flp>
    742c:	90 93 fc 26 	sts	0x26FC, r25	; 0x8026fc <__flp+0x1>
    7430:	fd 01       	movw	r30, r26
    7432:	32 96       	adiw	r30, 0x02	; 2
    7434:	44 c0       	rjmp	.+136    	; 0x74be <malloc+0x122>
    7436:	fd 01       	movw	r30, r26
    7438:	e2 0f       	add	r30, r18
    743a:	f3 1f       	adc	r31, r19
    743c:	81 93       	st	Z+, r24
    743e:	91 93       	st	Z+, r25
    7440:	22 50       	subi	r18, 0x02	; 2
    7442:	31 09       	sbc	r19, r1
    7444:	2d 93       	st	X+, r18
    7446:	3c 93       	st	X, r19
    7448:	3a c0       	rjmp	.+116    	; 0x74be <malloc+0x122>
    744a:	20 91 f9 26 	lds	r18, 0x26F9	; 0x8026f9 <__brkval>
    744e:	30 91 fa 26 	lds	r19, 0x26FA	; 0x8026fa <__brkval+0x1>
    7452:	23 2b       	or	r18, r19
    7454:	41 f4       	brne	.+16     	; 0x7466 <malloc+0xca>
    7456:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    745a:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    745e:	20 93 f9 26 	sts	0x26F9, r18	; 0x8026f9 <__brkval>
    7462:	30 93 fa 26 	sts	0x26FA, r19	; 0x8026fa <__brkval+0x1>
    7466:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    746a:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    746e:	21 15       	cp	r18, r1
    7470:	31 05       	cpc	r19, r1
    7472:	41 f4       	brne	.+16     	; 0x7484 <malloc+0xe8>
    7474:	2d b7       	in	r18, 0x3d	; 61
    7476:	3e b7       	in	r19, 0x3e	; 62
    7478:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    747c:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    7480:	24 1b       	sub	r18, r20
    7482:	35 0b       	sbc	r19, r21
    7484:	e0 91 f9 26 	lds	r30, 0x26F9	; 0x8026f9 <__brkval>
    7488:	f0 91 fa 26 	lds	r31, 0x26FA	; 0x8026fa <__brkval+0x1>
    748c:	e2 17       	cp	r30, r18
    748e:	f3 07       	cpc	r31, r19
    7490:	a0 f4       	brcc	.+40     	; 0x74ba <malloc+0x11e>
    7492:	2e 1b       	sub	r18, r30
    7494:	3f 0b       	sbc	r19, r31
    7496:	28 17       	cp	r18, r24
    7498:	39 07       	cpc	r19, r25
    749a:	78 f0       	brcs	.+30     	; 0x74ba <malloc+0x11e>
    749c:	ac 01       	movw	r20, r24
    749e:	4e 5f       	subi	r20, 0xFE	; 254
    74a0:	5f 4f       	sbci	r21, 0xFF	; 255
    74a2:	24 17       	cp	r18, r20
    74a4:	35 07       	cpc	r19, r21
    74a6:	48 f0       	brcs	.+18     	; 0x74ba <malloc+0x11e>
    74a8:	4e 0f       	add	r20, r30
    74aa:	5f 1f       	adc	r21, r31
    74ac:	40 93 f9 26 	sts	0x26F9, r20	; 0x8026f9 <__brkval>
    74b0:	50 93 fa 26 	sts	0x26FA, r21	; 0x8026fa <__brkval+0x1>
    74b4:	81 93       	st	Z+, r24
    74b6:	91 93       	st	Z+, r25
    74b8:	02 c0       	rjmp	.+4      	; 0x74be <malloc+0x122>
    74ba:	e0 e0       	ldi	r30, 0x00	; 0
    74bc:	f0 e0       	ldi	r31, 0x00	; 0
    74be:	cf 01       	movw	r24, r30
    74c0:	df 91       	pop	r29
    74c2:	cf 91       	pop	r28
    74c4:	08 95       	ret

000074c6 <free>:
    74c6:	0f 93       	push	r16
    74c8:	1f 93       	push	r17
    74ca:	cf 93       	push	r28
    74cc:	df 93       	push	r29
    74ce:	00 97       	sbiw	r24, 0x00	; 0
    74d0:	09 f4       	brne	.+2      	; 0x74d4 <free+0xe>
    74d2:	8c c0       	rjmp	.+280    	; 0x75ec <free+0x126>
    74d4:	fc 01       	movw	r30, r24
    74d6:	32 97       	sbiw	r30, 0x02	; 2
    74d8:	12 82       	std	Z+2, r1	; 0x02
    74da:	13 82       	std	Z+3, r1	; 0x03
    74dc:	00 91 fb 26 	lds	r16, 0x26FB	; 0x8026fb <__flp>
    74e0:	10 91 fc 26 	lds	r17, 0x26FC	; 0x8026fc <__flp+0x1>
    74e4:	01 15       	cp	r16, r1
    74e6:	11 05       	cpc	r17, r1
    74e8:	81 f4       	brne	.+32     	; 0x750a <free+0x44>
    74ea:	20 81       	ld	r18, Z
    74ec:	31 81       	ldd	r19, Z+1	; 0x01
    74ee:	82 0f       	add	r24, r18
    74f0:	93 1f       	adc	r25, r19
    74f2:	20 91 f9 26 	lds	r18, 0x26F9	; 0x8026f9 <__brkval>
    74f6:	30 91 fa 26 	lds	r19, 0x26FA	; 0x8026fa <__brkval+0x1>
    74fa:	28 17       	cp	r18, r24
    74fc:	39 07       	cpc	r19, r25
    74fe:	79 f5       	brne	.+94     	; 0x755e <free+0x98>
    7500:	e0 93 f9 26 	sts	0x26F9, r30	; 0x8026f9 <__brkval>
    7504:	f0 93 fa 26 	sts	0x26FA, r31	; 0x8026fa <__brkval+0x1>
    7508:	71 c0       	rjmp	.+226    	; 0x75ec <free+0x126>
    750a:	d8 01       	movw	r26, r16
    750c:	40 e0       	ldi	r20, 0x00	; 0
    750e:	50 e0       	ldi	r21, 0x00	; 0
    7510:	ae 17       	cp	r26, r30
    7512:	bf 07       	cpc	r27, r31
    7514:	50 f4       	brcc	.+20     	; 0x752a <free+0x64>
    7516:	12 96       	adiw	r26, 0x02	; 2
    7518:	2d 91       	ld	r18, X+
    751a:	3c 91       	ld	r19, X
    751c:	13 97       	sbiw	r26, 0x03	; 3
    751e:	ad 01       	movw	r20, r26
    7520:	21 15       	cp	r18, r1
    7522:	31 05       	cpc	r19, r1
    7524:	09 f1       	breq	.+66     	; 0x7568 <free+0xa2>
    7526:	d9 01       	movw	r26, r18
    7528:	f3 cf       	rjmp	.-26     	; 0x7510 <free+0x4a>
    752a:	9d 01       	movw	r18, r26
    752c:	da 01       	movw	r26, r20
    752e:	22 83       	std	Z+2, r18	; 0x02
    7530:	33 83       	std	Z+3, r19	; 0x03
    7532:	60 81       	ld	r22, Z
    7534:	71 81       	ldd	r23, Z+1	; 0x01
    7536:	86 0f       	add	r24, r22
    7538:	97 1f       	adc	r25, r23
    753a:	82 17       	cp	r24, r18
    753c:	93 07       	cpc	r25, r19
    753e:	69 f4       	brne	.+26     	; 0x755a <free+0x94>
    7540:	ec 01       	movw	r28, r24
    7542:	28 81       	ld	r18, Y
    7544:	39 81       	ldd	r19, Y+1	; 0x01
    7546:	26 0f       	add	r18, r22
    7548:	37 1f       	adc	r19, r23
    754a:	2e 5f       	subi	r18, 0xFE	; 254
    754c:	3f 4f       	sbci	r19, 0xFF	; 255
    754e:	20 83       	st	Z, r18
    7550:	31 83       	std	Z+1, r19	; 0x01
    7552:	8a 81       	ldd	r24, Y+2	; 0x02
    7554:	9b 81       	ldd	r25, Y+3	; 0x03
    7556:	82 83       	std	Z+2, r24	; 0x02
    7558:	93 83       	std	Z+3, r25	; 0x03
    755a:	45 2b       	or	r20, r21
    755c:	29 f4       	brne	.+10     	; 0x7568 <free+0xa2>
    755e:	e0 93 fb 26 	sts	0x26FB, r30	; 0x8026fb <__flp>
    7562:	f0 93 fc 26 	sts	0x26FC, r31	; 0x8026fc <__flp+0x1>
    7566:	42 c0       	rjmp	.+132    	; 0x75ec <free+0x126>
    7568:	12 96       	adiw	r26, 0x02	; 2
    756a:	ed 93       	st	X+, r30
    756c:	fc 93       	st	X, r31
    756e:	13 97       	sbiw	r26, 0x03	; 3
    7570:	ed 01       	movw	r28, r26
    7572:	49 91       	ld	r20, Y+
    7574:	59 91       	ld	r21, Y+
    7576:	9e 01       	movw	r18, r28
    7578:	24 0f       	add	r18, r20
    757a:	35 1f       	adc	r19, r21
    757c:	e2 17       	cp	r30, r18
    757e:	f3 07       	cpc	r31, r19
    7580:	71 f4       	brne	.+28     	; 0x759e <free+0xd8>
    7582:	80 81       	ld	r24, Z
    7584:	91 81       	ldd	r25, Z+1	; 0x01
    7586:	84 0f       	add	r24, r20
    7588:	95 1f       	adc	r25, r21
    758a:	02 96       	adiw	r24, 0x02	; 2
    758c:	8d 93       	st	X+, r24
    758e:	9c 93       	st	X, r25
    7590:	11 97       	sbiw	r26, 0x01	; 1
    7592:	82 81       	ldd	r24, Z+2	; 0x02
    7594:	93 81       	ldd	r25, Z+3	; 0x03
    7596:	12 96       	adiw	r26, 0x02	; 2
    7598:	8d 93       	st	X+, r24
    759a:	9c 93       	st	X, r25
    759c:	13 97       	sbiw	r26, 0x03	; 3
    759e:	e0 e0       	ldi	r30, 0x00	; 0
    75a0:	f0 e0       	ldi	r31, 0x00	; 0
    75a2:	d8 01       	movw	r26, r16
    75a4:	12 96       	adiw	r26, 0x02	; 2
    75a6:	8d 91       	ld	r24, X+
    75a8:	9c 91       	ld	r25, X
    75aa:	13 97       	sbiw	r26, 0x03	; 3
    75ac:	00 97       	sbiw	r24, 0x00	; 0
    75ae:	19 f0       	breq	.+6      	; 0x75b6 <free+0xf0>
    75b0:	f8 01       	movw	r30, r16
    75b2:	8c 01       	movw	r16, r24
    75b4:	f6 cf       	rjmp	.-20     	; 0x75a2 <free+0xdc>
    75b6:	8d 91       	ld	r24, X+
    75b8:	9c 91       	ld	r25, X
    75ba:	98 01       	movw	r18, r16
    75bc:	2e 5f       	subi	r18, 0xFE	; 254
    75be:	3f 4f       	sbci	r19, 0xFF	; 255
    75c0:	82 0f       	add	r24, r18
    75c2:	93 1f       	adc	r25, r19
    75c4:	20 91 f9 26 	lds	r18, 0x26F9	; 0x8026f9 <__brkval>
    75c8:	30 91 fa 26 	lds	r19, 0x26FA	; 0x8026fa <__brkval+0x1>
    75cc:	28 17       	cp	r18, r24
    75ce:	39 07       	cpc	r19, r25
    75d0:	69 f4       	brne	.+26     	; 0x75ec <free+0x126>
    75d2:	30 97       	sbiw	r30, 0x00	; 0
    75d4:	29 f4       	brne	.+10     	; 0x75e0 <free+0x11a>
    75d6:	10 92 fb 26 	sts	0x26FB, r1	; 0x8026fb <__flp>
    75da:	10 92 fc 26 	sts	0x26FC, r1	; 0x8026fc <__flp+0x1>
    75de:	02 c0       	rjmp	.+4      	; 0x75e4 <free+0x11e>
    75e0:	12 82       	std	Z+2, r1	; 0x02
    75e2:	13 82       	std	Z+3, r1	; 0x03
    75e4:	00 93 f9 26 	sts	0x26F9, r16	; 0x8026f9 <__brkval>
    75e8:	10 93 fa 26 	sts	0x26FA, r17	; 0x8026fa <__brkval+0x1>
    75ec:	df 91       	pop	r29
    75ee:	cf 91       	pop	r28
    75f0:	1f 91       	pop	r17
    75f2:	0f 91       	pop	r16
    75f4:	08 95       	ret

000075f6 <memcpy>:
    75f6:	fb 01       	movw	r30, r22
    75f8:	dc 01       	movw	r26, r24
    75fa:	02 c0       	rjmp	.+4      	; 0x7600 <memcpy+0xa>
    75fc:	01 90       	ld	r0, Z+
    75fe:	0d 92       	st	X+, r0
    7600:	41 50       	subi	r20, 0x01	; 1
    7602:	50 40       	sbci	r21, 0x00	; 0
    7604:	d8 f7       	brcc	.-10     	; 0x75fc <memcpy+0x6>
    7606:	08 95       	ret

00007608 <eeprom_read_dword>:
    7608:	0e 94 1c 3b 	call	0x7638	; 0x7638 <eeprom_mapen>
    760c:	60 81       	ld	r22, Z
    760e:	71 81       	ldd	r23, Z+1	; 0x01
    7610:	82 81       	ldd	r24, Z+2	; 0x02
    7612:	93 81       	ldd	r25, Z+3	; 0x03
    7614:	08 95       	ret

00007616 <eeprom_write_dword>:
    7616:	24 2f       	mov	r18, r20
    7618:	0e 94 29 3b 	call	0x7652	; 0x7652 <eeprom_write_r18>
    761c:	25 2f       	mov	r18, r21
    761e:	0e 94 29 3b 	call	0x7652	; 0x7652 <eeprom_write_r18>
    7622:	0c 94 13 3b 	jmp	0x7626	; 0x7626 <eeprom_write_word>

00007626 <eeprom_write_word>:
    7626:	0e 94 28 3b 	call	0x7650	; 0x7650 <eeprom_write_byte>
    762a:	27 2f       	mov	r18, r23
    762c:	0c 94 29 3b 	jmp	0x7652	; 0x7652 <eeprom_write_r18>

00007630 <eeprom_read_byte>:
    7630:	03 d0       	rcall	.+6      	; 0x7638 <eeprom_mapen>
    7632:	80 81       	ld	r24, Z
    7634:	99 27       	eor	r25, r25
    7636:	08 95       	ret

00007638 <eeprom_mapen>:
    7638:	e0 ec       	ldi	r30, 0xC0	; 192
    763a:	f1 e0       	ldi	r31, 0x01	; 1
    763c:	37 85       	ldd	r19, Z+15	; 0x0f
    763e:	37 fd       	sbrc	r19, 7
    7640:	fd cf       	rjmp	.-6      	; 0x763c <eeprom_mapen+0x4>
    7642:	34 85       	ldd	r19, Z+12	; 0x0c
    7644:	38 60       	ori	r19, 0x08	; 8
    7646:	34 87       	std	Z+12, r19	; 0x0c
    7648:	fc 01       	movw	r30, r24
    764a:	e0 50       	subi	r30, 0x00	; 0
    764c:	f0 4f       	sbci	r31, 0xF0	; 240
    764e:	08 95       	ret

00007650 <eeprom_write_byte>:
    7650:	26 2f       	mov	r18, r22

00007652 <eeprom_write_r18>:
    7652:	e0 ec       	ldi	r30, 0xC0	; 192
    7654:	f1 e0       	ldi	r31, 0x01	; 1
    7656:	37 85       	ldd	r19, Z+15	; 0x0f
    7658:	37 fd       	sbrc	r19, 7
    765a:	fd cf       	rjmp	.-6      	; 0x7656 <eeprom_write_r18+0x4>
    765c:	34 85       	ldd	r19, Z+12	; 0x0c
    765e:	37 7f       	andi	r19, 0xF7	; 247
    7660:	34 87       	std	Z+12, r19	; 0x0c
    7662:	37 85       	ldd	r19, Z+15	; 0x0f
    7664:	31 ff       	sbrs	r19, 1
    7666:	09 c0       	rjmp	.+18     	; 0x767a <eeprom_write_r18+0x28>
    7668:	36 e3       	ldi	r19, 0x36	; 54
    766a:	32 87       	std	Z+10, r19	; 0x0a
    766c:	38 ed       	ldi	r19, 0xD8	; 216
    766e:	34 bf       	out	0x34, r19	; 52
    7670:	31 e0       	ldi	r19, 0x01	; 1
    7672:	33 87       	std	Z+11, r19	; 0x0b
    7674:	37 85       	ldd	r19, Z+15	; 0x0f
    7676:	37 fd       	sbrc	r19, 7
    7678:	fd cf       	rjmp	.-6      	; 0x7674 <eeprom_write_r18+0x22>
    767a:	33 e3       	ldi	r19, 0x33	; 51
    767c:	32 87       	std	Z+10, r19	; 0x0a
    767e:	80 83       	st	Z, r24
    7680:	91 83       	std	Z+1, r25	; 0x01
    7682:	12 82       	std	Z+2, r1	; 0x02
    7684:	24 83       	std	Z+4, r18	; 0x04
    7686:	25 e3       	ldi	r18, 0x35	; 53
    7688:	22 87       	std	Z+10, r18	; 0x0a
    768a:	28 ed       	ldi	r18, 0xD8	; 216
    768c:	31 e0       	ldi	r19, 0x01	; 1
    768e:	24 bf       	out	0x34, r18	; 52
    7690:	33 87       	std	Z+11, r19	; 0x0b
    7692:	01 96       	adiw	r24, 0x01	; 1
    7694:	08 95       	ret

00007696 <__do_global_dtors>:
    7696:	12 e0       	ldi	r17, 0x02	; 2
    7698:	cc e8       	ldi	r28, 0x8C	; 140
    769a:	d2 e0       	ldi	r29, 0x02	; 2
    769c:	00 e0       	ldi	r16, 0x00	; 0
    769e:	06 c0       	rjmp	.+12     	; 0x76ac <__do_global_dtors+0x16>
    76a0:	80 2f       	mov	r24, r16
    76a2:	fe 01       	movw	r30, r28
    76a4:	0e 94 ac 39 	call	0x7358	; 0x7358 <__tablejump2__>
    76a8:	21 96       	adiw	r28, 0x01	; 1
    76aa:	01 1d       	adc	r16, r1
    76ac:	cd 38       	cpi	r28, 0x8D	; 141
    76ae:	d1 07       	cpc	r29, r17
    76b0:	80 e0       	ldi	r24, 0x00	; 0
    76b2:	08 07       	cpc	r16, r24
    76b4:	a9 f7       	brne	.-22     	; 0x76a0 <__do_global_dtors+0xa>
    76b6:	f8 94       	cli

000076b8 <__stop_program>:
    76b8:	ff cf       	rjmp	.-2      	; 0x76b8 <__stop_program>
